syntax = "proto2";
message MasterSubscriptionCountBonusReward {
  optional uint32 purchaseId = 1; // normal type
  optional uint32 paymentCount = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
  optional string reason = 6; // normal type
  optional uint32 expiredDays = 7; // normal type
}
message MasterSubscriptionCountBonusRewardList {
  repeated MasterSubscriptionCountBonusReward entries = 1; // list
}
message MasterTimerWordingCollection {
  optional uint32 id = 1; // normal type
  optional string name = 2; // normal type
  optional string wording = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
}
message uint_MasterTimerWordingCollection {
  optional uint32 uint_MasterTimerWordingCollection_key = 1; // normal type
  optional MasterTimerWordingCollection uint_MasterTimerWordingCollection_value = 2; // sub class
}
message MasterTimerWordingCollectionMap {
  repeated uint_MasterTimerWordingCollection entries = 1; // dictionary
}
message MasterMatchingBonus {
  optional uint32 matchingBonusId = 1; // normal type
  optional string matchingBonusName = 2; // normal type
  optional uint64 startAt = 3; // normal type
  optional uint64 endAt = 4; // normal type
}
message uint_MasterMatchingBonus {
  optional uint32 uint_MasterMatchingBonus_key = 1; // normal type
  optional MasterMatchingBonus uint_MasterMatchingBonus_value = 2; // sub class
}
message MasterMatchingBonusMap {
  repeated uint_MasterMatchingBonus entries = 1; // dictionary
}
message MasterMatchingBonusReward {
  optional uint32 matchingBonusId = 1; // normal type
  optional uint32 matchingCount = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
}
message MasterMatchingBonusRewardList {
  repeated MasterMatchingBonusReward entries = 1; // array
}
message MasterBandStoryIntroduction {
  optional uint32 bandStoryChapterId = 1; // normal type
  optional string introduction = 2; // normal type
  optional string resourceSetName = 3; // normal type
  optional string resourceFileName = 4; // normal type
  optional string logoResourceSetName = 5; // normal type
  optional string logoResourceFileName = 6; // normal type
}
message MasterBandStoryIntroductionList {
  repeated MasterBandStoryIntroduction entries = 1; // list
}
message MasterEventStoryIntroduction {
  optional uint32 eventId = 1; // normal type
  optional string introduction = 2; // normal type
  optional string resourceSetName = 3; // normal type
  optional string resourceFileName = 4; // normal type
  optional string logoResourceSetName = 5; // normal type
  optional string logoResourceFileName = 6; // normal type
}
message MasterEventStoryIntroductionList {
  repeated MasterEventStoryIntroduction entries = 1; // list
}
message MasterIngameV2Talking {
  optional string voiceFileName = 1; // normal type
  optional string motion = 2; // normal type
  optional uint32 characterId = 3; // normal type
  optional string motion3d = 4; // normal type
}
message MasterIngameV2TalkingList {
  repeated MasterIngameV2Talking entries = 1; // list
}
message uint_MasterIngameV2TalkingList {
  optional uint32 uint_MasterIngameV2TalkingList_key = 1; // normal type
  optional MasterIngameV2TalkingList uint_MasterIngameV2TalkingList_value = 2; // sub class
}
message MasterIngameV2TalkingMap {
  repeated uint_MasterIngameV2TalkingList entries = 1; // dictionary
}
message MasterIngameV2SpecialTalking {
  optional string costumeName = 1; // normal type
  optional string formerMotion = 2; // normal type
  optional string motion = 3; // normal type
}
message string_MasterIngameV2SpecialTalking {
  optional string string_MasterIngameV2SpecialTalking_key = 1; // normal type
  optional MasterIngameV2SpecialTalking string_MasterIngameV2SpecialTalking_value = 2; // sub class
}
message MasterIngameV2SpecialTalkingMap {
  repeated string_MasterIngameV2SpecialTalking entries = 1; // dictionary
}
message MasterMultiFestivalLiveMatchingLogic {
  optional uint32 id = 1; // normal type
  optional uint32 logicOrder = 2; // normal type
  optional uint32 totalPowerFrom = 3; // normal type
  optional uint32 totalPowerTo = 4; // normal type
  optional int32 searchFrom = 5; // normal type
  optional int32 searchTo = 6; // normal type
}
message MasterMultiFestivalLiveMatchingLogicList {
  repeated MasterMultiFestivalLiveMatchingLogic entries = 1; // array
}
message MasterMultiFestivalLiveTeamMatchingLogic {
  optional uint32 id = 1; // normal type
  optional uint32 logicOrder = 2; // normal type
  optional uint32 totalPowerFrom = 3; // normal type
  optional uint32 totalPowerTo = 4; // normal type
  optional int32 searchFrom = 5; // normal type
  optional int32 searchTo = 6; // normal type
}
message MasterMultiFestivalLiveTeamMatchingLogicList {
  repeated MasterMultiFestivalLiveTeamMatchingLogic entries = 1; // array
}
message FestivalJudgeRate {
  optional string stageType = 1; // normal type
  optional string judgement = 2; // normal type
  optional float scoreRate = 3; // normal type
  optional bool effectFlag = 4; // normal type
  optional uint32 effectLevel = 5; // normal type
}
message MasterFestivalJudgeRateList {
  repeated FestivalJudgeRate entries = 1; // array
}
message FestivalLifeRate {
  optional string stageType = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 fromCondition = 3; // normal type
  optional uint32 toCondition = 4; // normal type
  optional float scoreRate = 5; // normal type
  optional bool effectFlag = 6; // normal type
  optional uint32 effectLevel = 7; // normal type
}
message MasterFestivalLifeRateList {
  repeated FestivalLifeRate entries = 1; // array
}
message FestivalComboRate {
  optional string stageType = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 fromCondition = 3; // normal type
  optional uint32 toCondition = 4; // normal type
  optional float scoreRate = 5; // normal type
  optional bool effectFlag = 6; // normal type
  optional uint32 effectLevel = 7; // normal type
}
message MasterFestivalComboRateList {
  repeated FestivalComboRate entries = 1; // array
}
message MasterQualifyTournamentComboRate {
  optional uint32 qualifyTournamentId = 1; // normal type
  optional string qualifyTournamentType = 2; // normal type
  optional uint32 fromCondition = 3; // normal type
  optional uint32 toCondition = 4; // normal type
  optional float scoreRate = 5; // normal type
}
message MasterQualifyTournamentComboRateList {
  repeated MasterQualifyTournamentComboRate entries = 1; // list
}
message MasterMusicAchievement {
  optional uint32 musicId = 1; // normal type
  optional string achievementType = 2; // normal type
  optional string rewardType = 3; // normal type
  optional uint32 rewardId = 4; // normal type
  optional uint32 quantity = 5; // normal type
}
message MasterMusicGetResponse {
  optional uint32 musicId = 1; // normal type
  optional string musicTitle = 2; // normal type
  optional string bgmId = 3; // normal type
  optional string bgmFile = 4; // normal type
  optional string lyricist = 5; // normal type
  optional string composer = 6; // normal type
  optional string tag = 7; // normal type
  optional string description = 8; // normal type
  optional string arranger = 9; // normal type
  optional string ruby = 10; // normal type
  optional uint32 bandId = 11; // normal type
  optional string howToGet = 12; // normal type
  repeated MasterMusicAchievement achievements = 13; // array
  optional string jacketImage = 14; // normal type
  optional uint32 seq = 15; // normal type
  optional uint64 publishedAt = 16; // normal type
  optional uint64 closedAt = 17; // normal type
  optional string transitionMethod = 18; // normal type
  optional uint32 transitionId = 19; // normal type
  optional string phonetic = 20; // normal type
  optional string musicDataType = 21; // normal type
  optional uint32 categorySetId = 22; // normal type
}
message MasterMusicListGetResponse {
  repeated MasterMusicGetResponse entries = 1; // array
}
message MasterMultiLiveScore {
  optional uint32 musicId = 1; // normal type
  optional string musicDifficulty = 2; // normal type
  optional uint32 multiLiveDifficultyId = 3; // normal type
  optional uint32 scoreS = 4; // normal type
  optional uint32 scoreA = 5; // normal type
  optional uint32 scoreB = 6; // normal type
  optional uint32 scoreC = 7; // normal type
  optional string multiLiveDifficultyType = 8; // normal type
  optional uint32 scoreSS = 9; // normal type
  optional uint32 scoreSSS = 10; // normal type
}
message uint_MasterMultiLiveScore {
  optional uint32 uint_MasterMultiLiveScore_key = 1; // normal type
  optional MasterMultiLiveScore uint_MasterMultiLiveScore_value = 2; // sub class
}
message MasterMusicDifficultyGetResponse {
  optional uint32 musicId = 1; // normal type
  optional string difficulty = 2; // normal type
  optional uint32 playLevel = 3; // normal type
  repeated uint_MasterMultiLiveScore multiLiveScoreMap = 4; // dictionary
  optional uint32 notesQuantity = 5; // normal type
  optional uint32 scoreS = 6; // normal type
  optional uint32 scoreA = 7; // normal type
  optional uint32 scoreB = 8; // normal type
  optional uint32 scoreC = 9; // normal type
  optional uint32 scoreSS = 10; // normal type
  optional uint64 publishedAt = 11; // normal type
  optional bool enableSpecialNotes = 12; // normal type
}
message MasterMusicDifficultyListGetResponse {
  repeated MasterMusicDifficultyGetResponse entries = 1; // array
}
message MasterMissionReward {
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
}
message MasterMissionDetailReleaseCondition {
  optional string hint = 1; // normal type
  optional string releaseConditionDescription = 2; // normal type
  optional uint32 releaseRank = 3; // normal type
}
message MasterMissionDetail {
  optional uint32 seq = 2; // normal type
  optional string title = 3; // normal type
  optional string description = 4; // normal type
  optional uint32 maxProgress = 5; // normal type
  repeated uint32 values = 7; // array
  optional uint32 valueId = 11; // normal type
  optional MasterMissionReward reward = 12; // sub class
  optional MasterMissionDetailReleaseCondition releaseCondition = 13; // sub class
}
message MasterMissionDetailList {
  repeated MasterMissionDetail entries = 1; // array
}
message MasterMission {
  optional uint32 missionId = 1; // normal type
  optional string transitionMethod = 3; // normal type
  optional uint32 transitionId = 4; // normal type
  optional uint64 startAt = 5; // normal type
  optional uint32 seq = 8; // normal type
  optional uint32 valueId = 17; // normal type
  optional MasterMissionDetailList detailList = 18; // sub class
  optional string labelText = 19; // normal type
  optional uint32 typeIndex = 20; // normal type
}
message MasterMissionList {
  repeated MasterMission entries = 1; // array
}
message MasterMultiLiveDifficulty {
  optional uint32 id = 1; // normal type
  optional string difficulty = 2; // normal type
  optional uint32 requiredTotalParam = 3; // normal type
  optional float bonusRate = 4; // normal type
  optional uint32 seq = 5; // normal type
  optional string multiLiveDifficultyType = 6; // normal type
  optional uint32 matchingLogicId = 7; // normal type
  optional string roomName = 8; // normal type
  optional string requiredColorCode = 9; // normal type
  optional MasterMissionList masterMissionList = 10; // sub class
}
message uint_MasterMultiLiveDifficulty {
  optional uint32 uint_MasterMultiLiveDifficulty_key = 1; // normal type
  optional MasterMultiLiveDifficulty uint_MasterMultiLiveDifficulty_value = 2; // sub class
}
message MasterMultiLiveDifficultyMap {
  repeated uint_MasterMultiLiveDifficulty entries = 1; // dictionary
}
message MasterCharacterProfile {
  optional uint32 characterId = 1; // normal type
  optional string part = 2; // normal type
  optional string characterVoice = 3; // normal type
  optional string school = 4; // normal type
  optional string schoolYear = 5; // normal type
  optional uint64 birthday = 6; // normal type
  optional string constellation = 7; // normal type
  optional string favoriteFood = 8; // normal type
  optional string hatedFood = 9; // normal type
  optional string hobby = 10; // normal type
  optional string selfIntroduction = 11; // normal type
  optional uint32 height = 12; // normal type
  optional string schoolCls = 13; // normal type
  optional string schoolType = 14; // normal type
  optional string faculty = 15; // normal type
}
message MasterCharacterSeasonCostume {
  optional uint32 characterId = 1; // normal type
  optional uint32 basicSeasonId = 2; // normal type
  optional string costumeType = 3; // normal type
  optional string seasonCostumeType = 4; // normal type
  optional string sdAssetBundleName = 5; // normal type
  optional string live2dAssetBundleName = 6; // normal type
  optional string seasonType = 7; // normal type
}
message MasterCharacterSeasonCostumeList {
  repeated MasterCharacterSeasonCostume entries = 1; // array
}
message string_MasterCharacterSeasonCostumeList {
  optional string string_MasterCharacterSeasonCostumeList_key = 1; // normal type
  optional MasterCharacterSeasonCostumeList string_MasterCharacterSeasonCostumeList_value = 2; // sub class
}
message MasterCharacterSeasonCostumeListMap {
  repeated string_MasterCharacterSeasonCostumeList entries = 1; // dictionary
}
message PlayerResource {
  optional uint32 resourceId = 1; // normal type
  optional string resourceType = 2; // normal type
  optional uint32 quantity = 3; // normal type
  optional uint32 lbBonus = 4; // normal type
  optional bool firstGet = 5; // normal type
  optional uint32 duplicatedCount = 6; // normal type
}
message PlayerResourceList {
  repeated PlayerResource entries = 1; // array
}
message MasterEpisode {
  optional uint32 episodeId = 1; // normal type
  optional string episodeType = 2; // normal type
  optional uint32 situationId = 3; // normal type
  optional string scenarioId = 4; // normal type
  optional uint32 appendPerformance = 5; // normal type
  optional uint32 appendTechnique = 6; // normal type
  optional uint32 appendVisual = 7; // normal type
  optional uint32 releaseLevel = 8; // normal type
  optional PlayerResourceList costs = 9; // sub class
  optional PlayerResourceList rewards = 10; // sub class
  optional string title = 11; // normal type
  optional uint32 characterId = 12; // normal type
  optional uint32 seasonNo = 13; // normal type
}
message MasterEpisodeList {
  repeated MasterEpisode entries = 1; // array
}
message MasterCharacterSeasonSpecialCostume {
  optional uint32 characterId = 1; // normal type
  optional uint32 areaId = 2; // normal type
  optional uint32 seasonSpecialId = 3; // normal type
  optional string sdAssetBundleName = 4; // normal type
  optional string live2dAssetBundleName = 5; // normal type
}
message MasterCharacterSeasonSpecialCostumeList {
  repeated MasterCharacterSeasonSpecialCostume entries = 1; // array
}
message MasterCharacterInfo {
  optional MasterCharacterProfile profile = 12; // sub class
  optional MasterCharacterSeasonCostumeListMap seasonCostumeListMap = 13; // sub class
  optional MasterEpisodeList selfIntroductionEpisodeList = 14; // sub class
  optional MasterCharacterSeasonSpecialCostumeList seasonSpecialCostumeList = 17; // sub class
  optional uint32 characterId = 1; // normal type
  optional string characterType = 2; // normal type
  optional string characterName = 3; // normal type
  optional string ruby = 4; // normal type
  optional string firstName = 7; // normal type
  optional string lastName = 8; // normal type
  optional uint32 bandId = 9; // normal type
  optional string sdAssetBundleName = 10; // normal type
  optional uint32 defaultCostumeId = 11; // normal type
  optional string nickname = 15; // normal type
  optional string colorCode = 16; // normal type
  optional string uiColorCode = 18; // normal type
  optional uint32 anotherStyleCharacterId = 19; // normal type
  optional string attribute = 20; // normal type
}
message uint_MasterCharacterInfo {
  optional uint32 uint_MasterCharacterInfo_key = 1; // normal type
  optional MasterCharacterInfo uint_MasterCharacterInfo_value = 2; // sub class
}
message MasterCharacterInfoMap {
  repeated uint_MasterCharacterInfo entries = 1; // dictionary
}
message MasterSituationParameter {
  optional uint32 situationId = 1; // normal type
  optional uint32 level = 2; // normal type
  optional uint32 performance = 3; // normal type
  optional uint32 technique = 4; // normal type
  optional uint32 visual = 5; // normal type
}
message uint_MasterSituationParameter {
  optional uint32 uint_MasterSituationParameter_key = 1; // normal type
  optional MasterSituationParameter uint_MasterSituationParameter_value = 2; // sub class
}
message MasterTraining {
  optional uint32 situationId = 1; // normal type
  optional uint32 trainingCostumeId = 2; // normal type
  optional uint32 trainingLevelLimit = 3; // normal type
  optional uint32 trainingPerformance = 4; // normal type
  optional uint32 trainingTechnique = 5; // normal type
  optional uint32 trainingVisual = 6; // normal type
  optional PlayerResourceList costs = 7; // sub class
}
message uint_PlayerResourceList {
  optional uint32 uint_PlayerResourceList_key = 1; // normal type
  optional PlayerResourceList uint_PlayerResourceList_value = 2; // sub class
}
message MasterCharacterSituation3dResourceMap {
  repeated uint_PlayerResourceList entries = 1; // dictionary
}
message MasterCharacterSituation {
  optional uint32 situationId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional uint32 rarity = 3; // normal type
  optional string gachaText = 4; // normal type
  optional string attribute = 5; // normal type
  optional uint32 leaderSkillId = 6; // normal type
  optional uint32 situationSkillId = 7; // normal type
  repeated uint_MasterSituationParameter parameterMap = 8; // dictionary
  optional string prefix = 10; // normal type
  optional uint32 levelLimit = 11; // normal type
  optional string resourceSetName = 12; // normal type
  optional string sdResourceName = 13; // normal type
  optional MasterEpisodeList episodes = 14; // sub class
  optional MasterTraining training = 15; // sub class
  optional uint32 costumeId = 16; // normal type
  optional uint64 releasedAt = 17; // normal type
  optional uint32 seq = 18; // normal type
  optional bool isLimitedBirthdaySituation = 19; // normal type
  optional string situationType = 20; // normal type
  optional MasterCharacterSituation3dResourceMap grantable3dResources = 24; // sub class
  optional uint32 costume3dSetId = 25; // normal type
}
message uint_MasterCharacterSituation {
  optional uint32 uint_MasterCharacterSituation_key = 1; // normal type
  optional MasterCharacterSituation uint_MasterCharacterSituation_value = 2; // sub class
}
message MasterCharacterSituationMap {
  repeated uint_MasterCharacterSituation entries = 1; // dictionary
}
message MasterBandExpTable {
  optional uint32 level = 1; // normal type
  optional uint32 exp = 2; // normal type
}
message uint_MasterBandExpTable {
  optional uint32 uint_MasterBandExpTable_key = 1; // normal type
  optional MasterBandExpTable uint_MasterBandExpTable_value = 2; // sub class
}
message MasterBandExpTableMap {
  repeated uint_MasterBandExpTable entries = 1; // dictionary
}
message MasterLeaderSkill {
  optional uint32 leaderSkillId = 1; // normal type
  optional string leaderSkillType = 2; // normal type
  optional string leaderSkillName = 3; // normal type
  optional string description = 4; // normal type
}
message uint_MasterLeaderSkill {
  optional uint32 uint_MasterLeaderSkill_key = 1; // normal type
  optional MasterLeaderSkill uint_MasterLeaderSkill_value = 2; // sub class
}
message MasterLeaderSkillMap {
  repeated uint_MasterLeaderSkill entries = 1; // dictionary
}
message MasterGachaDetail {
  optional uint32 gachaId = 1; // normal type
  optional uint32 rarityIndex = 2; // normal type
  optional uint32 situationId = 3; // normal type
  optional uint32 weight = 4; // normal type
  optional bool pickup = 5; // normal type
  optional uint32 filter = 6; // normal type
}
message MasterGachaRarityRate {
  optional uint32 gachaId = 1; // normal type
  optional uint32 rarityIndex = 2; // normal type
  optional float rate = 3; // normal type
  optional uint32 weightTotal = 4; // normal type
}
message MasterGachaPaymentMethod {
  optional uint32 gachaId = 1; // normal type
  optional string paymentMethod = 2; // normal type
  optional uint32 quantity = 3; // normal type
  optional uint32 paymentMethodId = 4; // normal type
  optional uint32 count = 5; // normal type
  optional string behavior = 6; // normal type
  optional bool pickup = 7; // normal type
  optional uint32 maxSpinLimit = 8; // nullable
  optional uint32 costItemQuantity = 9; // normal type
  optional uint32 stepNumber = 10; // normal type
  optional string appealImageFileName = 11; // normal type
  optional int32 discountType = 12; // normal type
  optional uint32 ticketId = 13; // normal type
  optional uint32 gachaBonusPoint = 14; // normal type
}
message MasterGachaExtra {
  optional uint32 limit = 1; // normal type
  optional string resourceType = 2; // normal type
  optional uint32 resourceId = 3; // normal type
  optional uint32 resourceQuantity = 4; // normal type
  optional uint32 seq = 5; // normal type
  optional uint32 expiredDays = 6; // nullable
  optional string gachaExtraType = 7; // normal type
  optional string gachaExtraName = 8; // normal type
  optional uint32 paymentMethodId = 9; // normal type
}
message MasterGachaViewLive2d {
  optional uint32 gachaId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 situationId = 3; // normal type
}
message MasterGachaStepup {
  optional uint32 gachaId = 1; // normal type
  optional uint32 stepNumber = 2; // normal type
  optional string balloonType = 3; // normal type
}
message MasterGachaStepupDetail {
  optional uint32 gachaId = 1; // normal type
  optional uint32 stepNumber = 2; // normal type
  optional uint32 situationId = 3; // normal type
  optional uint32 characterId = 4; // normal type
  optional uint32 rarityIndex = 5; // normal type
  optional uint32 weight = 6; // normal type
}
message MasterGachaStepupRarityRate {
  optional uint32 gachaId = 1; // normal type
  optional uint32 stepNumber = 2; // normal type
  optional uint32 rarityIndex = 3; // normal type
  optional float rate = 4; // normal type
  optional uint32 weightTotal = 5; // normal type
}
message MasterGachaStepupExtra {
  optional uint32 gachaId = 1; // normal type
  optional uint32 stepNumber = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional uint32 spinLimit = 4; // normal type
  optional string resourceType = 5; // normal type
  optional uint32 resourceId = 6; // normal type
  optional uint32 resourceQuantity = 7; // normal type
  optional uint32 expiredDays = 8; // normal type
  optional string grantType = 9; // normal type
  optional string description = 10; // normal type
}
message MasterGachaLapAchievement {
  optional uint32 gachaId = 1; // normal type
  optional uint32 lapCount = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 resourceQuantity = 6; // normal type
  optional uint32 expiredDays = 7; // normal type
  optional string grantType = 8; // normal type
}
message MasterStarSealExchangeGachaSeal {
  optional uint32 gachaId = 1; // normal type
  optional uint32 exchangeLimit = 2; // normal type
  optional uint32 amountForOneCount = 3; // normal type
}
message MasterGachaView3d {
  optional uint32 gachaId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 situationId = 3; // normal type
}
message MasterGachaView3dList {
  repeated MasterGachaView3d entries = 1; // array
}
message MasterGacha {
  optional uint32 gachaId = 1; // normal type
  optional string gachaName = 2; // normal type
  optional string gachaDisplayType = 3; // normal type
  optional uint64 publishedAt = 4; // nullable
  optional uint64 closedAt = 5; // nullable
  repeated MasterGachaDetail details = 6; // array
  repeated MasterGachaRarityRate rates = 7; // array
  repeated MasterGachaPaymentMethod paymentMethods = 8; // array
  optional string description = 9; // normal type
  optional uint32 seq = 10; // normal type
  optional string resourceName = 11; // normal type
  optional string annotation = 12; // normal type
  optional string gachaPeriod = 13; // normal type
  optional uint32 rookieAt = 14; // nullable
  optional string gachaSubName = 15; // normal type
  optional uint32 priority = 16; // nullable
  repeated MasterGachaExtra extras = 17; // array
  repeated MasterGachaViewLive2d viewLive2ds = 18; // array
  optional string gachaType = 19; // normal type
  optional uint32 gachaCeilingConfigId = 20; // normal type
  optional uint32 gachaCeilingCountInheritGachaId = 21; // normal type
  optional uint32 gachaCeilingCountParentGachaId = 22; // normal type
  optional string gachaSealName = 23; // normal type
  optional uint32 gachaCeilingCountBeforeInheritGachaId = 24; // normal type
  optional string attentionAssetBundleName = 25; // normal type
  repeated MasterGachaStepup stepup = 26; // array
  repeated MasterGachaStepupDetail stepupDetails = 27; // array
  repeated MasterGachaStepupRarityRate stepupRates = 28; // array
  repeated MasterGachaStepupExtra stepupExtras = 29; // array
  repeated MasterGachaLapAchievement gachaLapAchievement = 30; // array
  optional string gachaStepupType = 31; // normal type
  optional uint32 spinLapNumber = 32; // normal type
  optional uint32 lapLimit = 33; // normal type
  optional uint32 spinLimit = 34; // normal type
  optional string gachaLotteryType = 35; // normal type
  optional uint32 comebackDays = 36; // normal type
  optional uint32 relationGachaId = 37; // normal type
  optional bool isDailyReset = 38; // normal type
  optional uint32 GachaSealExchangeId = 39; // normal type
  optional bool hasStarSeal = 40; // normal type
  optional MasterStarSealExchangeGachaSeal masterStarSealExchangeGachaSeal = 41; // sub class
  optional MasterGachaView3dList view3ds = 42; // sub class
  optional uint32 gachaBonusId = 43; // normal type
}
message ulong_MasterGacha {
  optional uint64 ulong_MasterGacha_key = 1; // normal type
  optional MasterGacha ulong_MasterGacha_value = 2; // sub class
}
message MasterGachaMap {
  repeated ulong_MasterGacha entries = 1; // dictionary
}
message MasterSituationSkill {
  optional uint32 situationSkillId = 1; // normal type
  optional string skillName = 2; // normal type
  optional uint32 skillId = 3; // normal type
}
message uint_MasterSituationSkill {
  optional uint32 uint_MasterSituationSkill_key = 1; // normal type
  optional MasterSituationSkill uint_MasterSituationSkill_value = 2; // sub class
}
message MasterSituationSkillMap {
  repeated uint_MasterSituationSkill entries = 1; // dictionary
}
message MasterAreaItem {
  optional string areaItemCategoryType = 19; // normal type
  optional uint32 areaItemId = 1; // normal type
  optional uint32 categoryId = 2; // normal type
  optional uint32 level = 3; // normal type
  optional string areaItemName = 4; // normal type
  optional uint32 areaId = 5; // normal type
  optional string spawnPoint = 6; // normal type
  optional uint32 life = 7; // normal type
  optional float performance = 8; // normal type
  optional float technique = 9; // normal type
  optional float visual = 10; // normal type
  optional string valueType = 11; // normal type
  repeated string targetAttributes = 12; // array
  optional uint32 resourceId = 13; // normal type
  optional string description = 14; // normal type
  repeated uint32 characterIds = 15; // array
  repeated uint32 targetBandIds = 16; // array
  optional string flavorText = 17; // normal type
  optional uint32 seq = 18; // normal type
}
message uint_MasterAreaItem {
  optional uint32 uint_MasterAreaItem_key = 1; // normal type
  optional MasterAreaItem uint_MasterAreaItem_value = 2; // sub class
}
message MasterAreaItemMap {
  repeated uint_MasterAreaItem entries = 1; // dictionary
}
message MasterBondsLevel {
  optional uint32 bondsId = 1; // normal type
  optional uint32 level = 2; // normal type
  optional string bondsName = 3; // normal type
  optional uint32 bondsEffectId = 4; // normal type
}
message uint_MasterBondsLevel {
  optional uint32 uint_MasterBondsLevel_key = 1; // normal type
  optional MasterBondsLevel uint_MasterBondsLevel_value = 2; // sub class
}
message MasterBonds {
  optional uint32 bondsId = 1; // normal type
  optional string description = 2; // normal type
  optional string tag = 3; // normal type
  repeated uint32 characters = 4; // array
  repeated uint_MasterBondsLevel bondsLevel = 5; // dictionary
}
message uint_MasterBonds {
  optional uint32 uint_MasterBonds_key = 1; // normal type
  optional MasterBonds uint_MasterBonds_value = 2; // sub class
}
message MasterBondsMap {
  repeated uint_MasterBonds entries = 1; // dictionary
}
message MasterBondsEffect {
  optional uint32 bondsEffectId = 1; // normal type
  optional string bondsEffectName = 2; // normal type
  optional string description = 3; // normal type
  optional uint32 bondsId = 4; // normal type
  optional uint32 level = 5; // normal type
  optional string valueType = 6; // normal type
  optional uint32 life = 7; // normal type
  optional uint32 performance = 8; // normal type
  optional uint32 technique = 9; // normal type
  optional uint32 visual = 10; // normal type
  optional uint32 skillEffect = 11; // normal type
  optional string scope = 12; // normal type
  repeated uint32 targetCharacters = 13; // array
}
message uint_MasterBondsEffect {
  optional uint32 uint_MasterBondsEffect_key = 1; // normal type
  optional MasterBondsEffect uint_MasterBondsEffect_value = 2; // sub class
}
message MasterBondsEffectMap {
  repeated uint_MasterBondsEffect entries = 1; // dictionary
}
message MasterShop {
  optional uint32 shopId = 1; // normal type
  optional uint32 areaId = 2; // normal type
  optional string shopName = 3; // normal type
  optional string description = 4; // normal type
  optional string shopType = 5; // normal type
}
message uint_MasterShop {
  optional uint32 uint_MasterShop_key = 1; // normal type
  optional MasterShop uint_MasterShop_value = 2; // sub class
}
message MasterShopMap {
  repeated uint_MasterShop entries = 1; // dictionary
}
message MasterShopListCondition {
  optional uint32 purchaseBandId = 1; // normal type
  optional uint32 purchaseBandRank = 2; // normal type
}
message MasterShopListConditionList {
  repeated MasterShopListCondition entries = 1; // list
}
message MasterShoplist {
  optional uint32 shopListId = 1; // normal type
  optional uint32 shopId = 2; // normal type
  optional string shopCategory = 3; // normal type
  optional uint32 seq = 4; // normal type
  optional uint32 areaItemId = 5; // normal type
  optional uint32 amount = 6; // normal type
  optional PlayerResourceList costs = 7; // sub class
  optional uint32 releaseMainStory = 8; // normal type
  optional uint32 releaseBandStory = 9; // normal type
  optional MasterShopListConditionList conditions = 10; // sub class
  optional uint64 startAt = 11; // nullable
  optional uint64 endAt = 12; // nullable
}
message uint_MasterShoplist {
  optional uint32 uint_MasterShoplist_key = 1; // normal type
  optional MasterShoplist uint_MasterShoplist_value = 2; // sub class
}
message MasterShoplistMap {
  repeated uint_MasterShoplist entries = 1; // dictionary
}
message MasterActionSet {
  optional uint32 actionSetId = 1; // normal type
  optional uint32 areaId = 2; // normal type
  repeated uint32 characterIds = 3; // array
  optional string actionSetType = 4; // normal type
  optional uint32 areaItemId = 5; // normal type
  optional uint32 seasonSpecialId = 7; // normal type
  optional uint32 eventId = 8; // normal type
  optional uint32 eventStorySeq = 9; // normal type
  optional uint32 lotteryConditionActionSetId = 10; // normal type
  optional string balloonText = 11; // normal type
  optional string startSeason = 12; // normal type
  optional string endSeason = 13; // normal type
  optional string areaName = 6; // manual add
}
message uint_MasterActionSet {
  optional uint32 uint_MasterActionSet_key = 1; // normal type
  optional MasterActionSet uint_MasterActionSet_value = 2; // sub class
}
message MasterActionSetMap {
  repeated uint_MasterActionSet entries = 1; // dictionary
}
message MasterArea {
  optional uint32 areaId = 1; // normal type
  optional string areaType = 2; // normal type
  optional string areaName = 3; // normal type
  optional string description = 4; // normal type
  optional uint32 releaseMainStory = 5; // normal type
  optional uint32 releaseGenericStoryId = 7; // normal type
  optional uint32 releasePlayerRank = 8; // normal type
  optional uint64 publishedAt = 9; // nullable
  optional uint64 closedAt = 10; // nullable
  optional uint64 displayStartAt = 11; // normal type
  optional uint64 displayEndAt = 12; // normal type
  optional string startSeason = 13; // normal type
  optional string endSeason = 14; // normal type
}
message uint_MasterArea {
  optional uint32 uint_MasterArea_key = 1; // normal type
  optional MasterArea uint_MasterArea_value = 2; // sub class
}
message MasterAreaMap {
  repeated uint_MasterArea entries = 1; // dictionary
}
message MasterBand {
  optional uint32 bandId = 1; // normal type
  optional string bandName = 2; // normal type
  optional uint32 resourceId = 3; // normal type
  optional string color = 4; // normal type
  optional uint32 leader = 5; // normal type
  optional uint32 member1 = 6; // normal type
  optional uint32 member2 = 7; // normal type
  optional uint32 member3 = 8; // normal type
  optional uint32 member4 = 9; // normal type
  optional uint32 seq = 10; // normal type
  optional string bandType = 11; // normal type
  optional string introductions = 12; // normal type
  optional string phonetic = 13; // normal type
  optional uint32 musicId = 14; // normal type
}
message uint_MasterBand {
  optional uint32 uint_MasterBand_key = 1; // normal type
  optional MasterBand uint_MasterBand_value = 2; // sub class
}
message MasterBandMap {
  repeated uint_MasterBand entries = 1; // dictionary
}
message MasterPlayerExpTable {
  optional uint32 rank = 1; // normal type
  optional uint32 exp = 2; // normal type
  optional uint32 recoverValue = 3; // normal type
  optional uint32 friendUpperLimit = 4; // normal type
}
message uint_MasterPlayerExpTable {
  optional uint32 uint_MasterPlayerExpTable_key = 1; // normal type
  optional MasterPlayerExpTable uint_MasterPlayerExpTable_value = 2; // sub class
}
message MasterPlayerExpTableMap {
  repeated uint_MasterPlayerExpTable entries = 1; // dictionary
}
message MasterPracticeTicket {
  optional uint32 practiceTicketId = 1; // normal type
  optional string name = 2; // normal type
  optional string description = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 exp = 5; // normal type
  optional string ticketType = 6; // normal type
  optional string specializationType = 7; // normal type
  optional uint32 specializationTargetId = 8; // normal type
  optional float specializationFactor = 9; // normal type
  optional uint32 seq = 10; // normal type
}
message uint_MasterPracticeTicket {
  optional uint32 uint_MasterPracticeTicket_key = 1; // normal type
  optional MasterPracticeTicket uint_MasterPracticeTicket_value = 2; // sub class
}
message MasterPracticeTicketMap {
  repeated uint_MasterPracticeTicket entries = 1; // dictionary
}
message MasterSituationExpTable {
  optional uint32 level = 1; // normal type
  optional uint32 exp = 2; // normal type
}
message uint_MasterSituationExpTable {
  optional uint32 uint_MasterSituationExpTable_key = 1; // normal type
  optional MasterSituationExpTable uint_MasterSituationExpTable_value = 2; // sub class
}
message MasterSituationExpTableMap {
  repeated uint_MasterSituationExpTable entries = 1; // dictionary
}
message MasterMainStory {
  optional uint32 mainStoryId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string caption = 3; // normal type
  optional string title = 4; // normal type
  optional string synopsis = 5; // normal type
  optional string scenarioId = 6; // normal type
  optional uint32 releasePlayerRank = 8; // normal type
  optional string releaseConditions = 9; // normal type
  optional uint64 publishedAt = 10; // normal type
  repeated PlayerResource rewards = 11; // array
  optional string coverImage = 12; // normal type
  optional string backgroundImage = 13; // normal type
  optional string seasonType = 14; // normal type
  optional uint32 backgroundImageId = 15; // normal type
}
message uint_MasterMainStory {
  optional uint32 uint_MasterMainStory_key = 1; // normal type
  optional MasterMainStory uint_MasterMainStory_value = 2; // sub class
}
message MasterMainStoryMap {
  repeated uint_MasterMainStory entries = 1; // dictionary
}
message MasterBandStory {
  optional uint32 bandStoryId = 1; // normal type
  optional uint32 bandId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string caption = 4; // normal type
  optional string title = 5; // normal type
  optional string synopsis = 6; // normal type
  optional string scenarioId = 7; // normal type
  optional uint32 releasePlayerRank = 9; // normal type
  optional string releaseConditions = 10; // normal type
  optional uint64 publishedAt = 11; // normal type
  repeated PlayerResource rewards = 12; // array
  optional string coverImage = 13; // normal type
  optional string backgroundImage = 14; // normal type
  optional uint32 bandStoryChapterId = 16; // normal type
  optional uint32 releaseBandStoryId = 17; // normal type
  optional string appealText = 18; // normal type
  optional string voiceAssetBundleName = 19; // normal type
  optional string seasonType = 20; // normal type
  optional uint32 backgroundImageId = 21; // normal type
}
message uint_MasterBandStory {
  optional uint32 uint_MasterBandStory_key = 1; // normal type
  optional MasterBandStory uint_MasterBandStory_value = 2; // sub class
}
message MasterBandStoryMap {
  repeated uint_MasterBandStory entries = 1; // dictionary
}
message MasterItem {
  optional uint32 itemId = 1; // normal type
  optional string itemName = 2; // normal type
  optional uint32 resourceId = 3; // normal type
  optional string description = 4; // normal type
  optional uint32 seq = 5; // normal type
}
message uint_MasterItem {
  optional uint32 uint_MasterItem_key = 1; // normal type
  optional MasterItem uint_MasterItem_value = 2; // sub class
}
message MasterItemMap {
  repeated uint_MasterItem entries = 1; // dictionary
}
message MasterCommonsLive2d {
  optional uint32 live2dId = 1; // normal type
  optional string live2dCategory = 2; // normal type
  optional string scenarioType = 3; // normal type
  optional uint32 characterId = 4; // normal type
  optional string serif = 5; // normal type
  optional string voice = 6; // normal type
  optional string motion = 7; // normal type
  optional string expression = 8; // normal type
}
message uint_MasterCommonsLive2d {
  optional uint32 uint_MasterCommonsLive2d_key = 1; // normal type
  optional MasterCommonsLive2d uint_MasterCommonsLive2d_value = 2; // sub class
}
message MasterCommonsLive2dMap {
  repeated uint_MasterCommonsLive2d entries = 1; // dictionary
}
message MasterMusicShop {
  optional uint32 musicShopId = 1; // normal type
  optional uint32 shopId = 2; // normal type
  optional string shopCategory = 3; // normal type
  optional uint32 seq = 4; // normal type
  optional uint32 musicId = 5; // normal type
  optional uint32 amount = 6; // normal type
  optional PlayerResourceList costs = 7; // sub class
}
message uint_MasterMusicShop {
  optional uint32 uint_MasterMusicShop_key = 1; // normal type
  optional MasterMusicShop uint_MasterMusicShop_value = 2; // sub class
}
message MasterMusicShopMap {
  repeated uint_MasterMusicShop entries = 1; // dictionary
}
message MasterCostume {
  optional uint32 costumeId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional string flavorText = 4; // normal type
  optional string description = 5; // normal type
  optional uint32 seq = 6; // normal type
  optional string sdResourceName = 7; // normal type
  optional string howToGet = 8; // normal type
  optional uint64 publishedAt = 9; // normal type
  optional uint32 situationId = 10; // normal type
}
message uint_MasterCostume {
  optional uint32 uint_MasterCostume_key = 1; // normal type
  optional MasterCostume uint_MasterCostume_value = 2; // sub class
}
message MasterCostumeMap {
  repeated uint_MasterCostume entries = 1; // dictionary
}
message MasterAfterLiveTalk {
  optional uint32 afterLiveTalkId = 1; // normal type
  optional string scenarioId = 3; // normal type
  optional string description = 4; // normal type
}
message uint_MasterAfterLiveTalk {
  optional uint32 uint_MasterAfterLiveTalk_key = 1; // normal type
  optional MasterAfterLiveTalk uint_MasterAfterLiveTalk_value = 2; // sub class
}
message MasterAfterLiveTalkMap {
  repeated uint_MasterAfterLiveTalk entries = 1; // dictionary
}
message MasterAreaItemSpawn {
  optional string spawnPoint = 1; // normal type
  optional string spawnName = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional uint32 areaId = 4; // normal type
  optional string inject = 5; // normal type
  optional bool showUnsetObjectFlg = 6; // normal type
}
message string_MasterAreaItemSpawn {
  optional string string_MasterAreaItemSpawn_key = 1; // normal type
  optional MasterAreaItemSpawn string_MasterAreaItemSpawn_value = 2; // sub class
}
message MasterAreaItemSpawnMap {
  repeated string_MasterAreaItemSpawn entries = 1; // dictionary
}
message ServerSystem {
  optional uint64 serverDate = 1; // normal type
  optional int32 timeZoneRawOffset = 2; // normal type
}
message MasterCharacterRarity {
  optional uint32 rarity = 1; // normal type
  optional uint32 seal = 2; // normal type
  optional uint32 defaultSkillExp = 3; // normal type
  optional uint32 sameSituationSkillExp = 4; // normal type
  optional uint32 duplicateStarSeal = 5; // normal type
  optional uint32 limitBreakItemId = 6; // normal type
  optional uint32 duplicateLimitBreakItem = 7; // normal type
}
message uint_MasterCharacterRarity {
  optional uint32 uint_MasterCharacterRarity_key = 1; // normal type
  optional MasterCharacterRarity uint_MasterCharacterRarity_value = 2; // sub class
}
message MasterCharacterRarityMap {
  repeated uint_MasterCharacterRarity entries = 1; // dictionary
}
message MasterExchanges {
  optional uint32 exchangesId = 1; // normal type
  optional string exchangesCategory = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
  optional uint32 amount = 7; // normal type
  optional uint32 exchangeLimit = 8; // nullable
  optional string reset = 9; // normal type
  optional string badge = 10; // normal type
  optional uint64 publishedAt = 11; // nullable
  optional uint64 closedAt = 12; // nullable
  optional string caption = 13; // normal type
  optional bool recommendFlg = 14; // normal type
  optional bool allowDuplicationFlg = 15; // normal type
}
message uint_MasterExchanges {
  optional uint32 uint_MasterExchanges_key = 1; // normal type
  optional MasterExchanges uint_MasterExchanges_value = 2; // sub class
}
message MasterExchangesMap {
  repeated uint_MasterExchanges entries = 1; // dictionary
}
message MasterGachaTicket {
  optional uint32 gachaTicketId = 1; // normal type
  optional string gachaTicketType = 2; // normal type
  optional string name = 3; // normal type
  optional string description = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 seq = 6; // normal type
  optional uint64 expiredAt = 7; // normal type
}
message uint_MasterGachaTicket {
  optional uint32 uint_MasterGachaTicket_key = 1; // normal type
  optional MasterGachaTicket uint_MasterGachaTicket_value = 2; // sub class
}
message MasterGachaTicketMap {
  repeated uint_MasterGachaTicket entries = 1; // dictionary
}
message MasterPurchaseDetail {
  optional uint32 purchaseId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
}
message MasterPurchaseRecommend {
  optional string assetBundleName = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint64 publishedAt = 3; // nullable
  optional uint64 closedAt = 4; // nullable
}
message MasterPurchase {
  optional uint32 purchaseId = 1; // normal type
  optional string purchaseCategory = 2; // normal type
  optional string productName = 3; // normal type
  optional string description = 4; // normal type
  optional string label = 5; // normal type
  optional uint32 purchaseLimit = 6; // normal type
  optional uint64 publishedAt = 7; // nullable
  optional uint64 closedAt = 8; // nullable
  repeated MasterPurchaseDetail detail = 9; // list
  optional uint32 seq = 10; // normal type
  optional uint32 purchaseMenuId = 11; // normal type
  optional uint32 purchaseMonthlyLimit = 12; // normal type
  optional uint32 homeBalloonPriority = 13; // normal type
  optional string homeBalloonMessage = 14; // normal type
  optional uint32 homeBalloonReleaseRankFrom = 15; // normal type
  optional uint32 homeBalloonReleaseRankTo = 16; // normal type
  repeated MasterPurchaseRecommend recommends = 17; // list
}
message uint_MasterPurchase {
  optional uint32 uint_MasterPurchase_key = 1; // normal type
  optional MasterPurchase uint_MasterPurchase_value = 2; // sub class
}
message MasterPurchaseMap {
  repeated uint_MasterPurchase entries = 1; // dictionary
}
message MasterProduct {
  optional uint32 purchaseId = 1; // normal type
  optional string productId = 2; // normal type
  optional string platform = 3; // normal type
  optional uint32 amount = 4; // normal type
}
message MasterProductList {
  repeated MasterProduct entries = 1; // list
}
message MasterLoginBonusDetail {
  optional uint32 loginBonusId = 1; // normal type
  optional uint32 days = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
  optional string voiceId = 6; // normal type
  optional uint32 seq = 7; // normal type
  optional string grantType = 8; // normal type
}
message MasterLoginBonusAssetLive2D {
  optional uint32 characterId = 1; // normal type
  optional string costumeBundleName = 2; // normal type
  optional string serif = 3; // normal type
  optional string voiceBundleName = 4; // normal type
  optional string voice = 5; // normal type
  optional string motion = 6; // normal type
  optional string expression = 7; // normal type
}
message MasterLoginBonusAsset {
  optional uint32 loginBonusId = 1; // normal type
  optional uint32 days = 2; // normal type
  optional string resourceName = 3; // normal type
  optional string voiceId = 4; // normal type
  optional MasterLoginBonusAssetLive2D live2d = 5; // sub class
}
message uint_MasterLoginBonusAsset {
  optional uint32 uint_MasterLoginBonusAsset_key = 1; // normal type
  optional MasterLoginBonusAsset uint_MasterLoginBonusAsset_value = 2; // sub class
}
message MasterLoginBonusAssetMap {
  repeated uint_MasterLoginBonusAsset entries = 1; // dictionary
}
message MasterLoginBonus {
  optional uint32 loginBonusId = 1; // normal type
  optional string loginBonusType = 2; // normal type
  optional string caption = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint64 publishedAt = 5; // normal type
  optional uint64 closedAt = 6; // normal type
  repeated MasterLoginBonusDetail details = 7; // array
  optional MasterLoginBonusAssetMap assetMap = 8; // sub class
  optional uint32 itemThumbnailOffset = 9; // normal type
}
message uint_MasterLoginBonus {
  optional uint32 uint_MasterLoginBonus_key = 1; // normal type
  optional MasterLoginBonus uint_MasterLoginBonus_value = 2; // sub class
}
message MasterLoginBonusMap {
  repeated uint_MasterLoginBonus entries = 1; // dictionary
}
message MasterHomeBanner {
  optional uint32 homeBannerId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional uint64 publishedAt = 4; // normal type
  optional uint64 closedAt = 5; // normal type
  optional string transitionMethod = 6; // normal type
  optional string url = 7; // normal type
  optional uint32 releaseRankFrom = 8; // normal type
  optional uint32 releaseRankTo = 9; // normal type
  optional uint32 transitionId = 10; // normal type
  optional uint32 rookieAt = 11; // nullable
  optional string homeBannerType = 12; // normal type
  optional uint32 gachaId = 13; // nullable
  optional uint32 purchaseId = 14; // nullable
}
message MasterHomeBannerList {
  repeated MasterHomeBanner entries = 1; // list
}
message MasterPremiumPass {
  optional uint32 premiumPassId = 1; // normal type
  optional uint32 days = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
  optional uint32 purchaseId = 6; // normal type
}
message MasterPremiumPassList {
  repeated MasterPremiumPass entries = 1; // list
}
message Constants {
  optional uint32 limitLiveBoost = 1; // normal type
  optional uint32 recoverLiveBoostMinute = 2; // normal type
  optional uint32 dateChangeHour = 3; // normal type
  optional uint32 limitLiveBoostStack = 4; // normal type
  optional uint32 presentExpiredDays = 7; // normal type
  optional uint32 premiumPassExpiredDays = 8; // normal type
  optional uint32 liveBoostBonus = 9; // normal type
  optional uint32 doubleLiveBoostBonus = 10; // normal type
  optional uint32 tripleLiveBoostBonus = 11; // normal type
}
message MasterStamp {
  optional uint32 stampId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string imageName = 3; // normal type
  optional string stampType = 4; // normal type
  optional uint64 startAt = 5; // normal type
  optional uint64 endAt = 6; // normal type
  optional uint64 publishedAt = 7; // normal type
  optional bool withVoice = 8; // normal type
  optional string voiceName = 9; // normal type
}
message uint_MasterStamp {
  optional uint32 uint_MasterStamp_key = 1; // normal type
  optional MasterStamp uint_MasterStamp_value = 2; // sub class
}
message MasterStampMap {
  repeated uint_MasterStamp entries = 1; // dictionary
}
message MasterDegree {
  optional uint32 degreeId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string baseImageName = 3; // normal type
  optional string rank = 4; // normal type
  optional string degreeName = 5; // normal type
  optional string degreeType = 6; // normal type
  optional string iconImageName = 7; // normal type
  optional string description = 8; // normal type
  optional uint32 characterId = 9; // normal type
}
message uint_MasterDegree {
  optional uint32 uint_MasterDegree_key = 1; // normal type
  optional MasterDegree uint_MasterDegree_value = 2; // sub class
}
message MasterDegreeMap {
  repeated uint_MasterDegree entries = 1; // dictionary
}
message MasterCharacterProfileLive2d {
  optional uint32 characterProfileLive2dId = 1; // normal type
  optional string scenarioType = 2; // normal type
  optional uint32 characterId = 3; // normal type
  optional string serif = 4; // normal type
  optional string voice = 5; // normal type
  optional string motion = 6; // normal type
  optional string expression = 7; // normal type
}
message uint_MasterCharacterProfileLive2d {
  optional uint32 uint_MasterCharacterProfileLive2d_key = 1; // normal type
  optional MasterCharacterProfileLive2d uint_MasterCharacterProfileLive2d_value = 2; // sub class
}
message MasterCharacterProfileLive2dMap {
  repeated uint_MasterCharacterProfileLive2d entries = 1; // dictionary
}
message MasterWeeklyMultiLiveDifficulty {
  optional uint32 id = 1; // normal type
  optional string difficulty = 2; // normal type
  optional uint32 requiredTotalParam = 3; // normal type
  optional float bonusRate = 4; // normal type
  optional uint32 seq = 5; // normal type
  optional uint32 dayOfWeek = 6; // normal type
  optional string description = 7; // normal type
  optional string resourceName = 8; // normal type
  optional string multiLiveDifficultyType = 9; // normal type
  optional uint32 matchingLogicId = 10; // normal type
}
message uint_MasterWeeklyMultiLiveDifficulty {
  optional uint32 uint_MasterWeeklyMultiLiveDifficulty_key = 1; // normal type
  optional MasterWeeklyMultiLiveDifficulty uint_MasterWeeklyMultiLiveDifficulty_value = 2; // sub class
}
message MasterWeeklyMultiLiveDifficultyMap {
  repeated uint_MasterWeeklyMultiLiveDifficulty entries = 1; // dictionary
}
message MasterCommonConfig {
  optional uint32 commonConfigId = 1; // normal type
  optional string commonConfigType = 2; // normal type
  optional string value = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
}
message uint_MasterCommonConfig {
  optional uint32 uint_MasterCommonConfig_key = 1; // normal type
  optional MasterCommonConfig uint_MasterCommonConfig_value = 2; // sub class
}
message MasterCommonConfigMap {
  repeated uint_MasterCommonConfig entries = 1; // dictionary
}
message MasterSkill {
  optional uint32 skillId = 1; // normal type
  optional uint32 skillLevel = 2; // normal type
  optional float duration = 3; // normal type
  optional string simpleDescription = 4; // normal type
  optional string description = 5; // normal type
  optional string skillSortType = 6; // normal type
}
message MasterSkillList {
  repeated MasterSkill entries = 1; // array
}
message MasterSituationSkillExpTable {
  optional uint32 skillLevel = 1; // normal type
  optional uint32 skillExp = 2; // normal type
  optional uint32 rarity = 3; // normal type
}
message MasterSituationSkillExpTableList {
  repeated MasterSituationSkillExpTable entries = 1; // array
}
message MasterSkillActivateEffect {
  optional uint32 skillId = 1; // normal type
  optional uint32 skillLevel = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string colorDescription = 4; // normal type
  optional string activateEffectType = 5; // normal type
  optional string activateEffectValueType = 6; // normal type
  optional string activateCondition = 7; // normal type
  optional uint32 activateEffectValue = 8; // normal type
  optional uint32 activateConditionLife = 9; // normal type
  optional uint32 unificationActivateEffectValue = 10; // normal type
  optional string unificationActivateConditionType = 11; // normal type
  optional uint32 unificationActivateConditionBandId = 12; // normal type
  optional uint32 activateEffectMaxValue = 13; // normal type
  optional float activateEffectStackValue = 14; // normal type
}
message MasterSkillActivateEffectList {
  repeated MasterSkillActivateEffect entries = 1; // array
}
message MasterSkillOnceEffect {
  optional uint32 skillId = 1; // normal type
  optional uint32 skillLevel = 2; // normal type
  optional string colorDescription = 3; // normal type
  optional string onceEffectType = 4; // normal type
  optional string onceEffectValueType = 5; // normal type
  optional int32 onceEffectValue = 6; // normal type
  optional string onceEffectConditionLifeType = 7; // normal type
  optional uint32 onceEffectConditionLife = 8; // normal type
}
message MasterSkillOnceEffectList {
  repeated MasterSkillOnceEffect entries = 1; // array
}
message MasterLiveBoostRecoveryItem {
  optional uint32 liveBoostRecoveryItemId = 1; // normal type
  optional string liveBoostRecoveryItemName = 2; // normal type
  optional uint32 resourceId = 3; // normal type
  optional uint32 value = 4; // normal type
  optional string description = 5; // normal type
  optional uint32 seq = 6; // normal type
  optional string liveBoostRecoveryItemType = 7; // normal type
}
message uint_MasterLiveBoostRecoveryItem {
  optional uint32 uint_MasterLiveBoostRecoveryItem_key = 1; // normal type
  optional MasterLiveBoostRecoveryItem uint_MasterLiveBoostRecoveryItem_value = 2; // sub class
}
message MasterLiveBoostRecoveryItemMap {
  repeated uint_MasterLiveBoostRecoveryItem entries = 1; // dictionary
}
message MasterGenericStory {
  optional uint32 genericStoryId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string caption = 3; // normal type
  optional string title = 4; // normal type
  optional string synopsis = 5; // normal type
  optional string scenarioId = 6; // normal type
  optional string coverImage = 7; // normal type
  optional string backgroundImage = 8; // normal type
  optional uint32 releasePlayerRank = 9; // normal type
  optional string releaseConditions = 10; // normal type
  optional uint64 startAt = 11; // normal type
  optional uint64 endAt = 12; // normal type
  repeated PlayerResource rewards = 13; // array
  optional bool priorityFlg = 14; // normal type
  optional string genericStoryType = 15; // normal type
  optional uint32 genericStoryTypeId = 16; // normal type
}
message uint_MasterGenericStory {
  optional uint32 uint_MasterGenericStory_key = 1; // normal type
  optional MasterGenericStory uint_MasterGenericStory_value = 2; // sub class
}
message MasterGenericStoryMap {
  repeated uint_MasterGenericStory entries = 1; // dictionary
}
message MasterSeasonBasic {
  optional uint32 seasonBasicId = 1; // normal type
  optional string seasonBasicType = 2; // normal type
  optional uint64 startAt = 3; // normal type
  optional uint64 endAt = 4; // normal type
  optional uint32 seasonId = 5; // normal type
}
message uint_MasterSeasonBasic {
  optional uint32 uint_MasterSeasonBasic_key = 1; // normal type
  optional MasterSeasonBasic uint_MasterSeasonBasic_value = 2; // sub class
}
message MasterSeasonBasicMap {
  repeated uint_MasterSeasonBasic entries = 1; // dictionary
}
message MasterSeasonSpecial {
  optional uint32 seasonSpecialId = 1; // normal type
  optional string seasonSpecialType = 2; // normal type
  optional string description = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
  optional bool repeatFlg = 6; // normal type
  optional bool areaSpecialResourceFlg = 7; // normal type
  optional string actionSetType = 8; // normal type
  optional uint32 missionGroupId = 9; // normal type
}
message uint_MasterSeasonSpecial {
  optional uint32 uint_MasterSeasonSpecial_key = 1; // normal type
  optional MasterSeasonSpecial uint_MasterSeasonSpecial_value = 2; // sub class
}
message MasterSeasonSpecialMap {
  repeated uint_MasterSeasonSpecial entries = 1; // dictionary
}
message MasterAreaSeasonBasic {
  optional uint32 areaId = 1; // normal type
  optional uint32 seasonBasicId = 2; // normal type
  optional string resourceName = 3; // normal type
}
message MasterAreaSeasonBasicList {
  repeated MasterAreaSeasonBasic entries = 1; // array
}
message uint_MasterAreaSeasonBasicList {
  optional uint32 uint_MasterAreaSeasonBasicList_key = 1; // normal type
  optional MasterAreaSeasonBasicList uint_MasterAreaSeasonBasicList_value = 2; // sub class
}
message MasterAreaSeasonBasicMap {
  repeated uint_MasterAreaSeasonBasicList entries = 1; // dictionary
}
message MasterAreaSeasonSpecial {
  optional uint32 areaId = 1; // normal type
  optional uint32 seasonSpecialId = 2; // normal type
  optional string resourceName = 3; // normal type
  optional string albumBackgroundResourceName = 4; // normal type
}
message MasterAreaSeasonSpecialList {
  repeated MasterAreaSeasonSpecial entries = 1; // array
}
message uint_MasterAreaSeasonSpecialList {
  optional uint32 uint_MasterAreaSeasonSpecialList_key = 1; // normal type
  optional MasterAreaSeasonSpecialList uint_MasterAreaSeasonSpecialList_value = 2; // sub class
}
message MasterAreaSeasonSpecialMap {
  repeated uint_MasterAreaSeasonSpecialList entries = 1; // dictionary
}
message MasterSeasonSpecialBgm {
  optional uint32 seasonSpecialId = 1; // normal type
  optional string bgmAssetBundleName = 2; // normal type
  optional string bgmFileName = 3; // normal type
}
message uint_MasterSeasonSpecialBgm {
  optional uint32 uint_MasterSeasonSpecialBgm_key = 1; // normal type
  optional MasterSeasonSpecialBgm uint_MasterSeasonSpecialBgm_value = 2; // sub class
}
message MasterSeasonSpecialBgmMap {
  repeated uint_MasterSeasonSpecialBgm entries = 1; // dictionary
}
message MasterQualifyTournament {
  optional uint32 qualifyTournamentId = 1; // normal type
  optional string qualifyTournamentName = 2; // normal type
  optional string musicDifficulty = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional string bgmAssetBundleName = 5; // normal type
  optional string bgmFileName = 6; // normal type
  optional uint32 playCount = 7; // normal type
  optional uint64 startAt = 8; // normal type
  optional uint64 endAt = 9; // normal type
  optional uint64 entryStartAt = 10; // normal type
  optional uint64 entryEndAt = 11; // normal type
  optional uint64 publicStartAt = 12; // normal type
  optional uint64 publicEndAt = 13; // normal type
  optional string qualifyTournamentType = 14; // normal type
  optional string place = 15; // normal type
}
message MasterQualifyTournamentList {
  repeated MasterQualifyTournament entries = 1; // list
}
message uint_MasterQualifyTournamentList {
  optional uint32 uint_MasterQualifyTournamentList_key = 1; // normal type
  optional MasterQualifyTournamentList uint_MasterQualifyTournamentList_value = 2; // sub class
}
message MasterQualifyTournamentMap {
  repeated uint_MasterQualifyTournamentList entries = 1; // dictionary
}
message QualifyTournamentSituationParameter {
  optional uint32 situationId = 1; // normal type
  optional uint32 level = 2; // normal type
  optional uint32 skillLevel = 3; // normal type
  optional string trainingStatus = 4; // normal type
  optional uint32 performance = 5; // normal type
  optional uint32 technique = 6; // normal type
  optional uint32 visual = 7; // normal type
}
message MasterQualifyTournamentDeck {
  optional uint32 qualifyTournamentId = 1; // normal type
  optional string deckName = 2; // normal type
  optional QualifyTournamentSituationParameter leader = 3; // sub class
  optional QualifyTournamentSituationParameter member1 = 4; // sub class
  optional QualifyTournamentSituationParameter member2 = 5; // sub class
  optional QualifyTournamentSituationParameter member3 = 6; // sub class
  optional QualifyTournamentSituationParameter member4 = 7; // sub class
  optional string qualifyTournamentType = 8; // normal type
  optional uint32 musicId = 9; // normal type
}
message MasterQualifyTournamentDeckList {
  repeated MasterQualifyTournamentDeck entries = 1; // list
}
message uint_MasterQualifyTournamentDeckList {
  optional uint32 uint_MasterQualifyTournamentDeckList_key = 1; // normal type
  optional MasterQualifyTournamentDeckList uint_MasterQualifyTournamentDeckList_value = 2; // sub class
}
message MasterQualifyTournamentDeckMap {
  repeated uint_MasterQualifyTournamentDeckList entries = 1; // dictionary
}
message MasterQualifyTournamentMusic {
  optional uint32 qualifyTournamentId = 1; // normal type
  optional uint32 musicId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string qualifyTournamentType = 4; // normal type
}
message MasterQualifyTournamentMusicList {
  repeated MasterQualifyTournamentMusic entries = 1; // list
}
message uint_MasterQualifyTournamentMusicList {
  optional uint32 uint_MasterQualifyTournamentMusicList_key = 1; // normal type
  optional MasterQualifyTournamentMusicList uint_MasterQualifyTournamentMusicList_value = 2; // sub class
}
message MasterQualifyTournamentMusicMap {
  repeated uint_MasterQualifyTournamentMusicList entries = 1; // dictionary
}
message MasterEventStoryMemorialConfig {
  optional uint32 eventId = 1; // normal type
  optional uint32 bandId = 2; // normal type
  optional string imageFileName = 3; // normal type
  optional uint64 publishedAt = 4; // normal type
  optional uint32 eventStoryMemorialReleaseConditionId = 5; // normal type
  repeated uint32 characterIdList = 6; // array
  optional uint32 musicId = 7; // nullable
  optional string seasonType = 8; // normal type
  optional uint64 eventPublicEndAt = 101; // normal type
}
message uint_MasterEventStoryMemorialConfig {
  optional uint32 uint_MasterEventStoryMemorialConfig_key = 1; // normal type
  optional MasterEventStoryMemorialConfig uint_MasterEventStoryMemorialConfig_value = 2; // sub class
}
message MasterEventStoryMemorialConfigMap {
  repeated uint_MasterEventStoryMemorialConfig entries = 1; // dictionary
}
message MasterEventStoryMemorialReleaseCondition {
  optional uint32 eventStoryMemorialReleaseConditionId = 1; // normal type
  optional string memorialReleaseConditionType = 2; // normal type
  optional uint32 bandId = 3; // normal type
  optional uint32 rank = 4; // normal type
}
message uint_MasterEventStoryMemorialReleaseCondition {
  optional uint32 uint_MasterEventStoryMemorialReleaseCondition_key = 1; // normal type
  optional MasterEventStoryMemorialReleaseCondition uint_MasterEventStoryMemorialReleaseCondition_value = 2; // sub class
}
message MasterEventStoryMemorialReleaseConditionMap {
  repeated uint_MasterEventStoryMemorialReleaseCondition entries = 1; // dictionary
}
message MasterBandStoryList {
  repeated MasterBandStory entries = 1; // array
}
message MasterAreaItemList {
  repeated MasterAreaItem entries = 1; // list
}
message MasterBandRank {
  optional uint32 bandId = 1; // normal type
  optional uint32 rank = 2; // normal type
  optional MasterBandStoryList bandStories = 101; // sub class
  optional MasterAreaItemList areaItems = 102; // sub class
  optional PlayerResourceList rewards = 103; // sub class
}
message MasterBandRankList {
  optional uint32 bandId = 1; // normal type
  repeated MasterBandRank entries = 2; // list
}
message uint_MasterBandRankList {
  optional uint32 uint_MasterBandRankList_key = 1; // normal type
  optional MasterBandRankList uint_MasterBandRankList_value = 2; // sub class
}
message MasterBandRanksMap {
  repeated uint_MasterBandRankList entries = 1; // dictionary
}
message MasterMainStoryList {
  repeated MasterMainStory entries = 1; // array
}
message MasterAreaList {
  repeated MasterArea entries = 1; // list
}
message MasterPlayerRank {
  optional uint32 rank = 1; // normal type
  optional MasterMainStoryList mainStories = 101; // sub class
  optional uint32 beforeFriendUpperLimit = 102; // nullable
  optional uint32 afterFriendUpperLimit = 103; // nullable
  optional PlayerResourceList rewards = 104; // sub class
  optional MasterAreaList areaList = 105; // sub class
}
message MasterPlayerRankList {
  repeated MasterPlayerRank entries = 1; // list
}
message MasterWordingCollection {
  optional string name = 1; // normal type
  optional string wording = 2; // normal type
}
message string_MasterWordingCollection {
  optional string string_MasterWordingCollection_key = 1; // normal type
  optional MasterWordingCollection string_MasterWordingCollection_value = 2; // sub class
}
message MasterWordingCollectionMap {
  repeated string_MasterWordingCollection entries = 1; // dictionary
}
message MasterMiracleTicket {
  optional uint32 miracleTicketId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string miracleTicketEndAtType = 3; // normal type
  optional string miracleTicketName = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint64 exchangeStartAt = 6; // normal type
  optional uint64 exchangeEndAt = 7; // normal type
  optional uint32 exchangeEndMinutes = 8; // normal type
  optional string bannerImageUrl = 9; // normal type
  optional string miracleTicketExchangesName = 10; // normal type
  optional string lineupImageBundleName = 11; // normal type
}
message uint_MasterMiracleTicket {
  optional uint32 uint_MasterMiracleTicket_key = 1; // normal type
  optional MasterMiracleTicket uint_MasterMiracleTicket_value = 2; // sub class
}
message MasterMiracleTicketMap {
  repeated uint_MasterMiracleTicket entries = 1; // dictionary
}
message MasterMiracleTicketExchanges {
  optional uint32 miracleTicketId = 1; // normal type
  optional uint32 miracleTicketExchangesId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional uint32 situationId = 4; // normal type
  optional uint32 quantity = 5; // normal type
  optional uint32 amount = 6; // normal type
  optional uint32 exchangeLimit = 7; // normal type
}
message MasterMiracleTicketExchangesList {
  repeated MasterMiracleTicketExchanges entries = 1; // array
}
message uint_MasterMiracleTicketExchangesList {
  optional uint32 uint_MasterMiracleTicketExchangesList_key = 1; // normal type
  optional MasterMiracleTicketExchangesList uint_MasterMiracleTicketExchangesList_value = 2; // sub class
}
message MasterMiracleTicketExchangesMap {
  repeated uint_MasterMiracleTicketExchangesList entries = 1; // dictionary
}
message MasterSpecialLottery {
  optional uint32 specialLotteryId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string caption = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint64 startAt = 5; // normal type
  optional uint64 endAt = 6; // normal type
}
message MasterSpecialLotteryList {
  repeated MasterSpecialLottery entries = 1; // array
}
message uint_MasterSpecialLotteryList {
  optional uint32 uint_MasterSpecialLotteryList_key = 1; // normal type
  optional MasterSpecialLotteryList uint_MasterSpecialLotteryList_value = 2; // sub class
}
message MasterSpecialLotteryMap {
  repeated uint_MasterSpecialLotteryList entries = 1; // dictionary
}
message MasterBirthdayStory {
  optional uint32 birthdayStoryId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string caption = 3; // normal type
  optional string scenarioId = 6; // normal type
  optional uint64 startAt = 7; // normal type
  optional uint64 endAt = 8; // normal type
  optional PlayerResourceList rewards = 9; // sub class
}
message uint_MasterBirthdayStory {
  optional uint32 uint_MasterBirthdayStory_key = 1; // normal type
  optional MasterBirthdayStory uint_MasterBirthdayStory_value = 2; // sub class
}
message MasterBirthdayStoryMap {
  repeated uint_MasterBirthdayStory entries = 1; // dictionary
}
message MasterBirthdayPage {
  optional uint32 birthdayPageId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional uint32 birthdayStoryId = 4; // normal type
  optional uint32 actionSetId = 5; // normal type
  optional uint64 startAt = 6; // normal type
  optional uint64 endAt = 7; // normal type
  optional uint32 openingAnimationLoginBonusId = 8; // normal type
  optional string birthdayCardAssetBundleName = 9; // normal type
  optional uint32 bandMemberBackstageTalkSetId = 10; // normal type
  optional uint32 nonBandMemberBackstageTalkSetId = 11; // normal type
  optional uint32 characterProfileLive2dId = 12; // normal type
  optional string transitionMethod = 13; // normal type
  optional uint32 transitionId = 14; // normal type
}
message uint_MasterBirthdayPage {
  optional uint32 uint_MasterBirthdayPage_key = 1; // normal type
  optional MasterBirthdayPage uint_MasterBirthdayPage_value = 2; // sub class
}
message MasterBirthdayPageMap {
  repeated uint_MasterBirthdayPage entries = 1; // dictionary
}
message MasterSkinNotes {
  optional uint32 skinNotesId = 1; // normal type
  optional string skinName = 2; // normal type
  optional bool defaultFlg = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint32 seq = 5; // normal type
  optional float noteSyncEdgeMargin = 6; // normal type
}
message uint_MasterSkinNotes {
  optional uint32 uint_MasterSkinNotes_key = 1; // normal type
  optional MasterSkinNotes uint_MasterSkinNotes_value = 2; // sub class
}
message MasterSkinLane {
  optional uint32 skinLaneId = 1; // normal type
  optional string skinName = 2; // normal type
  optional string skinType = 6; // normal type
  optional bool defaultFlg = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint32 seq = 5; // normal type
}
message uint_MasterSkinLane {
  optional uint32 uint_MasterSkinLane_key = 1; // normal type
  optional MasterSkinLane uint_MasterSkinLane_value = 2; // sub class
}
message MasterSkinEffect {
  optional uint32 skinEffectId = 1; // normal type
  optional string skinName = 2; // normal type
  optional bool defaultFlg = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint32 seq = 5; // normal type
}
message uint_MasterSkinEffect {
  optional uint32 uint_MasterSkinEffect_key = 1; // normal type
  optional MasterSkinEffect uint_MasterSkinEffect_value = 2; // sub class
}
message MasterSkinBackground {
  optional uint32 skinBackgroundId = 1; // normal type
  optional string skinName = 2; // normal type
  optional string eventType = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint32 seq = 5; // normal type
  optional bool defaultFlg = 6; // normal type
}
message uint_MasterSkinBackground {
  optional uint32 uint_MasterSkinBackground_key = 1; // normal type
  optional MasterSkinBackground uint_MasterSkinBackground_value = 2; // sub class
}
message MasterSkinSoundEffect {
  optional uint32 skinSoundEffectId = 1; // normal type
  optional string skinName = 2; // normal type
  optional bool defaultFlg = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint32 seq = 5; // normal type
}
message uint_MasterSkinSoundEffect {
  optional uint32 uint_MasterSkinSoundEffect_key = 1; // normal type
  optional MasterSkinSoundEffect uint_MasterSkinSoundEffect_value = 2; // sub class
}
message MasterSkinDirectionalFlick {
  optional uint32 skinDirectionalFlickId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string skinName = 3; // normal type
  optional bool defaultFlg = 4; // normal type
  optional string assetBundleName = 5; // normal type
}
message uint_MasterSkinDirectionalFlick {
  optional uint32 uint_MasterSkinDirectionalFlick_key = 1; // normal type
  optional MasterSkinDirectionalFlick uint_MasterSkinDirectionalFlick_value = 2; // sub class
}
message MasterSkin {
  repeated uint_MasterSkinNotes skinNotesMap = 1; // dictionary
  repeated uint_MasterSkinLane skinLaneMap = 2; // dictionary
  repeated uint_MasterSkinEffect skinEffectMap = 3; // dictionary
  repeated uint_MasterSkinBackground skinBackgroundMap = 4; // dictionary
  repeated uint_MasterSkinSoundEffect skinSoundEffectMap = 5; // dictionary
  optional uint32 defaultSkinNotesId = 6; // normal type
  optional uint32 defaultSkinLaneId = 7; // normal type
  optional uint32 defaultSkinEffectId = 8; // normal type
  optional uint32 defaultSkinBackgroundId = 9; // normal type
  optional uint32 defaultSkinSoundEffectId = 10; // normal type
  repeated uint_MasterSkinDirectionalFlick skinDirectionalFlickMap = 11; // dictionary
  optional uint32 defaultSkinDirectionalFlickId = 12; // normal type
}
message CharacterInGameVoice {
  optional uint32 characterId = 1; // normal type
  optional string soundKey = 2; // normal type
}
message CharacterInGameVoiceList {
  repeated CharacterInGameVoice entries = 1; // array
}
message uint_CharacterInGameVoiceList {
  optional uint32 uint_CharacterInGameVoiceList_key = 1; // normal type
  optional CharacterInGameVoiceList uint_CharacterInGameVoiceList_value = 2; // sub class
}
message MasterCharacterInGameVoice {
  repeated uint_CharacterInGameVoiceList beforeLiveVoiceMap = 1; // dictionary
  repeated uint_CharacterInGameVoiceList fullComboVoiceMap = 2; // dictionary
}
message MasterPickupSituation {
  optional string pickupType = 1; // normal type
  optional uint32 pickupId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional uint32 situationId = 4; // normal type
  optional uint32 performance = 5; // normal type
  optional uint32 technique = 6; // normal type
  optional uint32 visual = 7; // normal type
  optional bool hiddenFlg = 8; // normal type
}
message MasterPickupSituationList {
  repeated MasterPickupSituation entries = 1; // array
}
message uint_MasterPickupSituationList {
  optional uint32 uint_MasterPickupSituationList_key = 1; // normal type
  optional MasterPickupSituationList uint_MasterPickupSituationList_value = 2; // sub class
}
message MasterPickupSituationMap {
  repeated uint_MasterPickupSituationList eventPickupSituationMap = 1; // dictionary
  repeated uint_MasterPickupSituationList gachaPickupSituationMap = 2; // dictionary
}
message MasterSingleFrameCartoon {
  optional uint32 singleFrameCartoonId = 1; // normal type
  optional string title = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional uint32 seq = 4; // normal type
  optional string subTitle = 5; // normal type
  optional bool isLoadingScreen = 6; // normal type
}
message uint_MasterSingleFrameCartoon {
  optional uint32 uint_MasterSingleFrameCartoon_key = 1; // normal type
  optional MasterSingleFrameCartoon uint_MasterSingleFrameCartoon_value = 2; // sub class
}
message MasterSingleFrameCartoonMap {
  repeated uint_MasterSingleFrameCartoon loading = 1; // dictionary
  repeated uint_MasterSingleFrameCartoon history = 2; // dictionary
}
message SingleFrameCartoonIdList {
  repeated uint32 entries = 1; // array
}
message uint_SingleFrameCartoonIdList {
  optional uint32 uint_SingleFrameCartoonIdList_key = 1; // normal type
  optional SingleFrameCartoonIdList uint_SingleFrameCartoonIdList_value = 2; // sub class
}
message MasterSingleFrameCartoonCharacterMap {
  repeated uint_SingleFrameCartoonIdList entries = 1; // dictionary
}
message MasterFourFrameCartoon {
  optional uint32 fourFrameCartoonId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string title = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint64 publicStartAt = 5; // normal type
  optional string subTitle = 6; // normal type
}
message uint_MasterFourFrameCartoon {
  optional uint32 uint_MasterFourFrameCartoon_key = 1; // normal type
  optional MasterFourFrameCartoon uint_MasterFourFrameCartoon_value = 2; // sub class
}
message MasterFourFrameCartoonMap {
  repeated uint_MasterFourFrameCartoon entries = 1; // dictionary
}
message FourFrameCartoonIdList {
  repeated uint32 entries = 1; // array
}
message uint_FourFrameCartoonIdList {
  optional uint32 uint_FourFrameCartoonIdList_key = 1; // normal type
  optional FourFrameCartoonIdList uint_FourFrameCartoonIdList_value = 2; // sub class
}
message MasterFourFrameCartoonCharacterMap {
  repeated uint_FourFrameCartoonIdList entries = 1; // dictionary
}
message MasterMusicVideo {
  optional uint32 musicId = 1; // normal type
  optional string assetBundleName = 2; // normal type
  optional uint64 startAt = 3; // normal type
  optional uint64 endAt = 4; // normal type
  optional int32 musicStartDelayMilliseconds = 5; // normal type
  optional uint32 seq = 6; // normal type
  optional string title = 7; // normal type
  optional string thumbAssetBundleName = 8; // normal type
  optional string description = 9; // normal type
}
message MasterMusicVideoList {
  repeated MasterMusicVideo entries = 1; // array
}
message uint_MasterMusicVideoList {
  optional uint32 uint_MasterMusicVideoList_key = 1; // normal type
  optional MasterMusicVideoList uint_MasterMusicVideoList_value = 2; // sub class
}
message MasterMusicVideoListMap {
  repeated uint_MasterMusicVideoList entries = 1; // dictionary
}
message MasterPurchaseMenu {
  optional uint32 purchaseMenuId = 1; // normal type
  optional string purchaseMenuName = 2; // normal type
  optional uint32 seq = 3; // normal type
}
message MasterPurchaseMenuList {
  repeated MasterPurchaseMenu entries = 1; // list
}
message MasterBandStoryChapterDetail {
  optional uint32 bandStoryChapterDetailId = 1; // normal type
  optional uint32 bandStoryChapterId = 2; // normal type
  optional uint32 eventId = 3; // nullable
  optional uint32 releaseBandStoryId = 4; // nullable
  optional uint64 startAt = 5; // normal type
  optional uint64 endAt = 6; // normal type
  optional string supplement = 7; // normal type
  optional string appeal = 8; // normal type
  optional string releaseConditions = 9; // normal type
}
message MasterBandStoryChapterDetailList {
  repeated MasterBandStoryChapterDetail entries = 1; // array
}
message MasterBandStoryChapter {
  optional uint32 bandStoryChapterId = 1; // normal type
  optional uint32 bandId = 2; // normal type
  optional string bandStoryChapterType = 3; // normal type
  optional uint32 seq = 4; // normal type
  optional string mainTitle = 5; // normal type
  optional string subTitle = 6; // normal type
  optional uint64 publishedAt = 7; // normal type
  optional uint64 closedAt = 8; // normal type
  optional uint32 chapterNumber = 9; // normal type
  optional uint32 relationEventId = 10; // normal type
  optional MasterBandStoryChapterDetailList masterBandStoryChapterDetailList = 101; // sub class
}
message uint_MasterBandStoryChapter {
  optional uint32 uint_MasterBandStoryChapter_key = 1; // normal type
  optional MasterBandStoryChapter uint_MasterBandStoryChapter_value = 2; // sub class
}
message MasterBandStoryChapterMap {
  repeated uint_MasterBandStoryChapter entries = 1; // dictionary
}
message MasterNewMusicIntroductionBandNameList {
  repeated string entries = 1; // list
}
message MasterNewMusicIntroduction {
  optional uint32 newMusicIntroductionId = 1; // normal type
  optional uint32 musicId = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional uint32 costumeId1 = 4; // nullable
  optional uint32 costumeId2 = 5; // nullable
  optional uint32 costumeId3 = 6; // nullable
  optional uint32 costumeId4 = 7; // nullable
  optional uint32 costumeId5 = 8; // nullable
  optional uint64 startAt = 9; // normal type
  optional uint64 endAt = 10; // normal type
  optional MasterNewMusicIntroductionBandNameList bandNameList = 11; // sub class
  optional string tieUpBandNameBundle = 12; // normal type
}
message uint_MasterNewMusicIntroduction {
  optional uint32 uint_MasterNewMusicIntroduction_key = 1; // normal type
  optional MasterNewMusicIntroduction uint_MasterNewMusicIntroduction_value = 2; // sub class
}
message MasterNewMusicIntroductionMap {
  repeated uint_MasterNewMusicIntroduction entries = 1; // dictionary
}
message MasterSituationFirstAppearance {
  optional uint32 situationId = 1; // normal type
  optional string campaignTitle = 2; // normal type
  optional uint32 gachaId = 3; // nullable
  repeated uint32 acquireableGachaIdList = 4; // array
  optional uint32 eventId = 5; // nullable
  optional uint32 bandStoryId = 6; // nullable
  optional string eventName = 7; // normal type
}
message uint_MasterSituationFirstAppearance {
  optional uint32 uint_MasterSituationFirstAppearance_key = 1; // normal type
  optional MasterSituationFirstAppearance uint_MasterSituationFirstAppearance_value = 2; // sub class
}
message MasterSituationFirstAppearanceMap {
  repeated uint_MasterSituationFirstAppearance entries = 1; // dictionary
}
message MasterCollaborationSkin {
  optional uint32 collaborationSkinId = 1; // normal type
  optional uint32 seasonSpecialId = 2; // normal type
  optional string description = 3; // normal type
  optional string backgroundSkinAssetBundleName = 5; // normal type
  optional string effectSkinAssetBundleName = 6; // normal type
  optional string laneSkinAssetBundleName = 7; // normal type
  optional string notesSkinAssetBundleName = 8; // normal type
  optional string soundEffectSkinAssetBundleName = 9; // normal type
  optional bool changeBackgroundSkinFlg = 10; // normal type
  optional bool changeEffectSkinFlg = 11; // normal type
  optional bool changeLaneSkinFlg = 12; // normal type
  optional bool changeNotesSkinFlg = 13; // normal type
  optional bool changeSoundEffectSkinFlg = 14; // normal type
  optional string cutInSkinAssetBundleName = 15; // normal type
  optional string judgeSkinAssetBundleName = 16; // normal type
  optional bool changeCutInSkinFlg = 17; // normal type
  optional bool changeJudgeSkinFlg = 18; // normal type
  optional float noteSyncEdgeMargin = 19; // normal type
  optional string directionalFlickAssetBundleName = 20; // normal type
  optional bool changeDirectionalFlickFlg = 21; // normal type
}
message uint_MasterCollaborationSkin {
  optional uint32 uint_MasterCollaborationSkin_key = 1; // normal type
  optional MasterCollaborationSkin uint_MasterCollaborationSkin_value = 2; // sub class
}
message MasterCollaborationSkinMap {
  repeated uint_MasterCollaborationSkin entries = 1; // dictionary
}
message MasterNewYearCard {
  optional uint32 newYearCardId = 1; // normal type
  optional uint64 selectStartAt = 2; // normal type
  optional uint64 selectEndAt = 3; // normal type
  optional uint64 receiveStartAt = 4; // normal type
  optional uint64 receiveEndAt = 5; // normal type
  optional string assetBundleName = 6; // normal type
  optional uint32 limitedExchangesId = 7; // normal type
}
message uint_MasterNewYearCard {
  optional uint32 uint_MasterNewYearCard_key = 1; // normal type
  optional MasterNewYearCard uint_MasterNewYearCard_value = 2; // sub class
}
message MasterNewYearCardMap {
  repeated uint_MasterNewYearCard entries = 1; // dictionary
}
message MasterMusicJacket {
  optional uint32 musicJacketId = 1; // normal type
  optional uint32 musicId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string jacketImage = 4; // normal type
  optional uint64 startAt = 5; // normal type
}
message MasterMusicJacketList {
  repeated MasterMusicJacket entries = 1; // array
}
message uint_MasterMusicJacketList {
  optional uint32 uint_MasterMusicJacketList_key = 1; // normal type
  optional MasterMusicJacketList uint_MasterMusicJacketList_value = 2; // sub class
}
message MasterMusicJacketMap {
  repeated uint_MasterMusicJacketList entries = 1; // dictionary
}
message MasterBackstageTalkSet {
  optional uint32 backstageTalkSetId = 1; // normal type
  optional string backstageTalkSetAssetBundleName = 2; // normal type
  optional string timelineAssetBundleName = 3; // normal type
  optional string description = 4; // normal type
  optional string voiceAssetBundleName = 5; // normal type
  optional string title = 6; // normal type
  repeated uint32 characterIds = 7; // array
  optional uint32 seasonSpecialId = 8; // normal type
  optional string backstageTalkSetType = 9; // normal type
  optional uint32 seasonBasicId = 10; // normal type
  optional uint32 areaId = 11; // normal type
  optional bool forceMoveBackstageFlg = 12; // normal type
  optional string startSeason = 13; // normal type
  optional string endSeason = 14; // normal type
}
message uint_MasterBackstageTalkSet {
  optional uint32 uint_MasterBackstageTalkSet_key = 1; // normal type
  optional MasterBackstageTalkSet uint_MasterBackstageTalkSet_value = 2; // sub class
}
message MasterBackstageTalkSetMap {
  repeated uint_MasterBackstageTalkSet entries = 1; // dictionary
}
message MasterBackstageSpine {
  optional uint32 backstageSpineId = 1; // normal type
  optional uint32 modelId = 2; // normal type
  optional string backstageSpineType = 3; // normal type
  optional uint32 seasonBasicId = 4; // nullable
  optional string assetBundleName = 5; // normal type
  optional string resourceAssetBundleName = 6; // normal type
  optional string costumeType = 7; // normal type
}
message uint_MasterBackstageSpine {
  optional uint32 uint_MasterBackstageSpine_key = 1; // normal type
  optional MasterBackstageSpine uint_MasterBackstageSpine_value = 2; // sub class
}
message MasterBackstageSpineMap {
  repeated uint_MasterBackstageSpine entries = 1; // dictionary
}
message MasterBackstageBackground {
  optional uint32 backstageBackgroundId = 1; // normal type
  optional uint32 specialSeasonId = 2; // normal type
  optional string resourceAssetBundleName = 3; // normal type
  optional uint32 priority = 4; // normal type
  optional uint32 areaId = 5; // normal type
}
message uint_MasterBackstageBackground {
  optional uint32 uint_MasterBackstageBackground_key = 1; // normal type
  optional MasterBackstageBackground uint_MasterBackstageBackground_value = 2; // sub class
}
message MasterBackstageBackgroundMap {
  repeated uint_MasterBackstageBackground entries = 1; // dictionary
}
message MasterBackstageMusic {
  optional uint32 backstageMusicId = 1; // normal type
  optional uint32 specialSeasonId = 2; // normal type
  optional string resourceAssetBundleName = 3; // normal type
  optional uint32 priority = 4; // normal type
  optional uint32 areaId = 5; // normal type
}
message uint_MasterBackstageMusic {
  optional uint32 uint_MasterBackstageMusic_key = 1; // normal type
  optional MasterBackstageMusic uint_MasterBackstageMusic_value = 2; // sub class
}
message MasterBackstageMusicMap {
  repeated uint_MasterBackstageMusic entries = 1; // dictionary
}
message MasterSafeAreaDevice {
  optional uint32 id = 1; // normal type
  optional string deviceName = 2; // normal type
  optional uint32 positionX = 3; // normal type
  optional uint32 positionY = 4; // normal type
  optional uint32 width = 5; // normal type
  optional uint32 height = 6; // normal type
}
message string_MasterSafeAreaDevice {
  optional string string_MasterSafeAreaDevice_key = 1; // normal type
  optional MasterSafeAreaDevice string_MasterSafeAreaDevice_value = 2; // sub class
}
message MasterSafeAreaDeviceMap {
  repeated string_MasterSafeAreaDevice entries = 1; // dictionary
}
message MasterEventPointReward {
  optional uint32 id = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional uint64 point = 3; // normal type
  optional string rewardType = 4; // normal type
  optional uint32 rewardId = 5; // normal type
  optional uint32 rewardQuantity = 6; // normal type
  optional bool recommendFlg = 7; // normal type
}
message MasterEventRankingReward {
  optional uint32 id = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional uint32 fromRank = 3; // normal type
  optional uint32 toRank = 4; // normal type
  optional string rewardType = 5; // normal type
  optional uint32 rewardId = 6; // normal type
  optional uint32 rewardQuantity = 7; // normal type
  optional bool recommendFlg = 8; // normal type
}
message MasterEvent {
  optional uint32 eventId = 1; // normal type
  optional string eventType = 2; // normal type
  optional string eventName = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint64 startAt = 5; // normal type
  optional uint64 endAt = 6; // normal type
  optional bool enableFlg = 7; // normal type
  optional uint64 publicStartAt = 8; // normal type
  optional uint64 publicEndAt = 9; // normal type
  optional uint64 distributionStartAt = 10; // normal type
  optional uint64 distributionEndAt = 11; // normal type
  optional string bgmAssetBundleName = 12; // normal type
  optional string bgmFileName = 13; // normal type
  optional uint64 aggregateEndAt = 14; // normal type
  optional uint64 eventExchangesEndAt = 15; // nullable
  optional uint64 receptionEndAt = 16; // normal type
  optional uint32 previousEventId = 18; // normal type
  repeated MasterEventPointReward pointRewards = 101; // array
  repeated MasterEventRankingReward rankingRewards = 102; // array
}
message uint_MasterEvent {
  optional uint32 uint_MasterEvent_key = 1; // normal type
  optional MasterEvent uint_MasterEvent_value = 2; // sub class
}
message MasterEventMap {
  repeated uint_MasterEvent entries = 1; // dictionary
}
message MasterEventConfig {
  optional string configKeyType = 1; // normal type
  optional string value = 2; // normal type
}
message string_MasterEventConfig {
  optional string string_MasterEventConfig_key = 1; // normal type
  optional MasterEventConfig string_MasterEventConfig_value = 2; // sub class
}
message MasterEventConfigMap {
  repeated string_MasterEventConfig entries = 1; // dictionary
}
message MasterVibratableDevice {
  optional uint32 id = 1; // normal type
  optional string deviceName = 2; // normal type
}
message string_MasterVibratableDevice {
  optional string string_MasterVibratableDevice_key = 1; // normal type
  optional MasterVibratableDevice string_MasterVibratableDevice_value = 2; // sub class
}
message MasterVibratableDeviceMap {
  repeated string_MasterVibratableDevice entries = 1; // dictionary
}
message MasterElection {
  optional uint32 electionId = 1; // normal type
  optional string assetBundleName = 2; // normal type
  optional uint64 publicStartAt = 3; // normal type
  optional uint64 publicEndAt = 4; // normal type
  optional uint64 voteStartAt = 5; // normal type
  optional uint64 voteEndAt = 6; // normal type
  optional uint64 interimAggregationStartAt = 7; // normal type
  optional uint64 interimReportAt = 8; // normal type
  optional uint64 aggregationStartAt = 9; // normal type
  optional uint64 aggregationEndAt = 10; // normal type
  optional uint64 resultReportStartAt = 11; // normal type
  optional uint64 resultReportEndAt = 12; // normal type
  optional uint32 snsShareId = 13; // normal type
  optional string electionWebviewUrl = 14; // normal type
  optional string electionOfficialSiteUrl = 15; // normal type
  optional uint32 electionTicketId = 16; // normal type
}
message uint_MasterElection {
  optional uint32 uint_MasterElection_key = 1; // normal type
  optional MasterElection uint_MasterElection_value = 2; // sub class
}
message MasterElectionMap {
  repeated uint_MasterElection entries = 1; // dictionary
}
message MasterElectionBand {
  optional uint32 electionId = 1; // normal type
  optional uint32 bandId = 2; // normal type
  optional uint32 priority = 3; // normal type
  optional string imageUrl = 4; // normal type
}
message uint_MasterElectionBand {
  optional uint32 uint_MasterElectionBand_key = 1; // normal type
  optional MasterElectionBand uint_MasterElectionBand_value = 2; // sub class
}
message MasterElectionBandElectionMap {
  repeated uint_MasterElectionBand entries = 1; // dictionary
}
message uint_MasterElectionBandElectionMap {
  optional uint32 uint_MasterElectionBandElectionMap_key = 1; // normal type
  optional MasterElectionBandElectionMap uint_MasterElectionBandElectionMap_value = 2; // sub class
}
message MasterElectionBandMap {
  repeated uint_MasterElectionBandElectionMap entries = 1; // dictionary
}
message MasterElectionTicket {
  optional uint32 electionTicketId = 1; // normal type
  optional string name = 2; // normal type
}
message uint_MasterElectionTicket {
  optional uint32 uint_MasterElectionTicket_key = 1; // normal type
  optional MasterElectionTicket uint_MasterElectionTicket_value = 2; // sub class
}
message MasterElectionTicketMap {
  repeated uint_MasterElectionTicket entries = 1; // dictionary
}
message MasterSnsShareReward {
  optional uint32 snsShareId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
}
message uint_MasterSnsShareReward {
  optional uint32 uint_MasterSnsShareReward_key = 1; // normal type
  optional MasterSnsShareReward uint_MasterSnsShareReward_value = 2; // sub class
}
message MasterSnsShareRewardMap {
  repeated uint_MasterSnsShareReward entries = 1; // dictionary
}
message MasterSnsShare {
  optional uint32 snsShareId = 1; // normal type
  optional uint64 startAt = 2; // normal type
  optional uint64 endAt = 3; // normal type
}
message uint_MasterSnsShare {
  optional uint32 uint_MasterSnsShare_key = 1; // normal type
  optional MasterSnsShare uint_MasterSnsShare_value = 2; // sub class
}
message MasterSnsShareMap {
  repeated uint_MasterSnsShare entries = 1; // dictionary
}
message MasterDecoFrame {
  optional uint32 decoFrameId = 1; // normal type
  optional string decoFrameName = 2; // normal type
  optional string decoFrameType = 3; // normal type
  optional uint32 maxLevel = 4; // normal type
  optional string assetBundleName = 5; // normal type
  optional string description = 6; // normal type
  optional uint32 seq = 7; // normal type
  optional string resourceName = 8; // normal type
}
message uint_MasterDecoFrame {
  optional uint32 uint_MasterDecoFrame_key = 1; // normal type
  optional MasterDecoFrame uint_MasterDecoFrame_value = 2; // sub class
}
message MasterDecoFrameMap {
  repeated uint_MasterDecoFrame entries = 1; // dictionary
}
message MasterDecoPins {
  optional uint32 decoPinsId = 1; // normal type
  optional string decoPinsName = 2; // normal type
  optional string decoPinsType = 3; // normal type
  optional string decoPinsRarityType = 4; // normal type
  optional uint32 decoPinsSize = 5; // normal type
  optional string assetBundleName = 6; // normal type
  optional string description = 7; // normal type
  optional uint32 decoPinsTypeId = 8; // normal type
  optional bool isCollaboration = 9; // normal type
}
message uint_MasterDecoPins {
  optional uint32 uint_MasterDecoPins_key = 1; // normal type
  optional MasterDecoPins uint_MasterDecoPins_value = 2; // sub class
}
message MasterDecoPinsMap {
  repeated uint_MasterDecoPins entries = 1; // dictionary
}
message MasterDecoPinsSet {
  optional uint32 decoPinsSetId = 1; // normal type
  optional string decoPinsSetName = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional string description = 4; // normal type
}
message uint_MasterDecoPinsSet {
  optional uint32 uint_MasterDecoPinsSet_key = 1; // normal type
  optional MasterDecoPinsSet uint_MasterDecoPinsSet_value = 2; // sub class
}
message MasterDecoPinsSetMap {
  repeated uint_MasterDecoPinsSet entries = 1; // dictionary
}
message MasterEventAttribute {
  optional uint32 eventId = 1; // normal type
  optional string attribute = 2; // normal type
  optional float percent = 3; // normal type
}
message MasterEventCharacter {
  optional uint32 eventId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional float percent = 3; // normal type
  optional uint32 seq = 4; // normal type
}
message MasterEventStoryReward {
  optional uint32 id = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string rewardType = 4; // normal type
  optional uint32 rewardId = 5; // normal type
  optional uint32 rewardQuantity = 6; // normal type
}
message MasterEventStory {
  optional uint32 eventId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string caption = 3; // normal type
  optional string title = 4; // normal type
  optional string synopsis = 5; // normal type
  optional string scenarioId = 6; // normal type
  optional string coverImage = 7; // normal type
  optional string backgroundImage = 8; // normal type
  optional uint64 releasePt = 9; // normal type
  optional string releaseConditions = 10; // normal type
  optional uint32 bandStoryId = 11; // nullable
  optional uint32 backgroundImageId = 12; // normal type
  optional uint32 mainStoryId = 13; // normal type
  repeated MasterEventStoryReward rewards = 101; // array
}
message MasterEventAttributeAndCharacterBonus {
  optional uint32 eventId = 1; // normal type
  optional float pointPercent = 2; // normal type
  optional float parameterPercent = 3; // normal type
}
message MasterStoryEvent {
  optional uint32 eventId = 1; // normal type
  repeated MasterEventAttribute attributes = 101; // array
  repeated MasterEventCharacter characters = 102; // array
  repeated MasterEventStory stories = 103; // array
  optional MasterEventAttributeAndCharacterBonus eventAttributeAndCharacterBonus = 104; // sub class
}
message uint_MasterStoryEvent {
  optional uint32 uint_MasterStoryEvent_key = 1; // normal type
  optional MasterStoryEvent uint_MasterStoryEvent_value = 2; // sub class
}
message MasterStoryEventMap {
  repeated uint_MasterStoryEvent entries = 1; // dictionary
}
message MasterEventLiveBoost {
  optional uint32 useCount = 1; // normal type
  optional float percent = 2; // normal type
}
message uint_MasterEventLiveBoost {
  optional uint32 uint_MasterEventLiveBoost_key = 1; // normal type
  optional MasterEventLiveBoost uint_MasterEventLiveBoost_value = 2; // sub class
}
message MasterEventLiveBoostMap {
  repeated uint_MasterEventLiveBoost entries = 1; // dictionary
}
message MasterEventExchanges {
  optional uint32 eventId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string caption = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
  optional uint32 amount = 7; // normal type
  optional uint32 exchangeLimit = 8; // nullable
  optional string reset = 9; // normal type
  optional string badge = 10; // normal type
  optional uint64 publishedAt = 11; // nullable
  optional uint64 closedAt = 12; // nullable
  optional bool recommendFlg = 13; // normal type
  optional bool allowDuplicationFlg = 14; // normal type
}
message MasterEventExchangesList {
  repeated MasterEventExchanges entries = 1; // list
}
message MasterEventItem {
  optional uint32 eventItemId = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional string itemName = 3; // normal type
  optional string resourceName = 4; // normal type
  optional string description = 5; // normal type
  optional string eventItemOverrideName = 6; // normal type
  optional string assetBundleName = 7; // normal type
  optional string unitName = 8; // normal type
}
message uint_MasterEventItem {
  optional uint32 uint_MasterEventItem_key = 1; // normal type
  optional MasterEventItem uint_MasterEventItem_value = 2; // sub class
}
message MasterEventItemMap {
  repeated uint_MasterEventItem entries = 1; // dictionary
}
message MasterEventLoginReward {
  optional uint32 eventId = 1; // normal type
  optional uint32 days = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
}
message MasterEventLoginRewardList {
  repeated MasterEventLoginReward entries = 1; // list
}
message uint_MasterEventLoginRewardList {
  optional uint32 uint_MasterEventLoginRewardList_key = 1; // normal type
  optional MasterEventLoginRewardList uint_MasterEventLoginRewardList_value = 2; // sub class
}
message MasterEventLoginRewardMap {
  repeated uint_MasterEventLoginRewardList entries = 1; // dictionary
}
message MasterEventMusicAchievement {
  optional uint32 eventId = 1; // normal type
  optional uint32 musicId = 2; // normal type
  optional string achievementType = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
}
message MasterEventMusicRankingReward {
  optional uint32 id = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional uint32 musicId = 3; // normal type
  optional uint32 fromRank = 4; // normal type
  optional uint32 toRank = 5; // normal type
  optional string resourceType = 6; // normal type
  optional uint32 resourceId = 7; // normal type
  optional uint32 quantity = 8; // normal type
  optional bool recommendFlg = 9; // normal type
}
message MasterEventMusic {
  optional uint32 eventId = 1; // normal type
  optional uint32 musicId = 2; // normal type
  optional uint32 seq = 3; // normal type
  repeated MasterEventMusicAchievement musicAchievements = 101; // array
  repeated MasterEventMusicRankingReward musicRankingRewards = 102; // array
}
message MasterEventChallengeCost {
  optional uint32 eventId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 cost = 3; // normal type
  optional uint32 ratio = 4; // normal type
}
message MasterEventCharacterParameterBonus {
  optional uint32 eventId = 1; // normal type
  optional float performance = 2; // normal type
  optional float technique = 3; // normal type
  optional float visual = 4; // normal type
}
message MasterEventMember {
  optional uint32 eventId = 1; // normal type
  optional uint32 situationId = 2; // normal type
  optional float percent = 3; // normal type
  optional uint32 seq = 4; // normal type
  optional float maxPercent = 5; // normal type
}
message uint_MasterEventMember {
  optional uint32 uint_MasterEventMember_key = 1; // normal type
  optional MasterEventMember uint_MasterEventMember_value = 2; // sub class
}
message MasterEventMemberMap {
  repeated uint_MasterEventMember entries = 1; // dictionary
}
message MasterLimitBreakBonus {
  optional uint32 rarity = 1; // normal type
  optional uint32 rank = 2; // normal type
  optional float percent = 3; // normal type
}
message MasterLimitBreakBonusList {
  repeated MasterLimitBreakBonus entries = 1; // list
}
message uint_MasterLimitBreakBonusList {
  optional uint32 uint_MasterLimitBreakBonusList_key = 1; // normal type
  optional MasterLimitBreakBonusList uint_MasterLimitBreakBonusList_value = 2; // sub class
}
message MasterLimitBreakBonusMap {
  repeated uint_MasterLimitBreakBonusList entries = 1; // dictionary
}
message MasterEventBonusBalloonThreshold {
  optional string eventType = 1; // normal type
  optional uint32 threshold1 = 2; // normal type
  optional uint32 threshold2 = 3; // normal type
}
message MasterChallengeEvent {
  optional uint32 eventId = 1; // normal type
  repeated MasterEventAttribute attributes = 101; // array
  repeated MasterEventCharacter characters = 102; // array
  repeated MasterEventStory stories = 103; // array
  repeated MasterEventMusic musics = 104; // array
  repeated MasterEventChallengeCost challengeCosts = 105; // array
  optional MasterEventCharacterParameterBonus eventCharacterParameterBonus = 106; // sub class
  optional MasterEventAttributeAndCharacterBonus eventAttributeAndCharacterBonus = 107; // sub class
  optional MasterEventMemberMap members = 108; // sub class
  optional MasterLimitBreakBonusMap limitBreaks = 109; // sub class
  optional MasterEventBonusBalloonThreshold threshold = 110; // sub class
}
message uint_MasterChallengeEvent {
  optional uint32 uint_MasterChallengeEvent_key = 1; // normal type
  optional MasterChallengeEvent uint_MasterChallengeEvent_value = 2; // sub class
}
message MasterChallengeEventMap {
  repeated uint_MasterChallengeEvent entries = 1; // dictionary
}
message MasterEventLiveContribution {
  optional uint32 participant = 1; // normal type
  optional uint32 rank = 2; // normal type
  optional uint32 rate = 3; // normal type
}
message MasterEventLiveContributionList {
  repeated MasterEventLiveContribution entries = 1; // list
}
message uint_MasterEventLiveContributionList {
  optional uint32 uint_MasterEventLiveContributionList_key = 1; // normal type
  optional MasterEventLiveContributionList uint_MasterEventLiveContributionList_value = 2; // sub class
}
message MasterEventLiveContributionMap {
  repeated uint_MasterEventLiveContributionList entries = 1; // dictionary
}
message MasterMultiVersusLiveScore {
  optional uint32 musicId = 1; // normal type
  optional uint32 scoreSS = 2; // normal type
  optional uint32 scoreS = 3; // normal type
  optional uint32 scoreA = 4; // normal type
  optional uint32 scoreB = 5; // normal type
  optional uint32 scoreC = 6; // normal type
}
message uint_MasterMultiVersusLiveScore {
  optional uint32 uint_MasterMultiVersusLiveScore_key = 1; // normal type
  optional MasterMultiVersusLiveScore uint_MasterMultiVersusLiveScore_value = 2; // sub class
}
message MasterMultiVersusLiveScoreMap {
  repeated uint_MasterMultiVersusLiveScore entries = 1; // dictionary
}
message MasterMultiVersusLiveMatchingLogic {
  optional uint32 id = 1; // normal type
  optional uint32 logicOrder = 2; // normal type
  optional uint32 totalPowerFrom = 3; // normal type
  optional uint32 totalPowerTo = 4; // normal type
  optional int32 searchFrom = 5; // normal type
  optional int32 searchTo = 6; // normal type
}
message MasterMultiVersusLiveMatchingLogicList {
  repeated MasterMultiVersusLiveMatchingLogic entries = 1; // list
}
message MasterVersusEvent {
  optional uint32 eventId = 1; // normal type
  repeated MasterEventAttribute attributes = 101; // array
  repeated MasterEventCharacter characters = 102; // array
  repeated MasterEventStory stories = 103; // array
  repeated MasterEventMusic musics = 104; // array
  optional MasterEventCharacterParameterBonus eventCharacterParameterBonus = 105; // sub class
  optional MasterEventAttributeAndCharacterBonus eventAttributeAndCharacterBonus = 106; // sub class
  optional MasterEventMemberMap members = 107; // sub class
  optional MasterLimitBreakBonusMap limitBreaks = 108; // sub class
  optional MasterEventBonusBalloonThreshold threshold = 109; // sub class
}
message uint_MasterVersusEvent {
  optional uint32 uint_MasterVersusEvent_key = 1; // normal type
  optional MasterVersusEvent uint_MasterVersusEvent_value = 2; // sub class
}
message MasterVersusEventMap {
  repeated uint_MasterVersusEvent entries = 1; // dictionary
}
message MasterEventBoxGachaDetail {
  optional uint32 eventBoxGachaId = 1; // normal type
  optional uint32 round = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional uint32 count = 4; // normal type
  optional string resourceType = 5; // normal type
  optional uint32 resourceId = 6; // normal type
  optional uint32 resourceQuantity = 7; // normal type
  optional bool pickupFlag = 8; // normal type
}
message MasterEventBoxGachaDetailList {
  repeated MasterEventBoxGachaDetail entries = 1; // list
}
message uint_MasterEventBoxGachaDetailList {
  optional uint32 uint_MasterEventBoxGachaDetailList_key = 1; // normal type
  optional MasterEventBoxGachaDetailList uint_MasterEventBoxGachaDetailList_value = 2; // sub class
}
message MasterEventBoxGachaLive2d {
  optional uint32 live2dId = 1; // normal type
  optional string costumeBundleName = 2; // normal type
}
message MasterEventBoxGachaLive2dThreshold {
  optional string commonsLive2dCategory = 1; // normal type
  optional uint32 threshold = 2; // normal type
}
message MasterEventBoxGacha {
  optional uint32 eventBoxGachaId = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional string name = 3; // normal type
  optional uint64 publishedAt = 5; // normal type
  optional uint64 closedAt = 6; // normal type
  optional string rewardItemName = 7; // normal type
  optional string rewardBgBundleName = 8; // normal type
  optional string assetBundleName = 9; // normal type
  repeated uint_MasterEventBoxGachaDetailList detailsMap = 101; // dictionary
  repeated MasterEventBoxGachaLive2d live2dList = 102; // list
  repeated MasterEventBoxGachaLive2dThreshold thresholdList = 103; // list
}
message uint_MasterEventBoxGacha {
  optional uint32 uint_MasterEventBoxGacha_key = 1; // normal type
  optional MasterEventBoxGacha uint_MasterEventBoxGacha_value = 2; // sub class
}
message MasterEventBoxGachaMap {
  repeated uint_MasterEventBoxGacha entries = 1; // dictionary
}
message MasterLiveTryMission {
  optional uint32 eventId = 1; // normal type
  optional uint32 liveTryMissionId = 2; // normal type
  optional string liveTryMissionType = 3; // normal type
  optional string liveTryMissionDifficultyType = 4; // normal type
  optional uint32 level = 5; // normal type
  optional uint32 liveTryMissionDetailId = 6; // normal type
}
message uint_MasterLiveTryMission {
  optional uint32 uint_MasterLiveTryMission_key = 1; // normal type
  optional MasterLiveTryMission uint_MasterLiveTryMission_value = 2; // sub class
}
message MasterLiveTryMissionMap {
  repeated uint_MasterLiveTryMission entries = 1; // dictionary
}
message MasterLiveTryMissionDetail {
  optional uint32 liveTryMissionDetailId = 1; // normal type
  optional string musicDescription = 101; // normal type
  optional string difficultyDescription = 102; // normal type
  optional string description = 103; // normal type
}
message uint_MasterLiveTryMissionDetail {
  optional uint32 uint_MasterLiveTryMissionDetail_key = 1; // normal type
  optional MasterLiveTryMissionDetail uint_MasterLiveTryMissionDetail_value = 2; // sub class
}
message MasterLiveTryMissionDetailMap {
  repeated uint_MasterLiveTryMissionDetail entries = 1; // dictionary
}
message string_uint {
  optional string string_uint_key = 1; // normal type
  optional uint32 string_uint_value = 2; // normal type
}
message MasterLiveTryMissionTypeSequenceMap {
  repeated string_uint entries = 1; // dictionary
}
message MasterLiveTryMissionReward {
  optional uint32 eventId = 1; // normal type
  optional uint32 liveTryMissionId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
}
message MasterLiveTryMissionRewardList {
  repeated MasterLiveTryMissionReward entries = 1; // list
}
message uint_MasterLiveTryMissionRewardList {
  optional uint32 uint_MasterLiveTryMissionRewardList_key = 1; // normal type
  optional MasterLiveTryMissionRewardList uint_MasterLiveTryMissionRewardList_value = 2; // sub class
}
message MasterLiveTryMissionRewardMap {
  repeated uint_MasterLiveTryMissionRewardList entries = 1; // dictionary
}
message MasterLiveTryLevelReward {
  optional uint32 eventId = 1; // normal type
  optional string liveTryMissionDifficultyType = 2; // normal type
  optional uint32 level = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
}
message uint_MasterLiveTryLevelReward {
  optional uint32 uint_MasterLiveTryLevelReward_key = 1; // normal type
  optional MasterLiveTryLevelReward uint_MasterLiveTryLevelReward_value = 2; // sub class
}
message MasterLiveTryLevelRewardMap {
  repeated uint_MasterLiveTryLevelReward entries = 1; // dictionary
}
message string_MasterLiveTryLevelRewardMap {
  optional string string_MasterLiveTryLevelRewardMap_key = 1; // normal type
  optional MasterLiveTryLevelRewardMap string_MasterLiveTryLevelRewardMap_value = 2; // sub class
}
message MasterLiveTryLevelRewardDifficultyMap {
  repeated string_MasterLiveTryLevelRewardMap entries = 1; // dictionary
}
message MasterLiveTryEvent {
  optional uint32 eventId = 1; // normal type
  repeated MasterEventAttribute attributes = 101; // array
  repeated MasterEventCharacter characters = 102; // array
  repeated MasterEventStory stories = 103; // array
  optional MasterLiveTryMissionMap masterLiveTryMissionMap = 201; // sub class
  optional MasterLiveTryMissionDetailMap masterLiveTryMissionDetailMap = 202; // sub class
  optional MasterLiveTryMissionTypeSequenceMap masterLiveTryMissionTypeSequenceMap = 203; // sub class
  optional MasterLiveTryMissionRewardMap masterLiveTryMissionRewardMap = 204; // sub class
  optional MasterLiveTryLevelRewardDifficultyMap masterLiveTryLevelRewardDifficultyMap = 205; // sub class
  optional MasterEventAttributeAndCharacterBonus eventAttributeAndCharacterBonus = 206; // sub class
  optional MasterEventMemberMap members = 207; // sub class
  optional MasterLimitBreakBonusMap limitBreaks = 208; // sub class
  optional MasterEventBonusBalloonThreshold threshold = 209; // sub class
}
message uint_MasterLiveTryEvent {
  optional uint32 uint_MasterLiveTryEvent_key = 1; // normal type
  optional MasterLiveTryEvent uint_MasterLiveTryEvent_value = 2; // sub class
}
message MasterLiveTryEventMap {
  repeated uint_MasterLiveTryEvent entries = 1; // dictionary
}
message MasterEventSituation {
  optional uint32 eventId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 situationId = 3; // normal type
}
message MasterEventSituationList {
  repeated MasterEventSituation entries = 1; // list
}
message uint_MasterEventSituationList {
  optional uint32 uint_MasterEventSituationList_key = 1; // normal type
  optional MasterEventSituationList uint_MasterEventSituationList_value = 2; // sub class
}
message MasterEventSituationMap {
  repeated uint_MasterEventSituationList entries = 1; // dictionary
}
message MasterMissionLiveEvent {
  optional uint32 eventId = 1; // normal type
  repeated MasterEventAttribute attributes = 2; // array
  repeated MasterEventCharacter characters = 3; // array
  repeated MasterEventStory stories = 4; // array
  optional MasterEventAttributeAndCharacterBonus eventAttributeAndCharacterBonus = 5; // sub class
  optional MasterEventMemberMap members = 6; // sub class
  optional MasterLimitBreakBonusMap limitBreaks = 7; // sub class
  optional MasterEventBonusBalloonThreshold threshold = 8; // sub class
}
message uint_MasterMissionLiveEvent {
  optional uint32 uint_MasterMissionLiveEvent_key = 1; // normal type
  optional MasterMissionLiveEvent uint_MasterMissionLiveEvent_value = 2; // sub class
}
message MasterMissionLiveEventMap {
  repeated uint_MasterMissionLiveEvent entries = 1; // dictionary
}
message MasterPremiumPassDetail {
  optional uint32 purchaseId = 1; // normal type
  optional uint32 expiredDays = 2; // normal type
  optional uint32 homeBalloonSeq = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional string firstTabBalloonDescription = 5; // normal type
  optional string secondTabBalloonDescription = 6; // normal type
  optional string homeBalloonDescription = 7; // normal type
  optional string tabName = 8; // normal type
  optional string detailDialogTitle = 9; // normal type
  optional string detailDialogUrl = 10; // normal type
  optional uint32 receivableCount = 11; // normal type
  optional string receivePassName = 12; // normal type
  optional string dialogMessage = 13; // normal type
}
message uint_MasterPremiumPassDetail {
  optional uint32 uint_MasterPremiumPassDetail_key = 1; // normal type
  optional MasterPremiumPassDetail uint_MasterPremiumPassDetail_value = 2; // sub class
}
message MasterPremiumPassDetailMap {
  repeated uint_MasterPremiumPassDetail entries = 1; // dictionary
}
message MasterNewSituationIntroductionDetail {
  optional uint32 newSituationIntroductionId = 1; // normal type
  optional uint32 situationId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string motion = 4; // normal type
  optional string voiceId = 5; // normal type
  optional float situationPositionX = 6; // normal type
  optional string newSituationText = 7; // normal type
  optional string live2dPresetVoice = 8; // normal type
  optional bool isExistLive2dSpecialVoice = 9; // normal type
}
message MasterNewSituationAnimationIntroductionDetail {
  optional uint32 newSituationIntroductionId = 1; // normal type
  optional uint32 situationId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional float situationPositionX = 4; // normal type
}
message MasterNewSituationIntroduction {
  optional uint32 newSituationIntroductionId = 1; // normal type
  optional uint32 gachaId = 2; // normal type
  optional string logoPosition = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
  repeated MasterNewSituationIntroductionDetail details = 6; // array
  optional string textureImageName = 7; // normal type
  optional bool newIconFlag = 8; // normal type
  optional string introductionType = 9; // normal type
  repeated MasterNewSituationAnimationIntroductionDetail animationDetails = 10; // list
}
message MasterNewSituationIntroductionList {
  repeated MasterNewSituationIntroduction entries = 1; // list
}
message MasterGachaInformation {
  optional uint32 gachaId = 1; // normal type
  optional string description = 2; // normal type
  optional string term = 3; // normal type
  optional string newMemberInfo = 4; // normal type
  optional string stepInfo = 5; // normal type
  optional string setInfo = 6; // normal type
  optional string notice = 7; // normal type
  optional string annotation = 8; // normal type
}
message uint_MasterGachaInformation {
  optional uint32 uint_MasterGachaInformation_key = 1; // normal type
  optional MasterGachaInformation uint_MasterGachaInformation_value = 2; // sub class
}
message MasterGachaInformationMap {
  repeated uint_MasterGachaInformation entries = 1; // dictionary
}
message MasterGenericAnimation {
  optional uint32 genericAnimationId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional bool priorityFlg = 4; // normal type
  optional uint64 startAt = 5; // normal type
  optional uint64 endAt = 6; // normal type
  optional string genericAnimationType = 7; // normal type
  optional bool sideMarginflg = 8; // normal type
  optional bool notDeleteFlg = 9; // normal type
}
message uint_MasterGenericAnimation {
  optional uint32 uint_MasterGenericAnimation_key = 1; // normal type
  optional MasterGenericAnimation uint_MasterGenericAnimation_value = 2; // sub class
}
message MasterGenericAnimationMap {
  repeated uint_MasterGenericAnimation entries = 1; // dictionary
}
message MasterGachaCeilingConfig {
  optional uint32 gachaCeilingConfigId = 1; // normal type
  optional uint32 ceilingCount = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 amountForOneCount = 5; // normal type
  repeated uint32 gachaSealExchangeItemIds = 6; // array
}
message uint_MasterGachaCeilingConfig {
  optional uint32 uint_MasterGachaCeilingConfig_key = 1; // normal type
  optional MasterGachaCeilingConfig uint_MasterGachaCeilingConfig_value = 2; // sub class
}
message MasterGachaCeilingConfigMap {
  repeated uint_MasterGachaCeilingConfig entries = 1; // dictionary
}
message MasterGachaSealInformation {
  optional uint32 gachaId = 1; // normal type
  optional string description = 2; // normal type
  optional string cost = 3; // normal type
  optional string exchangeTargets = 4; // normal type
  optional string expiredChangeResource = 5; // normal type
  optional string gachaSealInheritInfo = 6; // normal type
  optional string attention = 7; // normal type
}
message uint_MasterGachaSealInformation {
  optional uint32 uint_MasterGachaSealInformation_key = 1; // normal type
  optional MasterGachaSealInformation uint_MasterGachaSealInformation_value = 2; // sub class
}
message MasterGachaSealInformationMap {
  repeated uint_MasterGachaSealInformation entries = 1; // dictionary
}
message MasterSubscriptionDetail {
  optional uint32 purchaseId = 1; // normal type
  optional uint32 singleLiveBoostBonus = 2; // normal type
  optional uint32 doubleLiveBoostBonus = 3; // normal type
  optional uint32 tripleLiveBoostBonus = 4; // normal type
  optional string assetBundleName = 5; // normal type
  optional string termsOfServicePath = 6; // normal type
  optional string notesPath = 7; // normal type
  optional string dialogDescription = 8; // normal type
  optional string dialogSubscriptionDescription = 9; // normal type
  optional string dialogSubscriptionNotice = 10; // normal type
  optional string dialogDailyRewardsDescription = 11; // normal type
  optional string dialogDailyRewardsNotice = 12; // normal type
  optional string dialogMonthlyRewardsDescription = 13; // normal type
  optional string dialogMonthlyRewardsNotice = 14; // normal type
  optional string dialogCumulativeRewardsDescription = 15; // normal type
  optional string dialogCumulativeRewardsNotice = 16; // normal type
}
message MasterSubscriptionDetailList {
  repeated MasterSubscriptionDetail list = 1; // list
}
message MasterGraphicalInformation {
  optional uint32 graphicalInformationId = 1; // normal type
  optional uint64 viewStartAt = 2; // normal type
  optional uint64 viewEndAt = 3; // normal type
  optional string transitionMethod = 4; // normal type
  optional string slideAssetBundleName = 5; // normal type
  optional uint32 transitionId = 6; // normal type
  optional string targetUserType = 7; // normal type
  optional string transitionMethod2 = 8; // normal type
  optional uint32 transitionId2 = 9; // normal type
}
message MasterGraphicalInformationList {
  repeated MasterGraphicalInformation entries = 1; // list
}
message MasterDailyLiveReward {
  optional uint32 id = 1; // normal type
  optional string resourceType = 2; // normal type
  optional uint32 resourceId = 3; // normal type
  optional uint32 quantity = 4; // normal type
  optional uint32 clearLiveNum = 5; // normal type
  optional string rewardType = 6; // normal type
  optional uint32 seq = 7; // normal type
}
message MasterDailyLiveRewardList {
  repeated MasterDailyLiveReward entries = 1; // list
}
message MasterEventMovie {
  optional uint32 eventId = 1; // normal type
  optional string type = 2; // normal type
  optional string assetBundleName = 3; // normal type
}
message MasterEventMovieList {
  repeated MasterEventMovie entries = 1; // list
}
message MasterCollaboOriginalMusicPage {
  optional uint32 collaboOriginalPageId = 1; // normal type
  optional string assetBundleName = 2; // normal type
  optional string ruleSlideBundleName = 3; // normal type
  optional string url = 4; // normal type
  repeated uint32 musicIdList = 5; // array
  optional uint64 publishedAt = 6; // normal type
  optional uint64 closedAt = 7; // normal type
  optional string description = 8; // normal type
  optional string shortDescription = 9; // normal type
  optional string label = 10; // normal type
  optional string labelColor = 11; // normal type
  optional string backgroundName = 12; // normal type
  optional string animationName = 13; // normal type
}
message MasterCollaboOriginalMusicPageList {
  repeated MasterCollaboOriginalMusicPage entries = 1; // array
}
message MasterDailyLive {
  optional uint32 id = 1; // normal type
  optional uint32 clearLiveNum = 2; // normal type
}
message MasterDailyLiveList {
  repeated MasterDailyLive entries = 1; // list
}
message MasterMissionGroupHeader {
  optional string assetBundleName = 1; // normal type
  optional string url = 2; // normal type
}
message MasterMissionReward {
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
}
message MasterMissionDetailReleaseCondition {
  optional string hint = 1; // normal type
  optional string releaseConditionDescription = 2; // normal type
  optional uint32 releaseRank = 3; // normal type
}
message MasterMissionDetail {
  optional uint32 seq = 2; // normal type
  optional string title = 3; // normal type
  optional string description = 4; // normal type
  optional uint32 maxProgress = 5; // normal type
  optional uint32 valueId = 11; // normal type
  optional MasterMissionReward reward = 12; // sub class
  optional MasterMissionDetailReleaseCondition releaseCondition = 13; // sub class
}
message MasterMissionDetailList {
  repeated MasterMissionDetail entries = 1; // array
}
message MasterMission {
  optional uint32 missionId = 1; // normal type
  optional string transitionMethod = 3; // normal type
  optional uint32 transitionId = 4; // normal type
  optional uint64 startAt = 5; // normal type
  optional uint32 seq = 8; // normal type
  optional uint32 valueId = 17; // normal type
  optional MasterMissionDetailList detailList = 18; // sub class
  optional string labelText = 19; // normal type
  optional uint32 typeIndex = 20; // normal type
}
message MasterMissionList {
  repeated MasterMission entries = 1; // array
}
message MasterMissionGroup {
  optional uint32 missionGroupId = 1; // normal type
  optional string missionResetType = 3; // normal type
  optional uint64 startAt = 6; // normal type
  optional uint64 endAt = 7; // normal type
  optional uint64 rewardEndAt = 8; // normal type
  optional uint32 eventId = 9; // normal type
  optional string homeEffectType = 10; // normal type
  optional string tabLabel = 11; // normal type
  optional MasterMissionGroupHeader header = 12; // sub class
  optional MasterMissionList missionList = 13; // sub class
  optional string type = 14; // normal type
}
message MasterMissionGroupList {
  repeated MasterMissionGroup entries = 1; // array
}
message MasterMissionUintValue {
  optional uint32 valueUint = 1; // normal type
}
message uint_MasterMissionUintValue {
  optional uint32 uint_MasterMissionUintValue_key = 1; // normal type
  optional MasterMissionUintValue uint_MasterMissionUintValue_value = 2; // sub class
}
message MasterMissionStringValue {
  optional string valueString = 1; // normal type
}
message uint_MasterMissionStringValue {
  optional uint32 uint_MasterMissionStringValue_key = 1; // normal type
  optional MasterMissionStringValue uint_MasterMissionStringValue_value = 2; // sub class
}
message MasterMissionAreaItemValue {
  optional uint32 bandId = 1; // normal type
  repeated uint32 categoryIds = 2; // array
}
message uint_MasterMissionAreaItemValue {
  optional uint32 uint_MasterMissionAreaItemValue_key = 1; // normal type
  optional MasterMissionAreaItemValue uint_MasterMissionAreaItemValue_value = 2; // sub class
}
message MasterMissionValueList {
  repeated uint_MasterMissionUintValue valueUintMap = 1; // dictionary
  repeated uint_MasterMissionStringValue valueStringMap = 2; // dictionary
  repeated uint_MasterMissionAreaItemValue valueAreaItemMap = 3; // dictionary
}
message MasterMissionIdListValue {
  repeated uint32 valueIds = 1; // array
}
message uint_MasterMissionIdListValue {
  optional uint32 uint_MasterMissionIdListValue_key = 1; // normal type
  optional MasterMissionIdListValue uint_MasterMissionIdListValue_value = 2; // sub class
}
message MasterMissionIdParameterValue {
  optional uint32 valueId = 1; // normal type
  optional uint32 valueParameter = 2; // normal type
}
message uint_MasterMissionIdParameterValue {
  optional uint32 uint_MasterMissionIdParameterValue_key = 1; // normal type
  optional MasterMissionIdParameterValue uint_MasterMissionIdParameterValue_value = 2; // sub class
}
message MasterMissionStringParameterValue {
  optional string valueString = 1; // normal type
  optional uint32 valueParameter = 2; // normal type
}
message uint_MasterMissionStringParameterValue {
  optional uint32 uint_MasterMissionStringParameterValue_key = 1; // normal type
  optional MasterMissionStringParameterValue uint_MasterMissionStringParameterValue_value = 2; // sub class
}
message MasterMissionSetlistValue {
  repeated uint_MasterMissionIdListValue entries = 1; // dictionary
}
message uint_MasterMissionSetlistValue {
  optional uint32 uint_MasterMissionSetlistValue_key = 1; // normal type
  optional MasterMissionSetlistValue uint_MasterMissionSetlistValue_value = 2; // sub class
}
message MasterMissionDetailValueList {
  repeated uint_MasterMissionUintValue valueUintMap = 1; // dictionary
  repeated uint_MasterMissionStringValue valueStringMap = 2; // dictionary
  repeated uint_MasterMissionIdListValue valueIdListMap = 3; // dictionary
  repeated uint_MasterMissionIdParameterValue valueIdParamMap = 4; // dictionary
  repeated uint_MasterMissionStringParameterValue valueStringParamMap = 5; // dictionary
  repeated uint_MasterMissionSetlistValue valueSetlistMap = 6; // dictionary
}
message MasterLiveBoostBonus {
  optional string liveBoostBonusType = 1; // normal type
  optional uint32 singleLiveBoostBonus = 2; // normal type
  optional uint32 doubleLiveBoostBonus = 3; // normal type
  optional uint32 tripleLiveBoostBonus = 4; // normal type
}
message MasterLiveBoostBonusList {
  repeated MasterLiveBoostBonus entries = 1; // list
}
message MasterComebackBonus {
  optional uint32 id = 1; // normal type
  optional uint32 startableDays = 2; // normal type
  optional uint64 publishedAt = 3; // normal type
  optional uint64 closedAt = 4; // normal type
  optional uint32 gachaId = 5; // normal type
}
message MasterComebackBonusList {
  repeated MasterComebackBonus entries = 1; // list
}
message MasterBandStoryChapterSpecialPage {
  optional uint32 id = 1; // normal type
  optional string trailerAssetBundleName = 2; // normal type
  optional uint64 publishedAt = 3; // normal type
  optional uint64 closedAt = 4; // normal type
  optional uint32 eventId = 5; // normal type
  optional uint32 bandId = 6; // normal type
  optional string assetBundleName = 7; // normal type
  optional string bgmAssetBundleName = 8; // normal type
  optional string bgmFileName = 9; // normal type
}
message MasterBandStoryChapterSpecialPageList {
  repeated MasterBandStoryChapterSpecialPage entries = 1; // list
}
message MasterDigestPrecedingStory {
  optional uint32 id = 1; // normal type
  optional uint32 specialPageId = 2; // normal type
  optional string scenarioId = 3; // normal type
  optional uint32 eventId = 4; // normal type
  optional uint32 bandId = 5; // normal type
  optional uint32 seq = 6; // normal type
  optional uint64 publishedAt = 7; // normal type
  optional string title = 8; // normal type
  optional string coverImage = 9; // normal type
  optional string voiceAssetBundleName = 10; // normal type
  optional string digestPrecedingType = 11; // normal type
}
message MasterDigestPrecedingStoryList {
  repeated MasterDigestPrecedingStory entries = 1; // list
}
message MasterDigestStoryDetail {
  optional uint32 id = 1; // normal type
  optional uint32 digestStoryId = 2; // normal type
  optional string digestStoryType = 3; // normal type
  optional uint32 storyTypeRelatedId = 4; // normal type
  optional uint32 storySeq = 5; // normal type
  optional uint32 seq = 6; // normal type
}
message MasterDigestStoryDetailList {
  repeated MasterDigestStoryDetail entries = 1; // list
}
message MasterMultiBandRoom {
  optional uint32 multiBandRoomId = 1; // normal type
  optional uint32 bandId = 2; // normal type
  optional uint32 skinLaneId = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
}
message MasterMultiBandRoomList {
  repeated MasterMultiBandRoom entries = 1; // list
}
message MasterMultiLiveCountConfig {
  optional uint32 multiLiveCountId = 1; // normal type
  optional string type = 2; // normal type
  optional uint64 startAt = 3; // normal type
  optional uint64 endAt = 4; // normal type
}
message MasterMultiLiveCountConfigList {
  repeated MasterMultiLiveCountConfig entries = 1; // list
}
message Resource {
  optional string resourceType = 1; // normal type
  optional uint32 resourceId = 2; // normal type
  optional uint32 quantity = 3; // normal type
}
message ResourceList {
  repeated Resource entries = 1; // list
}
message MasterMultiLiveCountReward {
  optional uint32 multiLiveCountId = 1; // normal type
  optional uint64 count = 2; // normal type
  repeated ResourceList rewardList = 3; // list
}
message MasterMultiLiveCountRewardList {
  repeated MasterMultiLiveCountReward entries = 1; // list
}
message MasterMultiLiveCountDayReward {
  optional uint32 day = 1; // normal type
  optional uint64 startAt = 2; // normal type
  optional uint64 endAt = 3; // normal type
  optional MasterMultiLiveCountRewardList rewardList = 4; // sub class
}
message MasterMultiLiveCountDayRewardList {
  repeated MasterMultiLiveCountDayReward entries = 1; // list
}
message MasterCountdownReward {
  optional MasterMultiLiveCountRewardList allReward = 1; // sub class
  optional MasterMultiLiveCountDayRewardList dayReward = 2; // sub class
  optional ResourceList liveBoostUseBonusReward = 3; // sub class
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
}
message MasterSpecialPage {
  optional uint32 specialPageId = 1; // normal type
  optional string title = 2; // normal type
  optional string transitionType = 3; // normal type
  optional uint64 publishedAt = 4; // normal type
  optional uint64 closedAt = 5; // normal type
}
message MasterSpecialPageList {
  repeated MasterSpecialPage entries = 1; // list
}
message MasterBroadcastProgramSpecialPage {
  optional uint32 broadcastProgramSpecialPageId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string tabTitle = 3; // normal type
  optional uint64 broadcastStartAt = 4; // normal type
  optional uint64 broadcastEndAt = 5; // normal type
  optional string assetBundleName = 6; // normal type
  optional string linkUrl = 7; // normal type
}
message MasterBroadcastProgramSpecialPageList {
  repeated MasterBroadcastProgramSpecialPage entries = 1; // list
}
message MasterPlaybackListSpecialPage {
  optional uint32 playbackListSpecialPageId = 1; // normal type
  optional uint32 tabId = 2; // normal type
  optional string tabTitle = 3; // normal type
  optional uint64 publishedAt = 4; // normal type
}
message MasterPlaybackListSpecialPageList {
  repeated MasterPlaybackListSpecialPage entries = 1; // list
}
message MasterPlaybackListSpecialPageDetail {
  optional uint32 playbackListSpecialPageId = 1; // normal type
  optional uint32 tabId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string transitionType = 4; // normal type
  optional uint32 transitionId = 5; // normal type
}
message MasterPlaybackListSpecialPageDetailList {
  repeated MasterPlaybackListSpecialPageDetail entries = 1; // list
}
message MasterMultiBandRoomDifficulty {
  optional uint32 id = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 bandId = 3; // normal type
  optional string difficulty = 4; // normal type
  optional string multiLiveDifficultyType = 5; // normal type
  optional float bonusRate = 6; // normal type
}
message MasterMultiBandRoomDifficultyList {
  repeated MasterMultiBandRoomDifficulty entries = 1; // list
}
message MasterWeeklyMultiBandRoomDifficulty {
  optional uint32 id = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 dayOfWeek = 3; // normal type
  optional uint32 bandId = 4; // normal type
  optional string difficulty = 5; // normal type
  optional string multiLiveDifficultyType = 6; // normal type
  optional float bonusRate = 7; // normal type
}
message MasterWeeklyMultiBandRoomDifficultyList {
  repeated MasterWeeklyMultiBandRoomDifficulty entries = 1; // list
}
message MasterCountDownPage {
  optional uint32 id = 1; // normal type
  optional string assetBundleName = 2; // normal type
  optional string bgmAssetBundleName = 3; // normal type
  optional string bgmFileName = 4; // normal type
  optional string url = 5; // normal type
  optional uint64 publishedAt = 6; // normal type
  optional uint64 closedAt = 7; // normal type
}
message MasterCountDownPageList {
  repeated MasterCountDownPage entries = 1; // list
}
message MasterPanelMissionReward {
  optional string resourceType = 1; // normal type
  optional uint32 resourceId = 2; // normal type
  optional uint32 quantity = 3; // normal type
}
message MasterPanelMissionPanel {
  optional string fileName = 1; // normal type
  optional uint32 typeIndex = 2; // normal type
  optional uint32 valueId = 3; // normal type
  optional uint32 maxProgress = 4; // normal type
  optional string title = 5; // normal type
  optional string description = 6; // normal type
  optional string hint = 7; // normal type
  optional string transitionMethod = 8; // normal type
  optional uint32 transitionId = 9; // normal type
  optional MasterPanelMissionReward reward = 10; // sub class
}
message uint_MasterPanelMissionPanel {
  optional uint32 uint_MasterPanelMissionPanel_key = 1; // normal type
  optional MasterPanelMissionPanel uint_MasterPanelMissionPanel_value = 2; // sub class
}
message MasterPanelMissionBoard {
  optional MasterPanelMissionReward completeReward = 1; // sub class
  repeated uint_MasterPanelMissionPanel panelMissionPanelMap = 2; // dictionary
  optional string panelFrameColor = 3; // normal type
  optional string panelIconColor = 4; // normal type
}
message uint_MasterPanelMissionBoard {
  optional uint32 uint_MasterPanelMissionBoard_key = 1; // normal type
  optional MasterPanelMissionBoard uint_MasterPanelMissionBoard_value = 2; // sub class
}
message MasterPanelMission {
  optional string type = 1; // normal type
  optional string assetBundleName = 2; // normal type
  optional uint32 maxBoardSeq = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
  repeated uint_MasterPanelMissionBoard panelMissionBoardMap = 6; // dictionary
  optional uint32 id = 7; // normal type
}
message uint_MasterPanelMission {
  optional uint32 uint_MasterPanelMission_key = 1; // normal type
  optional MasterPanelMission uint_MasterPanelMission_value = 2; // sub class
}
message MasterPanelMissionMap {
  repeated uint_MasterPanelMission entries = 1; // dictionary
}
message MasterPanelMissionValueList {
  repeated uint_MasterMissionUintValue valueUintMap = 1; // dictionary
  repeated uint_MasterMissionStringValue valueStringMap = 2; // dictionary
}
message MasterBirthdayIntroduction {
  optional uint32 id = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint64 startAt = 3; // normal type
  optional uint64 endAt = 4; // normal type
  optional uint32 situationId = 5; // normal type
  optional string motion = 6; // normal type
  optional string bundleName = 7; // normal type
  optional string live2dPresetVoice = 8; // normal type
}
message MasterBirthdayIntroductionList {
  repeated MasterBirthdayIntroduction entries = 1; // list
}
message MasterFestivalRotationMusic {
  optional uint32 id = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional uint32 musicId = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
}
message MasterFestivalRotationMusicList {
  repeated MasterFestivalRotationMusic entries = 1; // list
}
message MasterFestivalStage {
  optional uint32 id = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional string type = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
}
message MasterFestivalStageList {
  repeated MasterFestivalStage entries = 1; // list
}
message MasterFestivalStageDescription {
  optional string stageType = 1; // normal type
  optional string name = 2; // normal type
  optional string description = 3; // normal type
}
message MasterFestivalStageDescriptionList {
  repeated MasterFestivalStageDescription entries = 1; // list
}
message MasterFestivalTeam {
  optional uint32 eventId = 1; // normal type
  optional uint32 teamId = 2; // normal type
  optional string teamName = 3; // normal type
  optional string iconFileName = 4; // normal type
  optional string themeTitle = 5; // normal type
}
message MasterFestivalTeamList {
  repeated MasterFestivalTeam entries = 1; // array
}
message MasterFestivalTeamReward {
  optional string festivalResultType = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
}
message MasterFestivalTeamRewardList {
  repeated MasterFestivalTeamReward entries = 1; // list
}
message MasterFestivalEvent {
  optional uint32 eventId = 1; // normal type
  repeated MasterEventAttribute attributes = 2; // array
  repeated MasterEventCharacter characters = 3; // array
  repeated MasterEventStory stories = 4; // array
  optional MasterEventAttributeAndCharacterBonus eventAttributeAndCharacterBonus = 5; // sub class
  repeated MasterEventMusic musics = 6; // array
  optional MasterFestivalTeamList teamList = 7; // sub class
  optional MasterFestivalTeamRewardList teamRewards = 8; // sub class
  optional string themeTitle = 9; // normal type
  optional MasterEventCharacterParameterBonus eventCharacterParameterBonus = 10; // sub class
  optional MasterEventMemberMap members = 11; // sub class
  optional MasterLimitBreakBonusMap limitBreaks = 12; // sub class
  optional MasterEventBonusBalloonThreshold threshold = 13; // sub class
}
message uint_MasterFestivalEvent {
  optional uint32 uint_MasterFestivalEvent_key = 1; // normal type
  optional MasterFestivalEvent uint_MasterFestivalEvent_value = 2; // sub class
}
message MasterFestivalEventMap {
  repeated uint_MasterFestivalEvent entries = 1; // dictionary
}
message MasterMultiFestivalLiveScore {
  optional uint32 musicId = 1; // normal type
  optional uint32 scoreSS = 2; // normal type
  optional uint32 scoreS = 3; // normal type
  optional uint32 scoreA = 4; // normal type
  optional uint32 scoreB = 5; // normal type
  optional uint32 scoreC = 6; // normal type
}
message uint_MasterMultiFestivalLiveScore {
  optional uint32 uint_MasterMultiFestivalLiveScore_key = 1; // normal type
  optional MasterMultiFestivalLiveScore uint_MasterMultiFestivalLiveScore_value = 2; // sub class
}
message MasterMultiFestivalLiveScoreMap {
  repeated uint_MasterMultiFestivalLiveScore entries = 1; // dictionary
}
message uint_MasterFestivalTeamRewardList {
  optional uint32 uint_MasterFestivalTeamRewardList_key = 1; // normal type
  optional MasterFestivalTeamRewardList uint_MasterFestivalTeamRewardList_value = 2; // sub class
}
message MasterEventFestivalTeamRewardMap {
  repeated uint_MasterFestivalTeamRewardList entries = 1; // dictionary
}
message FestivalDisplayPointRate {
  optional uint32 seq = 1; // normal type
  optional uint32 eventId = 2; // normal type
  optional uint64 startAt = 3; // normal type
  optional uint64 endAt = 4; // normal type
}
message MasterFestivalDisplayPointRateList {
  repeated FestivalDisplayPointRate entries = 1; // array
}
message MasterGachaSealExchange {
  optional uint32 gachaSealExchangeId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 situationId = 3; // normal type
}
message MasterGachaSealExchangeList {
  repeated MasterGachaSealExchange entries = 1; // list
}
message MasterDegreeSet {
  optional uint32 degreeSetId = 1; // normal type
  optional string degreeSetName = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional string description = 4; // normal type
}
message MasterDegreeSetList {
  repeated MasterDegreeSet entries = 1; // array
}
message MasterDegreeSetDetail {
  optional uint32 degreeSetId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 degreeId = 3; // normal type
}
message MasterDegreeSetDetailList {
  repeated MasterDegreeSetDetail entries = 1; // array
}
message MasterChangedStamp {
  optional uint32 changedStampId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint64 changeStartAt = 3; // normal type
  optional uint64 changeEndAt = 4; // normal type
  optional string changeSoundBundleName = 5; // normal type
  optional string buttonBalloonLabel = 6; // normal type
}
message MasterChangedStampList {
  repeated MasterChangedStamp entries = 1; // array
}
message MasterChangedStampDetail {
  optional uint32 changedStampId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 stampId = 3; // normal type
  optional string changeSoundName = 4; // normal type
  optional uint32 changeProbability = 5; // normal type
  optional string changeImageName = 6; // normal type
  optional string balloonLabel = 7; // normal type
}
message MasterChangedStampDetailList {
  repeated MasterChangedStampDetail entries = 1; // array
}
message MasterLimitedItem {
  optional uint32 limitedItemId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string limitedItemName = 3; // normal type
  optional string description = 4; // normal type
  optional string unitName = 5; // normal type
  optional string resourceName = 6; // normal type
}
message MasterLimitedItemList {
  repeated MasterLimitedItem entries = 1; // array
}
message MasterLimitedExchanges {
  optional uint32 limitedExchangesId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string name = 3; // normal type
  optional uint64 publishedAt = 4; // normal type
  optional uint64 closedAt = 5; // nullable
  optional string limitedExchangesCategory = 6; // normal type
}
message MasterLimitedExchangesList {
  repeated MasterLimitedExchanges entries = 1; // array
}
message MasterLimitedExchangesDetail {
  optional uint32 limitedExchangesId = 1; // normal type
  optional uint32 limitedExchangesDetailId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string exchangesName = 4; // normal type
  optional uint64 publishedAt = 5; // normal type
  optional uint64 closedAt = 6; // nullable
  optional string resourceType = 7; // normal type
  optional uint32 resourceId = 8; // normal type
  optional uint32 quantity = 9; // normal type
  optional uint32 exchangeLimit = 10; // nullable
  optional uint32 amount = 11; // normal type
  optional string reset = 12; // normal type
  optional string badge = 13; // normal type
  optional string caption = 14; // normal type
  optional string consumeResourceType = 15; // normal type
  optional uint32 consumeResourceId = 16; // normal type
  optional uint32 consumeQuantity = 17; // normal type
  optional string consumeCaption = 18; // normal type
  optional bool isRecommend = 19; // normal type
  optional bool isDuplicable = 20; // normal type
}
message MasterLimitedExchangesDetailList {
  repeated MasterLimitedExchangesDetail entries = 1; // array
}
message MasterLive2dTalkSet {
  optional uint32 talkSetId = 1; // normal type
  optional uint32 situationId = 2; // normal type
  optional uint32 costumeId = 3; // normal type
  optional float probability = 4; // normal type
}
message MasterLive2dTalkSetList {
  repeated MasterLive2dTalkSet entries = 1; // list
}
message MasterLive2dTalk {
  optional uint32 talkId = 1; // normal type
  optional uint32 opponentCharacterId = 2; // normal type
  optional string seasonCostumeType = 3; // normal type
  optional string seasonType = 4; // normal type
}
message MasterLive2dTalkList {
  repeated MasterLive2dTalk entries = 1; // list
}
message uint_MasterLive2dTalkList {
  optional uint32 uint_MasterLive2dTalkList_key = 1; // normal type
  optional MasterLive2dTalkList uint_MasterLive2dTalkList_value = 2; // sub class
}
message MasterLive2dTalkMap {
  repeated uint_MasterLive2dTalkList entries = 1; // dictionary
}
message MasterLive2dSerif {
  optional uint32 serifId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional string serif = 3; // normal type
  optional string motion = 4; // normal type
  optional string expression = 5; // normal type
  optional string opponentMotion = 6; // normal type
  optional string opponentExpression = 7; // normal type
  optional float talkWindowChangeTime = 8; // normal type
  optional string frontCharacter = 9; // normal type
  optional string cueName = 10; // normal type
}
message MasterLive2dSerifList {
  repeated MasterLive2dSerif entries = 1; // list
}
message uint_MasterLive2dSerifList {
  optional uint32 uint_MasterLive2dSerifList_key = 1; // normal type
  optional MasterLive2dSerifList uint_MasterLive2dSerifList_value = 2; // sub class
}
message MasterLive2dSerifMap {
  repeated uint_MasterLive2dSerifList entries = 1; // dictionary
}
message MasterAnimationSituation {
  optional uint32 situationId = 1; // normal type
  optional string assetBundleName = 2; // normal type
}
message MasterAnimationSituationList {
  repeated MasterAnimationSituation entries = 1; // list
}
message MasterMedleyMusicScore {
  optional uint32 difficulty = 1; // normal type
  optional uint32 scoreMax = 2; // normal type
  optional uint32 scoreSSplus = 3; // normal type
  optional uint32 scoreSS = 4; // normal type
  optional uint32 scoreSplus = 5; // normal type
  optional uint32 scoreS = 6; // normal type
  optional uint32 scoreAplus = 7; // normal type
  optional uint32 scoreA = 8; // normal type
  optional uint32 scoreBplus = 9; // normal type
  optional uint32 scoreB = 10; // normal type
  optional uint32 scoreCplus = 11; // normal type
  optional uint32 scoreC = 12; // normal type
}
message MasterMedleyMusicScoreList {
  repeated MasterMedleyMusicScore entries = 1; // list
}
message MasterMedleyEvent {
  optional uint32 eventId = 1; // normal type
  repeated MasterEventAttribute attributes = 2; // array
  repeated MasterEventCharacter characters = 3; // array
  repeated MasterEventStory stories = 4; // array
  repeated MasterEventMusic musics = 5; // array
  optional MasterEventCharacterParameterBonus eventCharacterParameterBonus = 6; // sub class
  optional MasterEventAttributeAndCharacterBonus eventAttributeAndCharacterBonus = 7; // sub class
  optional MasterEventMemberMap members = 8; // sub class
  optional MasterLimitBreakBonusMap limitBreaks = 9; // sub class
  optional MasterEventBonusBalloonThreshold threshold = 10; // sub class
}
message uint_MasterMedleyEvent {
  optional uint32 uint_MasterMedleyEvent_key = 1; // normal type
  optional MasterMedleyEvent uint_MasterMedleyEvent_value = 2; // sub class
}
message MasterMedleyEventMap {
  repeated uint_MasterMedleyEvent entries = 1; // dictionary
}
message MedleyComboRate {
  optional uint32 seq = 1; // normal type
  optional uint32 fromCondition = 2; // normal type
  optional uint32 toCondition = 3; // normal type
  optional float scoreRate = 4; // normal type
}
message MasterMedleyComboRateList {
  repeated MedleyComboRate entries = 1; // array
}
message MasterSpecialLotteryCharacter {
  optional uint32 specialLotteryId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional string serif = 3; // normal type
  optional string specialLotteryResultType = 6; // normal type
  optional uint32 pairCharacterId = 7; // normal type
  optional string specialLotteryResultTypeName = 8; // normal type
  optional string couplingVoiceCueName = 9; // normal type
}
message MasterSpecialLotteryCharacterList {
  repeated MasterSpecialLotteryCharacter entries = 1; // array
}
message uint_MasterSpecialLotteryCharacterList {
  optional uint32 uint_MasterSpecialLotteryCharacterList_key = 1; // normal type
  optional MasterSpecialLotteryCharacterList uint_MasterSpecialLotteryCharacterList_value = 2; // sub class
}
message MasterSpecialLotteryCharacterMap {
  repeated uint_MasterSpecialLotteryCharacterList entries = 1; // dictionary
}
message MasterDeckRank {
  optional string rank = 1; // normal type
  optional uint32 level = 2; // normal type
  optional uint32 score = 3; // normal type
  optional uint64 publishedAt = 4; // normal type
}
message MasterDeckRankInfo {
  repeated MasterDeckRank totalDeckRank = 1; // array
  repeated MasterDeckRank singleDeckRank = 2; // array
}
message MasterStageChallenge {
  optional uint32 id = 1; // normal type
  optional string stageChallengeType = 2; // normal type
  optional uint32 bandId = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional uint64 startAt = 5; // normal type
  optional uint64 endAt = 6; // normal type
  optional string description = 7; // normal type
}
message MasterStageChallengeList {
  repeated MasterStageChallenge entries = 1; // array
}
message MasterStageChallengeStageNo {
  optional uint32 stageChallengeId = 1; // normal type
  optional uint32 stageChallengeStageNo = 2; // normal type
  optional uint32 stageNoAchievementScore1 = 3; // normal type
  optional uint32 stageNoAchievementScore2 = 4; // normal type
  optional uint32 stageNoAchievementScore3 = 5; // normal type
  optional uint32 stageNoCharacterId = 6; // normal type
  optional string stageNoAttribute = 7; // normal type
  optional uint32 musicId = 8; // normal type
  optional string releaseConditions = 9; // normal type
}
message MasterStageChallengeStageNoList {
  repeated MasterStageChallengeStageNo entries = 1; // array
}
message uint_MasterStageChallengeStageNoList {
  optional uint32 uint_MasterStageChallengeStageNoList_key = 1; // normal type
  optional MasterStageChallengeStageNoList uint_MasterStageChallengeStageNoList_value = 2; // sub class
}
message MasterStageChallengeStageNoMap {
  repeated uint_MasterStageChallengeStageNoList entries = 1; // dictionary
}
message MasterStageChallengeStageNoCharacter {
  optional uint32 stageNoCharacterId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 characterId = 3; // normal type
}
message MasterStageChallengeStageNoCharacterList {
  repeated MasterStageChallengeStageNoCharacter entries = 1; // array
}
message uint_MasterStageChallengeStageNoCharacterList {
  optional uint32 uint_MasterStageChallengeStageNoCharacterList_key = 1; // normal type
  optional MasterStageChallengeStageNoCharacterList uint_MasterStageChallengeStageNoCharacterList_value = 2; // sub class
}
message MasterStageChallengeStageNoCharacterMap {
  repeated uint_MasterStageChallengeStageNoCharacterList entries = 1; // dictionary
}
message MasterStageChallengeAchievement {
  optional uint32 stageChallengeId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 progress = 3; // normal type
  optional uint32 rewardId = 4; // normal type
}
message MasterStageChallengeAchievementList {
  repeated MasterStageChallengeAchievement entries = 1; // array
}
message uint_MasterStageChallengeAchievementList {
  optional uint32 uint_MasterStageChallengeAchievementList_key = 1; // normal type
  optional MasterStageChallengeAchievementList uint_MasterStageChallengeAchievementList_value = 2; // sub class
}
message MasterStageChallengeAchievementMap {
  repeated uint_MasterStageChallengeAchievementList entries = 1; // dictionary
}
message MasterStageChallengeReward {
  optional uint32 rewardId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
}
message MasterStageChallengeRewardList {
  repeated MasterStageChallengeReward entries = 1; // array
}
message uint_MasterStageChallengeRewardList {
  optional uint32 uint_MasterStageChallengeRewardList_key = 1; // normal type
  optional MasterStageChallengeRewardList uint_MasterStageChallengeRewardList_value = 2; // sub class
}
message MasterStageChallengeRewardMap {
  repeated uint_MasterStageChallengeRewardList entries = 1; // dictionary
}
message MasterStarSealExchangesDetail {
  optional uint32 starSealExchangeDetailId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string caption = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
  optional uint32 amount = 7; // normal type
  optional uint64 publishedAt = 8; // nullable
  optional uint64 closedAt = 9; // nullable
}
message uint_MasterStarSealExchangesDetail {
  optional uint32 uint_MasterStarSealExchangesDetail_key = 1; // normal type
  optional MasterStarSealExchangesDetail uint_MasterStarSealExchangesDetail_value = 2; // sub class
}
message MasterStarSealExchangeDetailMap {
  repeated uint_MasterStarSealExchangesDetail entries = 1; // dictionary
}
message MasterLiveBoostBonusRate {
  optional uint32 liveBoostCount = 1; // normal type
  optional uint32 defaultLiveBoostBonus = 2; // normal type
  optional uint32 garupaPassLiveBoostBonus = 3; // normal type
  optional uint32 comebackLiveBoostBonus = 4; // normal type
  optional uint32 garupaPassAndComebackLiveBoostBonus = 5; // normal type
  optional uint32 eventPointLiveBoostBonus = 6; // normal type
  optional bool fullUseCountUp = 7; // normal type
}
message uint_MasterLiveBoostBonusRate {
  optional uint32 uint_MasterLiveBoostBonusRate_key = 1; // normal type
  optional MasterLiveBoostBonusRate uint_MasterLiveBoostBonusRate_value = 2; // sub class
}
message MasterLiveBoostBonusRateMap {
  repeated uint_MasterLiveBoostBonusRate entries = 1; // dictionary
}
message MasterMonthlyMissionSeason {
  optional uint32 missionSeasonId = 1; // normal type
  optional uint64 startAt = 2; // normal type
  optional uint64 endAt = 3; // normal type
  optional bool isPublishPremiumMission = 4; // normal type
  optional uint32 seasonRewardMaxLivePoint = 5; // normal type
}
message uint_MasterMonthlyMissionSeason {
  optional uint32 uint_MasterMonthlyMissionSeason_key = 1; // normal type
  optional MasterMonthlyMissionSeason uint_MasterMonthlyMissionSeason_value = 2; // sub class
}
message MasterMonthlyMissionSeasonMap {
  repeated uint_MasterMonthlyMissionSeason entries = 1; // dictionary
}
message MasterMonthlyMissionRewardDetail {
  optional string missionType = 1; // normal type
  optional bool pickup = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
}
message MasterMonthlyMissionReward {
  optional uint32 missionSeasonId = 1; // normal type
  optional uint32 livePoint = 2; // normal type
  repeated MasterMonthlyMissionRewardDetail masterMonthlyMissionRewardDetailList = 3; // array
}
message MasterMonthlyMissionRewardList {
  repeated MasterMonthlyMissionReward entries = 1; // array
}
message uint_MasterMonthlyMissionRewardList {
  optional uint32 uint_MasterMonthlyMissionRewardList_key = 1; // normal type
  optional MasterMonthlyMissionRewardList uint_MasterMonthlyMissionRewardList_value = 2; // sub class
}
message MasterMonthlyMissionRewardListMap {
  repeated uint_MasterMonthlyMissionRewardList entries = 1; // dictionary
}
message MasterCharacterRank {
  optional uint32 rank = 1; // normal type
  optional uint64 exp = 2; // normal type
  optional uint64 publishedAt = 3; // normal type
}
message MasterCharacterRankList {
  repeated MasterCharacterRank entries = 1; // list
}
message MasterCharacterRankReward {
  optional uint32 rank = 1; // normal type
  optional string resourceType = 2; // normal type
  optional uint32 resourceId = 3; // normal type
  optional uint32 quantity = 4; // normal type
}
message MasterCharacterRankRewardList {
  repeated MasterCharacterRankReward entries = 1; // list
}
message uint_MasterCharacterRankRewardList {
  optional uint32 uint_MasterCharacterRankRewardList_key = 1; // normal type
  optional MasterCharacterRankRewardList uint_MasterCharacterRankRewardList_value = 2; // sub class
}
message MasterCharacterRankRewardListMap {
  repeated uint_MasterCharacterRankRewardList entries = 1; // dictionary
}
message MasterCharacterPotentialLevel {
  optional uint32 level = 1; // normal type
  optional uint64 coin = 2; // normal type
  optional float bonusParamRate = 3; // normal type
  optional uint64 publishedAt = 4; // normal type
  optional uint32 conditionedRank = 5; // normal type
}
message MasterCharacterPotentialLevelList {
  repeated MasterCharacterPotentialLevel entries = 1; // list
}
message MasterMainStoryDetail {
  optional uint32 id = 1; // normal type
  optional string seasonType = 2; // normal type
  optional uint32 eventId = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
  optional string supplement = 6; // normal type
  optional string appeal = 7; // normal type
}
message MasterMainStoryDetailList {
  repeated MasterMainStoryDetail entries = 1; // array
}
message MasterMusicVideo3d {
  optional uint32 musicVideo3dId = 1; // normal type
  optional uint32 musicId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string typeName = 4; // normal type
  optional int32 musicStartDelayMilliseconds = 5; // normal type
  optional uint64 startAt = 6; // normal type
  optional uint64 endAt = 7; // normal type
  optional uint32 originalMember1 = 8; // normal type
  optional uint32 originalMember2 = 9; // normal type
  optional uint32 originalMember3 = 10; // normal type
  optional uint32 originalMember4 = 11; // normal type
  optional uint32 originalMember5 = 12; // normal type
  optional string assetBundleName = 13; // normal type
  optional uint32 member1Position = 14; // normal type
  optional uint32 member2Position = 15; // normal type
  optional uint32 member3Position = 16; // normal type
  optional uint32 member4Position = 17; // normal type
  optional uint32 member5Position = 18; // normal type
  optional string backgroundAssetBundleName = 19; // normal type
  optional uint32 backgroundColorId = 20; // normal type
}
message uint_MasterMusicVideo3d {
  optional uint32 uint_MasterMusicVideo3d_key = 1; // normal type
  optional MasterMusicVideo3d uint_MasterMusicVideo3d_value = 2; // sub class
}
message MasterMusicVideo3dMap {
  repeated uint_MasterMusicVideo3d entries = 1; // dictionary
}
message MasterCostume3dDress {
  optional uint32 costume3dDressId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional uint32 costume3dGroupId = 3; // normal type
  optional string colorType = 4; // normal type
  optional string colorName = 5; // normal type
  optional uint32 makingCostId = 7; // normal type
  optional string attentionMessage = 8; // normal type
  optional string shortAttentionMessage = 9; // normal type
  optional uint32 costume3dColorId = 10; // normal type
}
message uint_MasterCostume3dDress {
  optional uint32 uint_MasterCostume3dDress_key = 1; // normal type
  optional MasterCostume3dDress uint_MasterCostume3dDress_value = 2; // sub class
}
message MasterCostume3dDressMap {
  repeated uint_MasterCostume3dDress entries = 1; // dictionary
}
message MasterCostume3dHairstyle {
  optional uint32 costume3dHairstyleId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional uint32 costume3dGroupId = 3; // normal type
  optional string colorType = 4; // normal type
  optional string colorName = 5; // normal type
  optional string attentionMessage = 6; // normal type
  optional string shortAttentionMessage = 7; // normal type
  optional uint32 costume3dColorId = 8; // normal type
}
message uint_MasterCostume3dHairstyle {
  optional uint32 uint_MasterCostume3dHairstyle_key = 1; // normal type
  optional MasterCostume3dHairstyle uint_MasterCostume3dHairstyle_value = 2; // sub class
}
message MasterCostume3dHairstyleMap {
  repeated uint_MasterCostume3dHairstyle entries = 1; // dictionary
}
message MasterHowToGet {
  optional uint32 conditionSeq = 1; // normal type
  optional string conditionType = 2; // normal type
  optional uint32 value = 3; // normal type
  optional string description = 5; // normal type
}
message MasterHowToGetList {
  repeated MasterHowToGet entries = 1; // list
}
message uint_MasterHowToGetList {
  optional uint32 uint_MasterHowToGetList_key = 1; // normal type
  optional MasterHowToGetList uint_MasterHowToGetList_value = 2; // sub class
}
message MasterCostume3dHowToGetMap {
  repeated uint_MasterHowToGetList entries = 1; // dictionary
}
message MasterCostume3dMakingCostMap {
  repeated uint_PlayerResourceList entries = 1; // dictionary
}
message MasterCostumeHowToGetMap {
  repeated uint_MasterHowToGetList entries = 1; // dictionary
}
message MasterEventLeast {
  optional uint32 eventId = 1; // normal type
  optional string eventName = 2; // normal type
  optional uint64 startAt = 3; // normal type
  optional uint64 endAt = 4; // normal type
}
message uint_MasterEventLeast {
  optional uint32 uint_MasterEventLeast_key = 1; // normal type
  optional MasterEventLeast uint_MasterEventLeast_value = 2; // sub class
}
message MasterEventLeastMap {
  repeated uint_MasterEventLeast entries = 1; // dictionary
}
message MasterDecoCharacterLive2dMotionIdList {
  repeated uint32 entries = 1; // list
}
message uint_MasterDecoCharacterLive2dMotionIdList {
  optional uint32 uint_MasterDecoCharacterLive2dMotionIdList_key = 1; // normal type
  optional MasterDecoCharacterLive2dMotionIdList uint_MasterDecoCharacterLive2dMotionIdList_value = 2; // sub class
}
message MasterDecoCharacterLive2dMotionListCharacterMap {
  repeated uint_MasterDecoCharacterLive2dMotionIdList entries = 1; // dictionary
}
message MasterCharacter3dMotionIdList {
  repeated uint32 entries = 1; // list
}
message uint_MasterCharacter3dMotionIdList {
  optional uint32 uint_MasterCharacter3dMotionIdList_key = 1; // normal type
  optional MasterCharacter3dMotionIdList uint_MasterCharacter3dMotionIdList_value = 2; // sub class
}
message MasterCharacter3dMotionListCharacterMap {
  repeated uint_MasterCharacter3dMotionIdList entries = 1; // dictionary
}
message MasterDecoCharacterBackground {
  optional uint32 backgroundId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string targetType = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional string fileName = 5; // normal type
  optional string thumbnailFileName = 6; // normal type
  optional string description = 7; // normal type
  optional uint64 publishedAt = 8; // normal type
  optional uint32 bandId = 9; // normal type
}
message uint_MasterDecoCharacterBackground {
  optional uint32 uint_MasterDecoCharacterBackground_key = 1; // normal type
  optional MasterDecoCharacterBackground uint_MasterDecoCharacterBackground_value = 2; // sub class
}
message MasterDecoCharacterBackgroundMap {
  repeated uint_MasterDecoCharacterBackground entries = 1; // dictionary
}
message MasterDecoAppeal {
  optional uint32 id = 1; // normal type
  optional string category = 2; // normal type
  optional string subCategory = 3; // normal type
}
message uint_MasterDecoAppeal {
  optional uint32 uint_MasterDecoAppeal_key = 1; // normal type
  optional MasterDecoAppeal uint_MasterDecoAppeal_value = 2; // sub class
}
message MasterDecoAppealMap {
  repeated uint_MasterDecoAppeal entries = 1; // dictionary
}
message MasterDecoCharacterLive2dPosition {
  optional uint32 characterId = 1; // normal type
  optional float characterPositionY = 2; // normal type
}
message uint_MasterDecoCharacterLive2dPosition {
  optional uint32 uint_MasterDecoCharacterLive2dPosition_key = 1; // normal type
  optional MasterDecoCharacterLive2dPosition uint_MasterDecoCharacterLive2dPosition_value = 2; // sub class
}
message MasterDecoCharacterLive2dPositionMap {
  repeated uint_MasterDecoCharacterLive2dPosition entries = 1; // dictionary
}
message MasterDecoCharacter3dPosition {
  optional uint32 characterId = 1; // normal type
  optional float characterPositionY = 2; // normal type
}
message uint_MasterDecoCharacter3dPosition {
  optional uint32 uint_MasterDecoCharacter3dPosition_key = 1; // normal type
  optional MasterDecoCharacter3dPosition uint_MasterDecoCharacter3dPosition_value = 2; // sub class
}
message MasterDecoCharacter3dPositionMap {
  repeated uint_MasterDecoCharacter3dPosition entries = 1; // dictionary
}
message MasterDecoCharacter3dMotionHowToGetListMap {
  repeated uint_MasterHowToGetList entries = 1; // dictionary
}
message MasterDecoCharacterBackgroundHowToGetListMap {
  repeated uint_MasterHowToGetList entries = 1; // dictionary
}
message MasterDecoFrameHowToGetListMap {
  repeated uint_MasterHowToGetList entries = 1; // dictionary
}
message MasterDecoCharacter3dMotionSet {
  optional uint32 motionSetId = 1; // normal type
  optional string setName = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional uint64 publishedAt = 5; // normal type
  optional string attentionMessage = 6; // normal type
  optional uint32 onlyForBandId = 7; // normal type
  optional string thumbnailFileName = 8; // normal type
  optional string shortAttentionMessage = 9; // normal type
}
message uint_MasterDecoCharacter3dMotionSet {
  optional uint32 uint_MasterDecoCharacter3dMotionSet_key = 1; // normal type
  optional MasterDecoCharacter3dMotionSet uint_MasterDecoCharacter3dMotionSet_value = 2; // sub class
}
message MasterDecoCharacter3dMotionSetMap {
  repeated uint_MasterDecoCharacter3dMotionSet entries = 1; // dictionary
}
message MasterDecoCharacter3dMotionSetDetail {
  optional uint32 motionSetId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 motionId = 3; // normal type
}
message MasterDecoCharacter3dMotionSetDetailList {
  repeated MasterDecoCharacter3dMotionSetDetail entries = 1; // list
}
message uint_MasterDecoCharacter3dMotionSetDetailList {
  optional uint32 uint_MasterDecoCharacter3dMotionSetDetailList_key = 1; // normal type
  optional MasterDecoCharacter3dMotionSetDetailList uint_MasterDecoCharacter3dMotionSetDetailList_value = 2; // sub class
}
message MasterDecoCharacter3dMotionSetDetailListMap {
  repeated uint_MasterDecoCharacter3dMotionSetDetailList entries = 1; // dictionary
}
message MasterDecoCharacterSituationPosition {
  optional uint32 situationId = 1; // normal type
  optional string situationStatus = 2; // normal type
  optional int32 positionX = 3; // normal type
  optional int32 positionY = 4; // normal type
  optional float scale = 5; // normal type
}
message MasterDecoCharacterSituationPositionList {
  repeated MasterDecoCharacterSituationPosition entries = 1; // list
}
message uint_MasterDecoCharacterSituationPositionList {
  optional uint32 uint_MasterDecoCharacterSituationPositionList_key = 1; // normal type
  optional MasterDecoCharacterSituationPositionList uint_MasterDecoCharacterSituationPositionList_value = 2; // sub class
}
message MasterDecoCharacterSituationPositionMap {
  repeated uint_MasterDecoCharacterSituationPositionList entries = 1; // dictionary
}
message MasterCutInSituationPosition {
  optional uint32 situationId = 1; // normal type
  optional string situationStatus = 2; // normal type
  optional int32 positionX = 3; // normal type
  optional int32 positionY = 4; // normal type
  optional float scale = 5; // normal type
}
message MasterCutInSituationPositionList {
  repeated MasterCutInSituationPosition entries = 1; // list
}
message uint_MasterCutInSituationPositionList {
  optional uint32 uint_MasterCutInSituationPositionList_key = 1; // normal type
  optional MasterCutInSituationPositionList uint_MasterCutInSituationPositionList_value = 2; // sub class
}
message MasterCutInSituationPositionListMap {
  repeated uint_MasterCutInSituationPositionList entries = 1; // dictionary
}
message MasterDecoCharacterLive2dLimitedMotion {
  optional uint32 costumeId = 1; // normal type
  optional uint32 motionId = 2; // normal type
  optional string motion = 3; // normal type
  optional string voice = 4; // normal type
  optional string description = 5; // normal type
}
message MasterDecoCharacterLive2dLimitedMotionList {
  repeated MasterDecoCharacterLive2dLimitedMotion entries = 1; // list
}
message uint_MasterDecoCharacterLive2dLimitedMotionList {
  optional uint32 uint_MasterDecoCharacterLive2dLimitedMotionList_key = 1; // normal type
  optional MasterDecoCharacterLive2dLimitedMotionList uint_MasterDecoCharacterLive2dLimitedMotionList_value = 2; // sub class
}
message MasterDecoCharacterLive2dLimitedMotionMap {
  repeated uint_MasterDecoCharacterLive2dLimitedMotionList entries = 1; // dictionary
}
message MasterMusicVideo3dIdList {
  repeated uint32 entries = 1; // array
}
message uint_MasterMusicVideo3dIdList {
  optional uint32 uint_MasterMusicVideo3dIdList_key = 1; // normal type
  optional MasterMusicVideo3dIdList uint_MasterMusicVideo3dIdList_value = 2; // sub class
}
message MasterMusicVideo3dIdListMap {
  repeated uint_MasterMusicVideo3dIdList entries = 1; // dictionary
}
message MasterCostume3dGroup {
  optional uint32 costume3dGroupId = 1; // normal type
  optional string costumeName = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string costumeTargetType = 4; // normal type
  optional uint32 ownerCharacterId = 5; // normal type
  optional uint32 bandId = 6; // normal type
  optional uint64 publishedAt = 7; // normal type
  optional uint32 situationId = 8; // normal type
  optional string assetBundleName = 9; // normal type
}
message uint_MasterCostume3dGroup {
  optional uint32 uint_MasterCostume3dGroup_key = 1; // normal type
  optional MasterCostume3dGroup uint_MasterCostume3dGroup_value = 2; // sub class
}
message MasterCostume3dGroupMap {
  repeated uint_MasterCostume3dGroup entries = 1; // dictionary
}
message MasterCharacter3dMotion {
  optional uint32 motionId = 1; // normal type
  optional uint32 characterId = 2; // normal type
  optional string motionRarity = 3; // normal type
  optional string motionName = 4; // normal type
  optional string motion = 5; // normal type
  optional string voice = 6; // normal type
  optional string serif = 7; // normal type
  optional string thumbnailFileName = 8; // normal type
  optional string attentionMessage = 10; // normal type
  optional string assetBundleName = 11; // normal type
  optional bool onlyForCharacter = 12; // normal type
  optional string shortAttentionMessage = 13; // normal type
}
message uint_MasterCharacter3dMotion {
  optional uint32 uint_MasterCharacter3dMotion_key = 1; // normal type
  optional MasterCharacter3dMotion uint_MasterCharacter3dMotion_value = 2; // sub class
}
message MasterCharacter3dMotionMap {
  repeated uint_MasterCharacter3dMotion entries = 1; // dictionary
}
message MasterDecoCharacterLive2dMotion {
  optional uint32 motionId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional uint32 characterId = 3; // normal type
  optional string motion = 4; // normal type
  optional string voice = 5; // normal type
  optional string thumbnailFileName = 6; // normal type
  optional string description = 7; // normal type
  optional uint64 publishedAt = 8; // normal type
}
message uint_MasterDecoCharacterLive2dMotion {
  optional uint32 uint_MasterDecoCharacterLive2dMotion_key = 1; // normal type
  optional MasterDecoCharacterLive2dMotion uint_MasterDecoCharacterLive2dMotion_value = 2; // sub class
}
message MasterDecoCharacterLive2dMotionMap {
  repeated uint_MasterDecoCharacterLive2dMotion entries = 1; // dictionary
}
message MasterCostume3dMakingItem {
  optional uint32 resourceId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string itemName = 3; // normal type
  optional string description = 4; // normal type
}
message uint_MasterCostume3dMakingItem {
  optional uint32 uint_MasterCostume3dMakingItem_key = 1; // normal type
  optional MasterCostume3dMakingItem uint_MasterCostume3dMakingItem_value = 2; // sub class
}
message MasterCostume3dMakingItemMap {
  repeated uint_MasterCostume3dMakingItem entries = 1; // dictionary
}
message MasterMusicLargeCategoryData {
  optional uint32 id = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string category = 3; // normal type
  optional string categoryName = 4; // normal type
  optional string categoryColor = 5; // normal type
  optional string mediumCategoryColor = 6; // normal type
}
message uint_MasterMusicLargeCategoryData {
  optional uint32 uint_MasterMusicLargeCategoryData_key = 1; // normal type
  optional MasterMusicLargeCategoryData uint_MasterMusicLargeCategoryData_value = 2; // sub class
}
message MasterMusicLargeCategoryDataMap {
  repeated uint_MasterMusicLargeCategoryData entries = 1; // dictionary
}
message MasterMusicMediumCategoryData {
  optional uint32 id = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string category = 3; // normal type
  optional string categoryName = 4; // normal type
}
message uint_MasterMusicMediumCategoryData {
  optional uint32 uint_MasterMusicMediumCategoryData_key = 1; // normal type
  optional MasterMusicMediumCategoryData uint_MasterMusicMediumCategoryData_value = 2; // sub class
}
message MasterMusicMediumCategoryDataMap {
  repeated uint_MasterMusicMediumCategoryData entries = 1; // dictionary
}
message MasterMusicCategoryInfo {
  optional uint32 id = 1; // normal type
  optional string targetType = 2; // normal type
  optional uint32 largeCategoryId = 3; // normal type
  optional uint32 mediumCategoryId = 4; // normal type
}
message uint_MasterMusicCategoryInfo {
  optional uint32 uint_MasterMusicCategoryInfo_key = 1; // normal type
  optional MasterMusicCategoryInfo uint_MasterMusicCategoryInfo_value = 2; // sub class
}
message MasterMusicCategoryInfoMap {
  repeated uint_MasterMusicCategoryInfo entries = 1; // dictionary
}
message MasterMusicCategoryInfoTargets {
  repeated uint32 musicCategoryIdList = 1; // array
  repeated uint32 shopCategoryIdList = 2; // array
}
message MasterMusicCategorySet {
  optional uint32 id = 1; // normal type
  repeated uint32 musicCategoryInfoIdList = 2; // array
}
message uint_MasterMusicCategorySet {
  optional uint32 uint_MasterMusicCategorySet_key = 1; // normal type
  optional MasterMusicCategorySet uint_MasterMusicCategorySet_value = 2; // sub class
}
message MasterMusicCategorySetMap {
  repeated uint_MasterMusicCategorySet entries = 1; // dictionary
}
message MasterLimitBreakItem {
  optional uint32 limitBreakItemId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string limitBreakItemName = 3; // normal type
  optional string description = 4; // normal type
}
message MasterLimitBreakItemList {
  repeated MasterLimitBreakItem entries = 1; // list
}
message MasterProp3d {
  optional uint32 propId = 1; // normal type
  optional string assetBundleName = 3; // normal type
  optional string propType = 4; // normal type
}
message uint_MasterProp3d {
  optional uint32 uint_MasterProp3d_key = 1; // normal type
  optional MasterProp3d uint_MasterProp3d_value = 2; // sub class
}
message MasterProp3dMap {
  repeated uint_MasterProp3d entries = 1; // dictionary
}
message MasterMusicVideo3dProp {
  optional uint32 musicVideo3dId = 1; // normal type
  optional uint32 positionSeq = 2; // normal type
  optional uint32 propId = 3; // normal type
}
message MasterMusicVideo3dPropList {
  repeated MasterMusicVideo3dProp entries = 1; // array
}
message uint_MasterMusicVideo3dPropList {
  optional uint32 uint_MasterMusicVideo3dPropList_key = 1; // normal type
  optional MasterMusicVideo3dPropList uint_MasterMusicVideo3dPropList_value = 2; // sub class
}
message MasterMusicVideo3dPropMap {
  repeated uint_MasterMusicVideo3dPropList entries = 1; // dictionary
}
message MasterMultiLiveMatchingLogic {
  optional uint32 id = 1; // normal type
  optional uint32 logicOrder = 2; // normal type
  optional int32 searchFrom = 3; // normal type
  optional int32 searchTo = 4; // normal type
}
message MasterMultiLiveMatchingLogicList {
  repeated MasterMultiLiveMatchingLogic entries = 1; // array
}
message uint_MasterMultiLiveMatchingLogicList {
  optional uint32 uint_MasterMultiLiveMatchingLogicList_key = 1; // normal type
  optional MasterMultiLiveMatchingLogicList uint_MasterMultiLiveMatchingLogicList_value = 2; // sub class
}
message MasterMultiLiveMatchingLogicListMap {
  repeated uint_MasterMultiLiveMatchingLogicList entries = 1; // dictionary
}
message MasterCutInCharacterPropDetail {
  optional uint32 propId = 2; // normal type
}
message MasterCutInCharacterPropDetailList {
  repeated MasterCutInCharacterPropDetail entries = 1; // list
}
message uint_MasterCutInCharacterPropDetailList {
  optional uint32 uint_MasterCutInCharacterPropDetailList_key = 1; // normal type
  optional MasterCutInCharacterPropDetailList uint_MasterCutInCharacterPropDetailList_value = 2; // sub class
}
message MasterCutInCharacterPropDetailMap {
  repeated uint_MasterCutInCharacterPropDetailList entries = 1; // dictionary
}
message MasterLimitBreak {
  optional uint32 rarity = 1; // normal type
  optional uint32 rank = 2; // normal type
  optional uint32 risePerformance = 3; // normal type
  optional uint32 riseTechniue = 4; // normal type
  optional uint32 riseVisual = 5; // normal type
  optional uint32 limitBreakItemId = 6; // normal type
  optional uint32 quantity = 7; // normal type
}
message MasterLimitBreakList {
  repeated MasterLimitBreak entries = 1; // list
}
message uint_MasterLimitBreakList {
  optional uint32 uint_MasterLimitBreakList_key = 1; // normal type
  optional MasterLimitBreakList uint_MasterLimitBreakList_value = 2; // sub class
}
message MasterLimitBreakMap {
  repeated uint_MasterLimitBreakList entries = 1; // dictionary
}
message MasterLimitBreakReward {
  optional uint32 situationId = 1; // normal type
  optional uint32 rank = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 quantity = 6; // normal type
  optional string grantType = 7; // normal type
}
message MasterLimitBreakRewardList {
  repeated MasterLimitBreakReward entries = 1; // list
}
message uint_MasterLimitBreakRewardList {
  optional uint32 uint_MasterLimitBreakRewardList_key = 1; // normal type
  optional MasterLimitBreakRewardList uint_MasterLimitBreakRewardList_value = 2; // sub class
}
message MasterLimitBreakRewardListMap {
  repeated uint_MasterLimitBreakRewardList entries = 1; // dictionary
}
message MasterLimitBreakRewardExp {
  optional uint32 rarity = 1; // normal type
  optional uint32 rank = 2; // normal type
  optional uint32 characterRankExp = 3; // normal type
}
message MasterLimitBreakRewardExpList {
  repeated MasterLimitBreakRewardExp entries = 1; // list
}
message uint_MasterLimitBreakRewardExpList {
  optional uint32 uint_MasterLimitBreakRewardExpList_key = 1; // normal type
  optional MasterLimitBreakRewardExpList uint_MasterLimitBreakRewardExpList_value = 2; // sub class
}
message MasterLimitBreakRewardExpListMap {
  repeated uint_MasterLimitBreakRewardExpList entries = 1; // dictionary
}
message MasterCostume3dSet {
  optional uint32 costume3dSetId = 1; // normal type
  optional string setName = 2; // normal type
  optional uint64 publishedAt = 3; // normal type
  optional string attentionMessage = 4; // normal type
  optional PlayerResourceList dialogShowResources = 5; // sub class
  optional PlayerResourceList dialogUnshowResources = 6; // sub class
  optional PlayerResource thumbnailResource = 7; // sub class
}
message uint_MasterCostume3dSet {
  optional uint32 uint_MasterCostume3dSet_key = 1; // normal type
  optional MasterCostume3dSet uint_MasterCostume3dSet_value = 2; // sub class
}
message MasterCostume3dSetMap {
  repeated uint_MasterCostume3dSet entries = 1; // dictionary
}
message MasterBondsSpecial3dCutIn {
  optional uint32 characterId = 1; // normal type
  optional uint32 couplingCharacterId = 2; // normal type
  optional string assetBundleName = 3; // normal type
}
message MasterBondsSpecial3dCutInList {
  repeated MasterBondsSpecial3dCutIn entries = 1; // list
}
message uint_MasterBondsSpecial3dCutInList {
  optional uint32 uint_MasterBondsSpecial3dCutInList_key = 1; // normal type
  optional MasterBondsSpecial3dCutInList uint_MasterBondsSpecial3dCutInList_value = 2; // sub class
}
message MasterBondsSpecial3dCutInListMap {
  repeated uint_MasterBondsSpecial3dCutInList entries = 1; // dictionary
}
message MasterCostume3dDressColorMap {
  repeated string_uint entries = 1; // dictionary
}
message MasterCostume3dHairstyleColorMap {
  repeated string_uint entries = 1; // dictionary
}
message MasterCostume3dCharacter {
  optional uint32 characterId = 1; // normal type
  optional uint32 costume3dGroupId = 2; // normal type
  optional MasterCostume3dDressColorMap dressCharacterColorMap = 3; // sub class
  optional MasterCostume3dHairstyleColorMap hairstyleCharacterColorMap = 4; // sub class
}
message uint_MasterCostume3dCharacter {
  optional uint32 uint_MasterCostume3dCharacter_key = 1; // normal type
  optional MasterCostume3dCharacter uint_MasterCostume3dCharacter_value = 2; // sub class
}
message MasterCostume3dCharacterMap {
  repeated uint_MasterCostume3dCharacter entries = 1; // dictionary
}
message uint_MasterCostume3dCharacterMap {
  optional uint32 uint_MasterCostume3dCharacterMap_key = 1; // normal type
  optional MasterCostume3dCharacterMap uint_MasterCostume3dCharacterMap_value = 2; // sub class
}
message MasterCostume3dCharacterGroupMap {
  repeated uint_MasterCostume3dCharacterMap entries = 1; // dictionary
}
message MasterCutIn3dCharacterInfo {
  optional uint32 characterId = 1; // normal type
  optional string cutIn3dCharacterAttribute = 2; // normal type
  optional string cutIn3dBackgroundAssetBundleName = 3; // normal type
  optional string cutIn3dBackgroundFileName = 4; // normal type
}
message uint_MasterCutIn3dCharacterInfo {
  optional uint32 uint_MasterCutIn3dCharacterInfo_key = 1; // normal type
  optional MasterCutIn3dCharacterInfo uint_MasterCutIn3dCharacterInfo_value = 2; // sub class
}
message MasterCutIn3dCharacterInfoMap {
  repeated uint_MasterCutIn3dCharacterInfo entries = 1; // dictionary
}
message MasterPurchaseStarDetail {
  optional uint32 purchaseId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string resourceType = 3; // normal type
  optional uint32 resourceId = 4; // normal type
  optional uint32 quantity = 5; // normal type
}
message MasterPurchaseStarDetailList {
  repeated MasterPurchaseStarDetail entries = 1; // list
}
message MasterPurchaseStar {
  optional uint32 purchaseId = 1; // normal type
  optional string purchaseCategory = 2; // normal type
  optional string starPaymentType = 3; // normal type
  optional uint32 purchaseStarQuantity = 4; // normal type
  optional string productName = 5; // normal type
  optional string description = 6; // normal type
  optional string label = 7; // normal type
  optional string resetType = 8; // normal type
  optional uint32 purchaseLimit = 9; // normal type
  optional uint64 publishedAt = 10; // normal type
  optional uint64 closedAt = 11; // nullable
  optional MasterPurchaseStarDetailList details = 12; // sub class
}
message MasterPurchaseStarList {
  repeated MasterPurchaseStar entries = 1; // list
}
message MasterPurchaseMenuSequence {
  optional uint32 purchaseId = 1; // normal type
  optional string purchaseType = 2; // normal type
  optional uint32 purchaseMenuId = 3; // normal type
  optional uint32 seq = 4; // normal type
}
message MasterPurchaseMenuSequenceList {
  repeated MasterPurchaseMenuSequence entries = 1; // list
}
message uint_MasterPurchaseMenuSequenceList {
  optional uint32 uint_MasterPurchaseMenuSequenceList_key = 1; // normal type
  optional MasterPurchaseMenuSequenceList uint_MasterPurchaseMenuSequenceList_value = 2; // sub class
}
message MasterPurchaseMenuSequenceMap {
  repeated uint_MasterPurchaseMenuSequenceList entries = 1; // dictionary
}
message MasterPurchase3dView {
  optional uint32 purchaseId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string purchaseType = 3; // normal type
  optional uint32 characterId = 4; // normal type
  optional uint32 costume3dDressId = 5; // normal type
  optional uint32 costume3dHairstyleId = 6; // normal type
}
message MasterPurchase3dViewList {
  repeated MasterPurchase3dView entries = 1; // list
}
message string_MasterPurchase3dViewList {
  optional string string_MasterPurchase3dViewList_key = 1; // normal type
  optional MasterPurchase3dViewList string_MasterPurchase3dViewList_value = 2; // sub class
}
message MasterPurchase3dViewMap {
  repeated string_MasterPurchase3dViewList entries = 1; // dictionary
}
message MasterInviteMissionReward {
  optional uint32 rewardSeq = 1; // normal type
  optional string resourceType = 2; // normal type
  optional uint32 resourceId = 3; // normal type
  optional uint32 quantity = 4; // normal type
}
message MasterInviteMissionRewardList {
  repeated MasterInviteMissionReward entries = 1; // array
}
message MasterInviteMission {
  optional uint32 missionId = 1; // normal type
  optional uint32 inviteId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string title = 4; // normal type
  optional string description = 5; // normal type
  optional string missionType = 6; // normal type
  optional string transitionMethod = 7; // normal type
  optional uint32 clearProgress = 8; // normal type
  optional MasterInviteMissionRewardList masterInviteMissionRewardList = 9; // sub class
}
message MasterInviteMissionList {
  repeated MasterInviteMission entries = 1; // array
}
message uint_MasterInviteMissionList {
  optional uint32 uint_MasterInviteMissionList_key = 1; // normal type
  optional MasterInviteMissionList uint_MasterInviteMissionList_value = 2; // sub class
}
message MasterInviteMissionListMap {
  repeated uint_MasterInviteMissionList entries = 1; // dictionary
}
message uint_MasterInviteMissionListMap {
  optional uint32 uint_MasterInviteMissionListMap_key = 1; // normal type
  optional MasterInviteMissionListMap uint_MasterInviteMissionListMap_value = 2; // sub class
}
message MasterInviteMissionListMaps {
  repeated uint_MasterInviteMissionListMap entries = 1; // dictionary
}
message MasterSellingItem {
  optional uint32 sellId = 1; // normal type
  optional string sellingResourceType = 2; // normal type
  optional uint32 sellingResourceId = 3; // normal type
  optional uint32 coinsQuantity = 4; // normal type
}
message uint_MasterSellingItem {
  optional uint32 uint_MasterSellingItem_key = 1; // normal type
  optional MasterSellingItem uint_MasterSellingItem_value = 2; // sub class
}
message MasterSellingItemMap {
  repeated uint_MasterSellingItem entries = 1; // dictionary
}
message string_MasterSellingItemMap {
  optional string string_MasterSellingItemMap_key = 1; // normal type
  optional MasterSellingItemMap string_MasterSellingItemMap_value = 2; // sub class
}
message MasterSellingItemMaps {
  repeated string_MasterSellingItemMap entries = 1; // dictionary
}
message MasterEnableCharacter3dMotion {
  optional uint32 motionId = 1; // normal type
  optional string motionType = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional uint64 publishedAt = 4; // normal type
}
message MasterEnableCharacter3dMotionList {
  repeated MasterEnableCharacter3dMotion entries = 1; // list
}
message string_MasterEnableCharacter3dMotionList {
  optional string string_MasterEnableCharacter3dMotionList_key = 1; // normal type
  optional MasterEnableCharacter3dMotionList string_MasterEnableCharacter3dMotionList_value = 2; // sub class
}
message MasterEnableCharacter3dMotionListMap {
  repeated string_MasterEnableCharacter3dMotionList entries = 1; // dictionary
}
message uint_MasterEnableCharacter3dMotionListMap {
  optional uint32 uint_MasterEnableCharacter3dMotionListMap_key = 1; // normal type
  optional MasterEnableCharacter3dMotionListMap uint_MasterEnableCharacter3dMotionListMap_value = 2; // sub class
}
message MasterEnableCharacter3dMotionTypeMap {
  repeated uint_MasterEnableCharacter3dMotionListMap entries = 1; // dictionary
}
message MasterInvite {
  optional uint32 inviteId = 1; // normal type
  optional uint32 inviteBonusId = 2; // normal type
  optional uint32 invitationDay = 3; // normal type
  optional uint64 startAt = 4; // normal type
  optional uint64 endAt = 5; // normal type
}
message MasterInviteList {
  repeated MasterInvite entries = 1; // array
}
message MasterDeviceSettingIos {
  optional string modelName = 1; // normal type
  optional int32 quality = 2; // normal type
}
message MasterDeviceSettingIosList {
  repeated MasterDeviceSettingIos entries = 1; // array
}
message MasterDeviceSettingAndroid {
  optional string gpuName = 1; // normal type
  optional int32 minValue = 2; // normal type
  optional int32 maxValue = 3; // normal type
  optional int32 quality = 4; // normal type
}
message MasterDeviceSettingAndroidList {
  repeated MasterDeviceSettingAndroid entries = 1; // array
}
message MasterCharacterCostume3dDefault {
  optional uint32 costume3dDressId = 1; // normal type
  optional uint32 costume3dHairstyleId = 2; // normal type
}
message uint_MasterCharacterCostume3dDefault {
  optional uint32 uint_MasterCharacterCostume3dDefault_key = 1; // normal type
  optional MasterCharacterCostume3dDefault uint_MasterCharacterCostume3dDefault_value = 2; // sub class
}
message MasterCharacterCostume3dDefaultMap {
  repeated uint_MasterCharacterCostume3dDefault entries = 1; // dictionary
}
message MasterConfigInitializeTutorial {
  optional uint32 configId = 1; // normal type
  optional string tutorialStatus = 2; // normal type
  optional uint32 actionSetId = 3; // normal type
  optional bool onlyTutorial = 4; // normal type
}
message uint_MasterConfigInitializeTutorial {
  optional uint32 uint_MasterConfigInitializeTutorial_key = 1; // normal type
  optional MasterConfigInitializeTutorial uint_MasterConfigInitializeTutorial_value = 2; // sub class
}
message MasterConfigInitializeTutorialMap {
  repeated uint_MasterConfigInitializeTutorial entries = 1; // dictionary
}
message MasterCostume3dShopBanner {
  optional uint32 bannerId = 1; // normal type
  optional string assetBundleName = 2; // normal type
  optional uint64 published_at = 3; // normal type
  optional uint64 closed_at = 4; // normal type
  optional uint32 purchaseMenuId = 5; // normal type
}
message MasterCostume3dShopBannerList {
  repeated MasterCostume3dShopBanner entries = 1; // array
}
message MasterGachaBonusBehavior {
  optional uint32 gachaBonusId = 1; // normal type
  optional uint32 round = 2; // normal type
  optional uint32 threshold = 3; // normal type
  optional string gachaBonusType = 4; // normal type
}
message MasterGachaBonusBehaviorList {
  repeated MasterGachaBonusBehavior entries = 1; // list
}
message uint_MasterGachaBonusBehaviorList {
  optional uint32 uint_MasterGachaBonusBehaviorList_key = 1; // normal type
  optional MasterGachaBonusBehaviorList uint_MasterGachaBonusBehaviorList_value = 2; // sub class
}
message MasterGachaBonus {
  optional uint32 gachaBonusId = 1; // normal type
  optional uint32 loopRound = 2; // normal type
  repeated uint_MasterGachaBonusBehaviorList gachaBonusBehaviorListMap = 3; // dictionary
  optional uint32 inheritGachaBonusId = 4; // normal type
  optional uint32 displayNameGachaId = 5; // normal type
  optional uint32 parentGachaBonusId = 6; // normal type
}
message uint_MasterGachaBonus {
  optional uint32 uint_MasterGachaBonus_key = 1; // normal type
  optional MasterGachaBonus uint_MasterGachaBonus_value = 2; // sub class
}
message MasterGachaBonusMap {
  repeated uint_MasterGachaBonus entries = 1; // dictionary
}
message MasterGachaBonusInformation {
  optional uint32 gachaBonusId = 1; // normal type
  optional string description = 2; // normal type
  optional string memberInformation = 3; // normal type
  optional string attention = 4; // normal type
}
message uint_MasterGachaBonusInformation {
  optional uint32 uint_MasterGachaBonusInformation_key = 1; // normal type
  optional MasterGachaBonusInformation uint_MasterGachaBonusInformation_value = 2; // sub class
}
message MasterGachaBonusInformationMap {
  repeated uint_MasterGachaBonusInformation entries = 1; // dictionary
}
message MasterGachaSealExchangeItem {
  optional uint32 gachaSealExchangeItemId = 1; // normal type
  optional uint32 gachaCeilingConfigId = 2; // normal type
  optional uint32 seq = 3; // normal type
  optional string resourceType = 4; // normal type
  optional uint32 resourceId = 5; // normal type
  optional uint32 cost = 6; // normal type
  optional uint32 quantity = 7; // normal type
}
message uint_MasterGachaSealExchangeItem {
  optional uint32 uint_MasterGachaSealExchangeItem_key = 1; // normal type
  optional MasterGachaSealExchangeItem uint_MasterGachaSealExchangeItem_value = 2; // sub class
}
message MasterGachaSealExchangeItemMap {
  repeated uint_MasterGachaSealExchangeItem entries = 1; // dictionary
}
message MasterSpecialStoryPageDetail {
  optional uint32 specialStoryPageId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string transitionMethod = 3; // normal type
  optional uint32 transitionId = 4; // normal type
  optional uint64 publishedAt = 5; // normal type
  optional uint64 closedAt = 6; // normal type
}
message MasterSpecialStoryPageDetailList {
  repeated MasterSpecialStoryPageDetail entries = 1; // array
}
message MasterSpecialStoryPage {
  optional uint32 specialStoryPageId = 1; // normal type
  optional uint64 publishedAt = 2; // normal type
  optional uint64 closedAt = 3; // normal type
  optional string assetBundleName = 4; // normal type
  optional string bgmAssetBundleName = 5; // normal type
  optional string bgmFileName = 6; // normal type
  optional MasterSpecialStoryPageDetailList details = 7; // sub class
}
message MasterSpecialStoryPageList {
  repeated MasterSpecialStoryPage entries = 1; // array
}
message uint_MasterMissionDetailList {
  optional uint32 uint_MasterMissionDetailList_key = 1; // normal type
  optional MasterMissionDetailList uint_MasterMissionDetailList_value = 2; // sub class
}
message MasterMissionDetailMap {
  repeated uint_MasterMissionDetailList entries = 1; // dictionary
}
message MasterMonthlyRankingReward {
  optional uint32 id = 1; // normal type
  optional uint32 monthlyRankingId = 2; // normal type
  optional uint32 fromRank = 3; // normal type
  optional uint32 toRank = 4; // normal type
  optional string rewardType = 5; // normal type
  optional uint32 rewardId = 6; // normal type
  optional uint32 rewardQuantity = 7; // normal type
}
message MasterMonthlyRankingGrade {
  optional uint32 id = 1; // normal type
  optional uint32 monthlyRankingId = 2; // normal type
  optional string gradeAheadType = 3; // normal type
  optional uint32 pt = 4; // normal type
  optional string rewardType = 5; // normal type
  optional uint32 rewardId = 6; // normal type
  optional uint32 rewardQuantity = 7; // normal type
  optional bool rankingThresholdFlg = 8; // normal type
}
message MasterMonthlyRanking {
  optional uint32 monthlyRankingId = 1; // normal type
  optional string monthlyRankingName = 2; // normal type
  optional string assetBundleName = 3; // normal type
  optional string bgmAssetBundleName = 4; // normal type
  optional string bgmFileName = 5; // normal type
  optional uint64 startAt = 6; // normal type
  optional uint64 endAt = 7; // normal type
  optional bool enableFlg = 8; // normal type
  optional uint64 publicStartAt = 9; // normal type
  optional uint64 publicEndAt = 10; // normal type
  optional uint64 distributionStartAt = 11; // normal type
  optional uint64 distributionEndAt = 12; // normal type
  optional uint64 receptionEndAt = 13; // normal type
  optional uint64 aggregateEndAt = 14; // normal type
  repeated MasterMonthlyRankingReward rewards = 101; // array
  repeated MasterMonthlyRankingGrade grades = 102; // array
}
message MasterMonthlyRankingList {
  repeated MasterMonthlyRanking entries = 1; // array
}
message MasterMonthlyRankingConfig {
  optional string configKeyType = 1; // normal type
  optional string value = 2; // normal type
}
message string_MasterMonthlyRankingConfig {
  optional string string_MasterMonthlyRankingConfig_key = 1; // normal type
  optional MasterMonthlyRankingConfig string_MasterMonthlyRankingConfig_value = 2; // sub class
}
message MasterMonthlyRankingConfigMap {
  repeated string_MasterMonthlyRankingConfig entries = 1; // dictionary
}
message MasterDecoEffect {
  optional uint32 decoEffectId = 1; // normal type
  optional uint32 seq = 2; // normal type
  optional string decoEffectName = 3; // normal type
  optional string resourceName = 4; // normal type
  optional string decoEffectType = 5; // normal type
  optional string assetBundleName = 6; // normal type
  optional string description = 7; // normal type
  optional uint64 startAt = 8; // normal type
  optional uint64 endAt = 9; // normal type
  optional uint32 inheritance = 10; // nullable
  optional bool isDefault = 11; // normal type
}
message MasterDecoEffectList {
  repeated MasterDecoEffect entries = 1; // array
}
message SuiteMasterGetResponse {
  optional MasterSubscriptionCountBonusRewardList masterSubscriptionCountBonusRewardList = 307; // sub class
  optional MasterTimerWordingCollectionMap masterTimerWordingCollectionMap = 309; // sub class
  optional MasterMatchingBonusMap masterMatchingBonusMap = 313; // sub class
  optional MasterMatchingBonusRewardList masterMatchingBonusRewardList = 314; // sub class
  optional MasterBandStoryIntroductionList masterBandStoryIntroductionList = 311; // sub class
  optional MasterEventStoryIntroductionList masterEventStoryIntroductionList = 312; // sub class
  optional MasterIngameV2TalkingMap masterIngameV2TalkingMap = 316; // sub class
  optional MasterIngameV2SpecialTalkingMap masterIngameV2SpecialTalkingMap = 317; // sub class
  optional MasterMultiFestivalLiveMatchingLogicList masterMultiFestivalLiveMatchingLogicList = 811; // sub class
  optional MasterMultiFestivalLiveTeamMatchingLogicList masterMultiFestivalLiveTeamMatchingLogicList = 812; // sub class
  optional MasterFestivalJudgeRateList masterFestiivalJudgeRateList = 817; // sub class
  optional MasterFestivalLifeRateList masterFestivalLifeRateList = 818; // sub class
  optional MasterFestivalComboRateList masterFestivalComboRateList = 819; // sub class
  optional MasterQualifyTournamentComboRateList masterQualifyTournamentComboRateList = 821; // sub class
  optional MasterMusicListGetResponse masterMusicList = 1; // sub class
  optional MasterMusicDifficultyListGetResponse masterMusicDifficultyList = 2; // sub class
  optional MasterMultiLiveDifficultyMap masterMultiLiveDifficultyMap = 28; // sub class
  optional MasterCharacterInfoMap masterCharacterInfoMap = 3; // sub class
  optional MasterCharacterSituationMap masterCharacterSituationMap = 4; // sub class
  optional MasterBandExpTableMap masterBandExpTableMap = 5; // sub class
  optional MasterLeaderSkillMap masterLeaderSkillMap = 6; // sub class
  optional MasterGachaMap masterGachaMap = 7; // sub class
  optional MasterSituationSkillMap masterSituationSkillMap = 8; // sub class
  optional MasterAreaItemMap masterAreaItemMap = 9; // sub class
  optional MasterBondsMap masterBondsMap = 10; // sub class
  optional MasterBondsEffectMap masterBondsEffectMap = 11; // sub class
  optional MasterShopMap masterShopMap = 12; // sub class
  optional MasterShoplistMap masterShopListMap = 13; // sub class
  optional MasterActionSetMap masterActionSetMap = 14; // sub class
  optional MasterAreaMap masterAreaMap = 15; // sub class
  optional MasterBandMap masterBandMap = 16; // sub class
  optional MasterPlayerExpTableMap masterPlayerExpTableMap = 17; // sub class
  optional MasterPracticeTicketMap masterPracticeTicketMap = 19; // sub class
  optional MasterSituationExpTableMap masterSituationExpTableMap = 20; // sub class
  optional MasterMainStoryMap masterMainStoryMap = 21; // sub class
  optional MasterBandStoryMap masterPoppinPartyStoryMap = 22; // sub class
  optional MasterBandStoryMap masterAfterglowStoryMap = 23; // sub class
  optional MasterBandStoryMap masterPastelPalettesStoryMap = 24; // sub class
  optional MasterBandStoryMap masterHelloHappyWorldStoryMap = 25; // sub class
  optional MasterBandStoryMap masterRoseliaStoryMap = 26; // sub class
  optional MasterItemMap masterItemMap = 27; // sub class
  optional MasterCommonsLive2dMap masterCommonsLive2dMap = 29; // sub class
  optional MasterMusicShopMap masterMusicShopMap = 30; // sub class
  optional MasterCostumeMap masterCostumeMap = 31; // sub class
  optional MasterAfterLiveTalkMap masterAfterLiveTalkMap = 32; // sub class
  optional MasterAreaItemSpawnMap masterAreaItemSpawnMap = 33; // sub class
  optional ServerSystem system = 34; // sub class
  optional MasterCharacterRarityMap masterCharacterRarityMap = 35; // sub class
  optional MasterExchangesMap masterExchangesMap = 36; // sub class
  optional MasterGachaTicketMap masterGachaTicketMap = 37; // sub class
  optional MasterPurchaseMap masterPurchaseMap = 39; // sub class
  optional MasterProductList masterProductList = 40; // sub class
  optional MasterLoginBonusMap masterLoginBonusMap = 41; // sub class
  optional MasterHomeBannerList masterHomeBannerList = 43; // sub class
  optional MasterPremiumPassList masterPremiumPassList = 44; // sub class
  optional Constants constants = 45; // sub class
  optional MasterStampMap masterStampMap = 46; // sub class
  optional MasterDegreeMap masterDegreeMap = 47; // sub class
  optional MasterCharacterProfileLive2dMap masterCharacterProfileLive2dMap = 48; // sub class
  optional MasterWeeklyMultiLiveDifficultyMap masterWeeklyMultiLiveDifficultyMap = 49; // sub class
  optional MasterCommonConfigMap masterCommonConfigMap = 50; // sub class
  optional MasterSkillList masterSkillList = 51; // sub class
  optional MasterSituationSkillExpTableList masterSituationSkillExpTableList = 52; // sub class
  optional MasterSkillActivateEffectList masterSkillActivateEffectList = 56; // sub class
  optional MasterSkillOnceEffectList masterSkillOnceEffectList = 57; // sub class
  optional MasterLiveBoostRecoveryItemMap masterLiveBoostRecoveryItemMap = 58; // sub class
  optional MasterGenericStoryMap masterGenericStoryMap = 59; // sub class
  optional MasterSeasonBasicMap masterSeasonBasicMap = 60; // sub class
  optional MasterSeasonSpecialMap masterSeasonSpecialMap = 61; // sub class
  optional MasterAreaSeasonBasicMap masterAreaSeasonBasicMap = 62; // sub class
  optional MasterAreaSeasonSpecialMap masterAreaSeasonSpecialMap = 63; // sub class
  optional MasterSeasonSpecialBgmMap masterSeasonSpecialBgmMap = 64; // sub class
  optional MasterQualifyTournamentMap masterQualifyTournamentMap = 65; // sub class
  optional MasterQualifyTournamentDeckMap masterQualifyTournamentDeckMap = 66; // sub class
  optional MasterQualifyTournamentMusicMap masterQualifyTournamentMusicMap = 67; // sub class
  optional MasterEventStoryMemorialConfigMap masterEventStoryMemorialConfigMap = 68; // sub class
  optional MasterEventStoryMemorialReleaseConditionMap masterEventStoryMemorialReleaseConditionMap = 69; // sub class
  optional MasterBandRanksMap masterBandRanksMap = 70; // sub class
  optional MasterPlayerRankList masterPlayerRankList = 71; // sub class
  optional MasterWordingCollectionMap masterWordingCollectionMap = 72; // sub class
  optional MasterMiracleTicketMap masterMiracleTicketMap = 73; // sub class
  optional MasterMiracleTicketExchangesMap masterMiracleTicketExchangesMap = 74; // sub class
  optional MasterSpecialLotteryMap masterSpecialLotteryMap = 75; // sub class
  optional MasterBirthdayStoryMap masterBirthdayStoryMap = 77; // sub class
  optional MasterBirthdayPageMap masterBirthdayPageMap = 78; // sub class
  optional MasterSkin masterSkin = 79; // sub class
  optional MasterCharacterInGameVoice masterCharacterInGameVoice = 80; // sub class
  optional MasterPickupSituationMap masterPickupSituationMap = 81; // sub class
  optional MasterSingleFrameCartoonMap masterSingleFrameCartoonMap = 82; // sub class
  optional MasterSingleFrameCartoonCharacterMap masterSingleFrameCartoonCharacterMap = 83; // sub class
  optional MasterFourFrameCartoonMap masterFourFrameCartoonMap = 84; // sub class
  optional MasterFourFrameCartoonCharacterMap masterFourFrameCartoonCharacterMap = 85; // sub class
  optional MasterMusicVideoListMap masterMusicVideoListMap = 109; // sub class
  optional MasterPurchaseMenuList masterPurchaseMenuList = 110; // sub class
  optional MasterBandStoryChapterMap masterBandStoryChapterMap = 87; // sub class
  optional MasterNewMusicIntroductionMap masterNewMusicIntroductionMap = 89; // sub class
  optional MasterSituationFirstAppearanceMap masterSituationFirstAppearanceMap = 90; // sub class
  optional MasterCollaborationSkinMap masterCollaborationSkinMap = 91; // sub class
  optional MasterGenericStoryMap masterOpeningAreaGenericStoryMap = 92; // sub class
  optional MasterNewYearCardMap masterNewYearCardMap = 94; // sub class
  optional MasterMusicJacketMap masterMusicJacketMap = 95; // sub class
  optional MasterBackstageTalkSetMap masterBackstageTalkSetMap = 96; // sub class
  optional MasterBackstageSpineMap masterBackstageSpineMap = 97; // sub class
  optional MasterBackstageBackgroundMap masterBackstageBackgroundMap = 98; // sub class
  optional MasterBackstageMusicMap masterBackstageMusicMap = 99; // sub class
  optional MasterSafeAreaDeviceMap masterSafeAreaDeviceMap = 100; // sub class
  optional MasterEventMap masterEventMap = 101; // sub class
  optional MasterEventConfigMap masterEventConfigMap = 102; // sub class
  optional MasterVibratableDeviceMap masterVibratableDeviceMap = 103; // sub class
  optional MasterElectionMap masterElectionMap = 104; // sub class
  optional MasterElectionBandMap masterElectionBandMap = 105; // sub class
  optional MasterElectionTicketMap masterElectionTicketMap = 106; // sub class
  optional MasterSnsShareRewardMap masterSnsShareRewardMap = 107; // sub class
  optional MasterSnsShareMap masterSnsShareMap = 108; // sub class
  optional MasterDecoFrameMap masterDecoFrameMap = 111; // sub class
  optional MasterDecoPinsMap masterDecoPinsMap = 112; // sub class
  optional MasterDecoPinsSetMap masterDecoPinsSetMap = 113; // sub class
  optional MasterStoryEventMap masterStoryEventMap = 201; // sub class
  optional MasterEventLiveBoostMap masterEventLiveBoostMap = 202; // sub class
  optional MasterEventExchangesList masterEventExchangesList = 203; // sub class
  optional MasterEventItemMap masterEventItemMap = 204; // sub class
  optional MasterEventMap masterEventMapForExchanges = 205; // sub class
  optional MasterEventLoginRewardMap masterEventLoginRewardMap = 206; // sub class
  optional MasterChallengeEventMap masterChallengeEventMap = 207; // sub class
  optional MasterEventLiveContributionMap masterEventLiveContributionMap = 208; // sub class
  optional MasterMultiVersusLiveScoreMap masterMultiVersusLiveScoreMap = 209; // sub class
  optional MasterMultiVersusLiveMatchingLogicList masterMultiVersusLiveMatchingLogicList = 210; // sub class
  optional MasterVersusEventMap masterVersusEventMap = 211; // sub class
  optional MasterEventBoxGachaMap masterEventBoxGachaMap = 212; // sub class
  optional MasterLiveTryEventMap masterLiveTryEventMap = 213; // sub class
  optional MasterEventSituationMap masterEventSituationMap = 214; // sub class
  optional MasterMissionLiveEventMap masterMissionLiveEventMap = 215; // sub class
  optional MasterPremiumPassDetailMap masterPremiumPassDetailMap = 216; // sub class
  optional MasterNewSituationIntroductionList masterNewSituationIntroductionList = 300; // sub class
  optional MasterGachaInformationMap masterGachaInformationMap = 301; // sub class
  optional MasterGenericAnimationMap masterGenericAnimationMap = 302; // sub class
  optional MasterGachaCeilingConfigMap masterGachaCeilingConfigMap = 303; // sub class
  optional MasterGachaSealInformationMap masterGachaSealInformationMap = 304; // sub class
  optional MasterSubscriptionDetailList masterSubscriptionDetailList = 306; // sub class
  optional MasterGraphicalInformationList masterGraphicalInformationList = 308; // sub class
  optional MasterBandStoryMap masterMorfonicaStoryMap = 401; // sub class
  optional MasterDailyLiveRewardList masterDailyLiveRewardList = 405; // sub class
  optional MasterEventMovieList masterEventMovieList = 406; // sub class
  optional MasterCollaboOriginalMusicPageList masterCollaboOriginalMusicPageList = 408; // sub class
  optional MasterBandStoryMap masterRaiseASuilenStoryMap = 402; // sub class
  optional MasterDailyLiveList masterDailyLiveList = 409; // sub class
  optional MasterMissionGroupList masterMissionGroupList = 500; // sub class
  optional MasterMissionValueList masterMissionValueList = 501; // sub class
  optional MasterMissionDetailValueList masterMissionDetailValueList = 502; // sub class
  optional MasterLiveBoostBonusList masterLiveBoostBonusList = 600; // sub class
  optional MasterComebackBonusList masterComebackBonusList = 601; // sub class
  optional MasterBandStoryChapterSpecialPageList masterBandStoryChapterSpecialPageList = 602; // sub class
  optional MasterDigestPrecedingStoryList masterDigestPrecedingStoryList = 603; // sub class
  optional MasterDigestStoryDetailList masterDigestStoryDetailList = 604; // sub class
  optional MasterMultiBandRoomList masterMultiBandRoomList = 605; // sub class
  optional MasterMultiLiveCountConfigList masterMultiLiveCountConfigList = 606; // sub class
  optional MasterCountdownReward masterCountdownReward = 607; // sub class
  optional MasterSpecialPageList masterSpecialPageList = 608; // sub class
  optional MasterBroadcastProgramSpecialPageList masterBroadcastProgramSpecialPageList = 609; // sub class
  optional MasterPlaybackListSpecialPageList masterPlaybackListSpecialPageList = 610; // sub class
  optional MasterPlaybackListSpecialPageDetailList masterPlaybackListSpecialPageDetailList = 611; // sub class
  optional MasterMultiBandRoomDifficultyList masterMultiBandRoomDifficultyList = 612; // sub class
  optional MasterWeeklyMultiBandRoomDifficultyList masterWeeklyMultiBandRoomDifficultyList = 613; // sub class
  optional MasterCountDownPageList masterCountDownPageList = 614; // sub class
  optional MasterPanelMissionMap masterPanelMissionMap = 700; // sub class
  optional MasterPanelMissionValueList masterPanelMissionValueList = 701; // sub class
  optional MasterBirthdayIntroductionList masterBirthdayIntroductionList = 703; // sub class
  optional MasterFestivalRotationMusicList masterFestivalRotationMusicList = 807; // sub class
  optional MasterFestivalStageList masterFestivalStageList = 808; // sub class
  optional MasterFestivalStageDescriptionList masterFestivalStageDescriptionList = 813; // sub class
  optional MasterFestivalEventMap masterFestivalEventMap = 815; // sub class
  optional MasterMultiFestivalLiveScoreMap masterMultiFestivalLiveScoreMap = 816; // sub class
  optional MasterEventFestivalTeamRewardMap masterEventFestivalTeamRewardMap = 822; // sub class
  optional MasterFestivalDisplayPointRateList masterFestivalDisplayPointRateList = 823; // sub class
  optional MasterGachaSealExchangeList masterGachaSealExchangeList = 900; // sub class
  optional MasterDegreeSetList masterDegreeSetList = 1000; // sub class
  optional MasterDegreeSetDetailList masterDegreeSetDetailList = 1001; // sub class
  optional MasterChangedStampList masterChangedStampList = 1002; // sub class
  optional MasterChangedStampDetailList masterChangedStampDetailList = 1003; // sub class
  optional MasterLimitedItemList masterLimitedItemList = 1102; // sub class
  optional MasterLimitedExchangesList masterLimitedExchangesList = 1103; // sub class
  optional MasterLimitedExchangesDetailList masterLimitedExchangesDetailList = 1104; // sub class
  optional MasterLive2dTalkSetList masterLive2dTalkSetList = 1150; // sub class
  optional MasterLive2dTalkMap masterLive2dTalkMap = 1151; // sub class
  optional MasterLive2dSerifMap masterLive2dSerifMap = 1152; // sub class
  optional MasterAnimationSituationList masterAnimationSituationList = 1153; // sub class
  optional MasterMedleyMusicScoreList masterMedleyMusicScoreList = 1160; // sub class
  optional MasterMedleyEventMap masterMedleyEventMap = 1161; // sub class
  optional MasterMedleyComboRateList masterMedleyComboRateList = 1162; // sub class
  optional MasterSpecialLotteryCharacterMap masterSpecialLotteryCharacterMap = 1170; // sub class
  optional MasterDeckRankInfo masterDeckRankInfo = 1181; // sub class
  optional MasterStageChallengeList masterStageChallengeList = 1190; // sub class
  optional MasterStageChallengeStageNoMap masterStageChallengeStageNoMap = 1191; // sub class
  optional MasterStageChallengeStageNoCharacterMap masterStageChallengeStageNoCharacterMap = 1192; // sub class
  optional MasterStageChallengeAchievementMap masterStageChallengeAchievementMap = 1195; // sub class
  optional MasterStageChallengeRewardMap masterStageChallengeRewardMap = 1196; // sub class
  optional MasterStarSealExchangeDetailMap masterStarSealExchangeDetailMap = 1200; // sub class
  optional MasterLiveBoostBonusRateMap masterLiveBoostBonusRateMap = 1203; // sub class
  optional MasterMonthlyMissionSeasonMap masterMonthlyMissionSeasonMap = 1210; // sub class
  optional MasterMonthlyMissionRewardListMap masterMonthlyMissionRewardListMap = 1211; // sub class
  optional MasterCharacterRankList masterCharacterRankList = 2000; // sub class
  optional MasterCharacterRankRewardListMap masterCharacterRankRewardListMap = 2001; // sub class
  optional MasterCharacterPotentialLevelList masterCharacterPotentialLevelList = 2002; // sub class
  optional MasterMainStoryDetailList masterMainStoryDetailList = 2003; // sub class
  optional MasterMusicVideo3dMap masterMusicVideo3dMap = 2004; // sub class
  optional MasterCostume3dDressMap masterCostume3dDressMap = 2006; // sub class
  optional MasterCostume3dHairstyleMap masterCostume3dHairstyleMap = 2007; // sub class
  optional MasterCostume3dHowToGetMap masterCostume3dDressHowToGetMap = 2008; // sub class
  optional MasterCostume3dMakingCostMap masterCostume3dMakingCostMap = 2009; // sub class
  optional MasterCostumeHowToGetMap masterCostumeHowToGetMap = 2010; // sub class
  optional MasterEventLeastMap masterEventLeastMap = 2011; // sub class
  optional MasterDecoCharacterLive2dMotionListCharacterMap masterDecoCharacterLive2dMotionListCharacterMap = 2012; // sub class
  optional MasterCharacter3dMotionListCharacterMap masterCharacter3dMotionListCharacterMap = 2013; // sub class
  optional MasterDecoCharacterBackgroundMap masterDecoCharacterBackgroundMap = 2014; // sub class
  optional MasterDecoAppealMap masterDecoAppealMap = 2015; // sub class
  optional MasterCostume3dHowToGetMap masterCostume3dHairstyleHowToGetMap = 2017; // sub class
  optional MasterDecoCharacterLive2dPositionMap masterDecoCharacterLive2dPositionMap = 2020; // sub class
  optional MasterDecoCharacter3dPositionMap masterDecoCharacter3dPositionMap = 2021; // sub class
  optional MasterDecoCharacter3dMotionHowToGetListMap masterDecoCharacter3dMotionHowToGetListMap = 2023; // sub class
  optional MasterDecoCharacterBackgroundHowToGetListMap masterDecoCharacterBackgroundHowToGetListMap = 2024; // sub class
  optional MasterDecoFrameHowToGetListMap masterDecoFrameHowToGetListMap = 2025; // sub class
  optional MasterDecoCharacter3dMotionSetMap masterDecoCharacter3dMotionSetMap = 2028; // sub class
  optional MasterDecoCharacter3dMotionSetDetailListMap masterDecoCharacter3dMotionSetDetailListMap = 2029; // sub class
  optional MasterDecoCharacterSituationPositionMap masterDecoCharacterSituationPositionMap = 2031; // sub class
  optional MasterCutInSituationPositionListMap masterCutInSituationPositionListMap = 2033; // sub class
  optional MasterDecoCharacterLive2dLimitedMotionMap masterDecoCharacterLive2dLimitedMotionMap = 2034; // sub class
  optional MasterMusicVideo3dIdListMap masterMusicVideo3dIdListMap = 2036; // sub class
  optional MasterCostume3dGroupMap masterCostume3dGroupMap = 2037; // sub class
  optional MasterCharacter3dMotionMap masterCharacter3dMotionMap = 2039; // sub class
  optional MasterDecoCharacterLive2dMotionMap masterDecoCharacterLive2dMotionMap = 2040; // sub class
  optional MasterCostume3dMakingItemMap masterCostume3dMakingItemMap = 2041; // sub class
  optional MasterMusicLargeCategoryDataMap masterMusicLargeCategoryDataMap = 2045; // sub class
  optional MasterMusicMediumCategoryDataMap masterMusicMediumCategoryDataMap = 2046; // sub class
  optional MasterMusicCategoryInfoMap masterMusicCategoryInfoMap = 2047; // sub class
  optional MasterMusicCategoryInfoTargets masterMusicCategoryInfoTargets = 2048; // sub class
  optional MasterMusicCategorySetMap masterMusicCategorySetMap = 2049; // sub class
  optional MasterLimitBreakItemList masterLimitBreakItemList = 2042; // sub class
  optional MasterProp3dMap masterProp3dMap = 2050; // sub class
  optional MasterMusicVideo3dPropMap masterMusicVideo3dPropMap = 2051; // sub class
  optional MasterMultiLiveMatchingLogicListMap masterMultiLiveMatchingLogicListMap = 2052; // sub class
  optional MasterCutInCharacterPropDetailMap masterCutInCharacterPropDetailMap = 2056; // sub class
  optional MasterLimitBreakMap masterLimitBreakMap = 2057; // sub class
  optional MasterLimitBreakRewardListMap masterLimitBreakRewardListMap = 2058; // sub class
  optional MasterLimitBreakRewardExpListMap masterLimitBreakRewardExpListMap = 2059; // sub class
  optional MasterCostume3dSetMap masterCostume3dSetMap = 2060; // sub class
  optional MasterBondsSpecial3dCutInListMap masterBondsSpecial3dCutInListMap = 2062; // sub class
  optional MasterCostume3dCharacterGroupMap masterCostume3dCharacterGroupMap = 2063; // sub class
  optional MasterCutIn3dCharacterInfoMap masterCutIn3dCharacterInfoMap = 2064; // sub class
  optional MasterPurchaseStarList masterPurchaseStarList = 2065; // sub class
  optional MasterPurchaseMenuSequenceMap masterPurchaseMenuSequenceMap = 2066; // sub class
  optional MasterPurchase3dViewMap masterPurchase3dViewMap = 2067; // sub class
  optional MasterInviteMissionListMaps masterInviteMissionListMaps = 2068; // sub class
  optional MasterSellingItemMaps masterSellingItemMaps = 2070; // sub class
  optional MasterEnableCharacter3dMotionTypeMap masterEnableCharacter3dMotionTypeMap = 2071; // sub class
  optional MasterInviteList masterInviteList = 2072; // sub class
  optional MasterDeviceSettingIosList masterDeviceSettingIosList = 2073; // sub class
  optional MasterDeviceSettingAndroidList masterDeviceSettingAndroidList = 2074; // sub class
  optional MasterCharacterCostume3dDefaultMap masterCharacterCostume3dDefaultMap = 2075; // sub class
  optional MasterConfigInitializeTutorialMap masterConfigInitializeTutorialMap = 2076; // sub class
  optional MasterCostume3dShopBannerList masterCostume3dShopBannerList = 2077; // sub class
  optional MasterGachaBonusMap masterGachaBonusMap = 2078; // sub class
  optional MasterGachaBonusInformationMap masterGachaBonusInformationMap = 2079; // sub class
  optional MasterBandStoryMap masterMyGoStoryMap = 2080; // sub class
  optional MasterGachaSealExchangeItemMap masterGachaSealExchangeItemMap = 2081; // sub class
  optional MasterSpecialStoryPageList masterSpecialStoryPageList = 2082; // sub class
  optional MasterGenericStoryMap masterSpecialPageGenericStoryMap = 2083; // sub class
  optional MasterMissionDetailMap masterMissionDetailMap = 54; // sub class
  optional MasterMonthlyRankingList masterMonthlyRankingList = 2084; // sub class
  optional MasterMonthlyRankingConfigMap masterMonthlyRankingConfigMap = 2085; // sub class
  optional MasterDecoEffectList masterDecoEffectList = 2086; // sub class
}
